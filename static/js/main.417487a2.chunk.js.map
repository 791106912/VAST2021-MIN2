{"version":3,"sources":["data/consumer_data.js","data/buliding_coordinate.js","utils/index.js","components/consumerGraph/index.jsx","components/carTrack/index.jsx","dataCal/index.jsx","secondQ/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["timeArr","dayStr","storeClassify","type","data","storeMapType","chain","map","flatten","reduce","obj","d","find","d1","includes","value","timeClassifyData","name","ccLoyMap","carAssign","storeButtonArr","s","e","building_coordinate","desc","range","classify","pushOrPop","arr","mode","newArr","filter","push","add","a","b","parseFloat","Number","toFixed","calHourTime","hour","hourStr","toString","match","length","moment","unix","calcualteTypeColor","id","domain","colorScale","scaleOrdinal","sort","ascending","schemeCategory10","calcualteStoreColor","store","findLocaiton","coor","long","lat","sp","ep","ConsumerGraph","containerRef","useRef","useState","width","height","size","setsize","useMemo","radiusArr","maxSize","Math","min","minR","max","item","useEffect","current","clientWidth","clientHeight","showTrack","setshowTrack","selectMode","setselectMode","mergefun","setMergeFun","anagleScale","scaleLinear","dayScale","extent","timeScale","PI","consumePath","arc","innerRadius","day","outerRadius","startAngle","time","endAngle","originCCdata","setOriginCCdata","activeStore","setActiveStore","activeClassify","setActiveClassify","activeCustom","setActiveCustom","consumeData","location","ccNumData","setccNumData","json","then","res","newConsumeData","timestamp","split","locationType","loyaltynum","newLoy","uniq","nodeData","Object","keys","sortBy","arcData","price","values","linksObj","forEach","key1","d2","key2","source","target","calData","nodes","links","drawForce","radius","force","forceSimulation","forceLink","strength","forceManyBody","forceCollide","node","i","x1","y1","x2","y2","sqrt","pow","distance","x","y","theta","atan","cos","sin","selectAll","each","select","this","attr","thisData","call","drag","on","alpha","restart","fx","fy","event","remove","link","enter","append","exitCCArr","priceOpacity","extents","locationPriceObj","num","locationOpacity","storePath","inner","outer","padAngle","cornerRadius","timePath","middleArcLine","angles","r1","middleAngle","invertDirection","reverse","pathFun","path","pointObj","key","centroid","activeTimeData","replace","trackPath","line","curve","curveCatmullRom","weekDay","className","ref","transform","text","format","textOpactiy","opacity","cx","cy","r","dy","textPathHrefProps","fill","textPathProps","href","startOffset","dominantBaseline","storeType","fillOpacity","JSON","stringify","entries","storeName","gap","stroke","textAnchor","middle","isBottom","onClick","newActiveStore","newType","join","thisConsumeData","total","t","thisAngleScale","thisArcFun","index","findIndex","startValue","slice","endValue","newActiveClassisy","htmlFor","checked","onChange","originColor","bgColor","color","style","backgroundColor","borderColor","timeRange","top","left","graphHeight","createLine","curveStep","CarTrack","scaleTime","Date","tickValues","tickFormat","axisBottom","scale","axisTop","originData","setoriginData","gps","unknowCount","newStopArr","stopArr","locationInfo","console","log","carid","carIdScale","scaleBand","calCarColor","schemePaired","activeCarId","setactiveCarId","dayStrScale","paddingInner","activetime","setactivetime","disabledLocation","setDisabledLocation","useData","setuseData","st","heightScale","stopLegend","setstopLegend","detailLocation","setdetailLocation","carStopArr","useStopArr","parseInt","calcualteTimeRange","newStopLegend","maxValue","countBy","maxBy","timeScaleObj","countObj","countData","orderBy","sum","sumBy","totalSpace","topItem","valuePrv","idArr","stopLocation","dataArr","getTime","et","count","carTrack","car","track","stopItem","sourceRange","targetRange","pathWidthScale","display","content","tooltips","settooltips","closeTips","gAttr","bandwidth","newCarId","circleAttr","dx","spaceItem","newActiveTime","rectAttr","x0","xhalf","lineAttr","strokeDasharray","textAttr","fontSize","carColor","sourceY","sourceScale","targetScale","targetY","sourStop","sourceX","targetStop","targetX","pathArr","pathAttr","strokeWidth","strokeOpacity","sx","ex","rectheight","rectWidth","onMouseEnter","relateCar","onMouseOut","scalePower","transformX","transformY","transition","ease","easeLinear","duration","storeKey","starttime","endtime","background","itemAttr","Cal","svgRef","SecondQ","mapRef","trackRef","setmap","allTrack","setAllTrack","projection","geoEquirectangular","selectCar","setSelectCard","selectDay","setSelectDay","selectHour","setSelectHour","carArr","info","CarID","FirstName","LastName","CurrentEmploymentType","title","CurrentEmploymentTitle","fitSize","window","features","brushRef","brush","selection","invert","parse","thisTime","stopCircleRScale","tooltip","src","alt","geoPath","geoArr","Timestamp","attr2","keyItem","cpname","fontWeight","TextEvent","newSelectCar","SplitTrack","GasData","selectDayCB","brushCB","hourArr","playCB","getTotalLength","realHeight","realWidth","topRef","bottomRef","xScale","topAxis","bottomAxis","brushX","axisPosScale","scalePoint","align","gpsArr","cloneDeep","trackItem","stopDot","step","xItem","delay","val","carItem","dayitem","dayName","moveTo","lineTo","rx","ry","Content","children","App","to","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";gaAEaA,EAAU,CACnB,WACE,UACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,WACA,YAGOC,EAAS,CAClB,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAiESC,EAAgB,CACzB,CACIC,KAAM,WACNC,KAAM,CACF,sBACA,mBACA,kBACA,eACA,uBACA,uBACA,sBAGR,CACID,KAAM,aACNC,KAAM,CACF,gBACA,eACA,eACA,kBACA,cACA,gBACA,gBAGR,CACID,KAAM,WACNC,KAAM,CACF,gBACA,sBACA,yBACA,wBACA,kBACA,4BACA,gBACA,6BACA,iCAGR,CACID,KAAM,cACNC,KAAM,CACF,eACA,WAGR,CACID,KAAM,SACNC,KAAM,CACF,yBACA,cACA,cACA,oBACA,4BACA,mBAGR,CACID,KAAM,gBACNC,KAAM,CACF,sBACA,mBACA,mBAKCC,EAAeC,gBAAMJ,GAC7BK,IAAI,QACJC,UACAC,QAAO,SAACC,EAAKC,GAEV,OADAD,EAAIC,GAAKT,EAAcU,MAAK,SAAAC,GAAE,OAAIA,EAAGT,KAAKU,SAASH,MAAIR,KAChDO,IACR,IACFK,QAEQC,EAAmB,CAC5B,CACIZ,KAAM,EAAE,EAAG,GACXa,KAAM,YAEV,CACIb,KAAM,CAAC,EAAG,GACVa,KAAM,sBAEV,CACIb,KAAM,CAAC,EAAG,IACVa,KAAM,WAEV,CACIb,KAAM,CAAC,GAAI,IACXa,KAAM,eAEV,CACIb,KAAM,CAAC,GAAI,IACXa,KAAM,WAEV,CACIb,KAAM,CAAC,GAAI,IACXa,KAAM,eAKDC,EAAW,CACpB,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,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","file":"static/js/main.417487a2.chunk.js","sourcesContent":["import { chain } from \"lodash\"\n\nexport const timeArr = [\n    1388937600\n    , 1389024000\n    , 1389110400\n    , 1389196800\n    , 1389283200\n    , 1389369600\n    , 1389456000\n    , 1389542400\n    , 1389628800\n    , 1389715200\n    , 1389801600\n    , 1389888000\n    , 1389974400\n    , 1390060800\n]\n\nexport const dayStr = [\n    '01/06/2014',\n    '01/07/2014',\n    '01/08/2014',\n    '01/09/2014',\n    '01/10/2014',\n    '01/11/2014',\n    '01/12/2014',\n    '01/13/2014',\n    '01/14/2014',\n    '01/15/2014',\n    '01/16/2014',\n    '01/17/2014',\n    '01/18/2014',\n    '01/19/2014',\n]\n\nexport const storeClassify1 = [\n    {\n        type: 'restaurant',\n        data: [\n            \"Brew've Been Served\",\n            'Hallowed Grounds',\n            'Coffee Cameleon',\n            'Coffee Shack',\n            'Bean There Done That',\n            \"Jack's Magical Beans\",\n            'Brewed Awakenings',\n            'Katerinas Caf',\n            'Gelatogalore',\n            'Ouzeri Elian',\n            'Kalami Kafenion',\n            'Hippokampos',\n            'Abila Zacharo',\n            \"Guy's Gyros\",\n        ],\n    },\n    {\n        type: 'parnter',\n        data: [\n            'Abila Airport',\n            'Nationwide Refinery',\n            'Maximum Iron and Steel',\n            'Carlyle Chemical Inc.',\n            'Abila Scrapyard',\n            \"Octavio's Office Supplies\",\n            'Chostus Hotel',\n            \"Frank's Fuel\",\n            'Kronos Pipe and Irrigation',\n            'Stewart and Sons Fabrication',\n        ],\n    },\n    {\n        type: 'shop',\n        data: [\n            \"Albert's Fine Clothing\",\n            'Kronos Mart',\n            'Daily Dealz',\n            \"Shoppers' Delight\",\n            'Ahaggo Museum',\n        ],\n    },\n    {\n        type: 'entertainment',\n        data: [\n            \"Desafio Golf Course\",\n            'Roberts and Sons',\n        ],\n    },\n    {\n        type: 'other',\n        data: [\n            'U-Pump',\n            'General Grocer',\n            \"Frydos Autosupply n' More\",\n        ]\n    }\n]\n\nexport const storeClassify = [\n    {\n        type: 'FastFood',\n        data: [\n            \"Brew've Been Served\",\n            'Hallowed Grounds',\n            'Coffee Cameleon',\n            'Coffee Shack',\n            'Bean There Done That',\n            \"Jack's Magical Beans\",\n            'Brewed Awakenings',\n        ],\n    },\n    {\n        type: 'Restaurant',\n        data: [\n            'Katerinas Caf',\n            'Gelatogalore',\n            'Ouzeri Elian',\n            'Kalami Kafenion',\n            'Hippokampos',\n            'Abila Zacharo',\n            \"Guy's Gyros\",\n        ],\n    },\n    {\n        type: 'Industry',\n        data: [\n            'Abila Airport',\n            'Nationwide Refinery',\n            'Maximum Iron and Steel',\n            'Carlyle Chemical Inc.',\n            'Abila Scrapyard',\n            \"Octavio's Office Supplies\",\n            'Chostus Hotel',\n            'Kronos Pipe and Irrigation',\n            'Stewart and Sons Fabrication',\n        ],\n    },\n    {\n        type: 'Gas Station',\n        data: [\n            \"Frank's Fuel\",\n            'U-Pump',\n        ],\n    },\n    {\n        type: 'Living',\n        data: [\n            \"Albert's Fine Clothing\",\n            'Kronos Mart',\n            'Daily Dealz',\n            \"Shoppers' Delight\",\n            \"Frydos Autosupply n' More\",\n            'General Grocer',\n        ],\n    },\n    {\n        type: 'Entertainment',\n        data: [\n            \"Desafio Golf Course\",\n            'Roberts and Sons',\n            'Ahaggo Museum',\n        ],\n    },\n]\n\nexport const storeMapType = chain(storeClassify)\n    .map('data')\n    .flatten()\n    .reduce((obj, d) => {\n        obj[d] = storeClassify.find(d1 => d1.data.includes(d)).type\n        return obj\n    }, {})\n    .value()\n\nexport const timeClassifyData = [\n    {\n        data: [-2, 6],\n        name: 'Sleeping',\n    },\n    {\n        data: [6, 9],\n        name: 'On the way to work',\n    },\n    {\n        data: [9, 12],\n        name: 'Working',\n    },\n    {\n        data: [12, 14],\n        name: 'Lunch Break',\n    },\n    {\n        data: [14, 18],\n        name: 'Working',\n    },\n    {\n        data: [18, 22],\n        name: 'After work',\n    }\n]\n\n// 54个Loy, 55 个 cc\nexport const ccLoyMap = {\n    \"L8328\": \"8129\", // true\n    \"L6417\": \"7117\", // true\n    \"L1107\": \"2681\", // true\n    \"L4034\": \"5407\", // true\n    \"L6110\": \"8411\", // true\n    \"L2343\": \"8202\", // true\n    \"L9018\": \"2418\", // true\n    \"L5777\": \"9551\", // true\n    \"L7783\": \"1415\", // true\n    \"L3191\": \"9635\", // true\n    \"L4164\": \"7688\", // true\n    \"L1682\": \"7253\", // true\n    \"L1485\": \"3853\", // true\n    \"L5947\": \"2540\", // true\n    \"L3014\": \"1877\", // true\n    \"L4149\": \"1321\", // true\n    \"L6544\": \"7108\",// true\n    \"L4424\": \"1874\", // true\n    \"L5259\": \"7819\", // true\n    \"L3800\": \"7384\", // true\n    \"L5553\": \"9617\", // true\n    \"L3366\": \"6895\", // true\n    \"L8148\": \"6816\",// true\n    \"L4063\": \"9220\", // true\n    \"L2490\": \"3484\", // true\n    \"L2769\": \"8642\", // true\n    \"L2169\": \"4434\", // true\n    \"L9633\": \"9735\", // true\n    \"L9637\": \"2142\", // true\n    \"L8012\": \"1310\", // true\n    \"L7814\": \"3492\", // true\n    \"L3259\": \"9405\", // true\n    \"L9363\": \"6901\", // true\n    \"L5224\": \"8156\", // true\n    \"L7291\": \"9683\", // true\n    \"L9254\": \"7354\", // true\n    \"L6886\": \"2463\", // true\n    \"L7761\": \"3506\", // true\n    \"L5756\": \"7792\", // true\n    \"L8477\": \"4530\", // true\n    \"L3317\": \"2276\", // true\n    \"L5485\": \"9152\", // true\n    \"L5924\": \"9614\", // true\n    \"L2459\": \"5010\", // true\n    \"L2247\": \"5368\", //true\n    \"L9406\": \"4948\", // true\n    \"L9362\": \"3547\", // true L9362 和 L3295 是一个人的\n    \"L3295\": \"5921\", // true\n    \"L6267\": [\"6691\", \"6899\"], // true L6227在不同的时间段分属于不同的人，这其实不是一个人的,可能存在盗刷\n    \"L6119\": \"7889\", // true\n    \"L2070\": \"8332\", // true\n    \"L8566\": \"4795\", // true\n    \"L3572\": \"1286\", // true // L3572 和 L3288有关系\n    \"L3288\": \"9241\", // true\n}\n\nexport const carAssign = [\n    {\n        \"LastName\": \"Calixto\",\n        \"FirstName\": \"Nils\",\n        \"CarID\": \"1\",\n        \"CurrentEmploymentType\": \"Information Technology\",\n        \"CurrentEmploymentTitle\": \"IT Helpdesk\"\n    },\n    {\n        \"LastName\": \"Azada\",\n        \"FirstName\": \"Lars\",\n        \"CarID\": \"2\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Engineer\"\n    }, { \"LastName\": \"Balas\", \"FirstName\": \"Felix\", \"CarID\": \"3\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Engineer\" }, { \"LastName\": \"Barranco\", \"FirstName\": \"Ingrid\", \"CarID\": \"4\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"SVP/CFO\" }, { \"LastName\": \"Baza\", \"FirstName\": \"Isak\", \"CarID\": \"5\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Technician\" }, { \"LastName\": \"Bergen\", \"FirstName\": \"Linnea\", \"CarID\": \"6\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Group Manager\" }, { \"LastName\": \"Orilla\", \"FirstName\": \"Elsa\", \"CarID\": \"7\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Alcazar\", \"FirstName\": \"Lucas\", \"CarID\": \"8\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Technician\" }, { \"LastName\": \"Cazar\", \"FirstName\": \"Gustav\", \"CarID\": \"9\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Campo-Corrente\", \"FirstName\": \"Ada\", \"CarID\": \"10\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"SVP/CIO\" }, { \"LastName\": \"Calzas\", \"FirstName\": \"Axel\", \"CarID\": \"11\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Hydraulic Technician\" }, { \"LastName\": \"Cocinaro\", \"FirstName\": \"Hideki\", \"CarID\": \"12\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Site Control\" }, { \"LastName\": \"Ferro\", \"FirstName\": \"Inga\", \"CarID\": \"13\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Site Control\" }, { \"LastName\": \"Dedos\", \"FirstName\": \"Lidelse\", \"CarID\": \"14\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Engineering Group Manager\" }, { \"LastName\": \"Bodrogi\", \"FirstName\": \"Loreto\", \"CarID\": \"15\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Site Control\" }, { \"LastName\": \"Vann\", \"FirstName\": \"Isia\", \"CarID\": \"16\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Flecha\", \"FirstName\": \"Sven\", \"CarID\": \"17\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Technician\" }, { \"LastName\": \"Frente\", \"FirstName\": \"Birgitta\", \"CarID\": \"18\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Geologist\" }, { \"LastName\": \"Frente\", \"FirstName\": \"Vira\", \"CarID\": \"19\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Hydraulic Technician\" }, { \"LastName\": \"Fusil\", \"FirstName\": \"Stenig\", \"CarID\": \"20\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Building Control\" }, { \"LastName\": \"Osvaldo\", \"FirstName\": \"Hennie\", \"CarID\": \"21\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Nubarron\", \"FirstName\": \"Adra\", \"CarID\": \"22\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Badging Office\" }, { \"LastName\": \"Lagos\", \"FirstName\": \"Varja\", \"CarID\": \"23\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Badging Office\" }, { \"LastName\": \"Mies\", \"FirstName\": \"Minke\", \"CarID\": \"24\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Herrero\", \"FirstName\": \"Kanon\", \"CarID\": \"25\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Geologist\" }, { \"LastName\": \"Onda\", \"FirstName\": \"Marin\", \"CarID\": \"26\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Site Manager\" }, { \"LastName\": \"Orilla\", \"FirstName\": \"Kare\", \"CarID\": \"27\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Borrasca\", \"FirstName\": \"Isande\", \"CarID\": \"28\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Ovan\", \"FirstName\": \"Bertrand\", \"CarID\": \"29\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Facilities Group Manager\" }, { \"LastName\": \"Resumir\", \"FirstName\": \"Felix\", \"CarID\": \"30\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Security Group Manager\" }, { \"LastName\": \"Sanjorge Jr.\", \"FirstName\": \"Sten\", \"CarID\": \"31\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"President/CEO\" }, { \"LastName\": \"Strum\", \"FirstName\": \"Orhan\", \"CarID\": \"32\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"SVP/COO\" }, { \"LastName\": \"Tempestad\", \"FirstName\": \"Brand\", \"CarID\": \"33\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Vann\", \"FirstName\": \"Edvard\", \"CarID\": \"34\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Vasco-Pais\", \"FirstName\": \"Willem\", \"CarID\": \"35\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"Environmental Safety Advisor\" }, { \"LastName\": \"Hafon\", \"FirstName\": \"Albina\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Hawelon\", \"FirstName\": \"Benito\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Hawelon\", \"FirstName\": \"Claudio\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Mies\", \"FirstName\": \"Henk\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Morlun\", \"FirstName\": \"Valeria\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Morlun\", \"FirstName\": \"Adan\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Morluniau\", \"FirstName\": \"Cecilia\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Nant\", \"FirstName\": \"Irene\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Scozzese\", \"FirstName\": \"Dylan\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }]\n\nexport const storeButtonArr = {\n    \"Brew've Been Served\": [{\n        s: '7:30',\n        e: '8:30',\n        d: 1,\n    }],\n    \"Hallowed Grounds\": [{\n        s: '7:30',\n        e: '8:30',\n        d: 2,\n    }],\n    \"Coffee Cameleon\": [{\n        s: '7:30',\n        e: '8:30',\n        d: 3,\n    }],\n    \"Coffee Shack\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 1,\n    }],\n    \"Bean There Done That\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 2,\n    }],\n    \"Jack's Magical Beans\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 3,\n    }],\n    \"Brewed Awakenings\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 4,\n    }],\n    \n    \"Katerinas Caf\": [{\n        s: '13:00',\n        e: '14:30',\n        d: 1,\n    }, {\n        s: '18:50',\n        e: '21:30',\n        d: 1,\n    }],\n    \"Gelatogalore\": [{\n        s: '13:00',\n        e: '14:20',\n        d: 5,\n    }],\n    \"Ouzeri Elian\": [{\n        s: '13:00',\n        e: '14:20',\n        d: 3,\n    }, {\n        s: '19:00',\n        e: '21:30',\n        d: 3,\n    }],\n    \"Kalami Kafenion\": [{\n        s: '13:10',\n        e: '14:20',\n        d: 4,\n    }, {\n        s: '19:00',\n        e: '20:30',\n        d: 4,\n    }],\n    \"Hippokampos\": [{\n        s: '13:00',\n        e: '14:00',\n        d: 2,\n    }, {\n        s: '19:10',\n        e: '22:30',\n        d: 2,\n    }],\n    \"Abila Zacharo\": [{\n        s: '13:00',\n        e: '14:30',\n        d: 7,\n    }],\n    \"Guy's Gyros\": [{\n        s: '13:30',\n        e: '14:30',\n        d: 6,\n    }, {\n        s: '19:0',\n        e: '21:40',\n        d: 6,\n    }],\n    \"Abila Airport\": [{\n        s: '8:26',\n        e: '9:40',\n        d: 1,\n    }, {\n        s: '12:20',\n        e: '13:10',\n        d: 1,\n    }, {\n        s: '15:20',\n        e: '16:10',\n        d: 1,\n    }],\n    \"Nationwide Refinery\": [{\n        s: '10:00',\n        e: '13:00',\n        d: 5,\n    }],\n    \"Maximum Iron and Steel\": [{\n        s: '10:10',\n        e: '10:50',\n        d: 1,\n    }, {\n        s: '14:50',\n        e: '15:20',\n        d: 1,\n    }],\n    \"Carlyle Chemical Inc.\": [{\n        s: '9:40',\n        e: '10:10',\n        d: 1,\n    },\n    {\n        s: '12:30',\n        e: '13:00',\n        d: 2,\n    },\n    {\n        s: '14:30',\n        e: '14:50',\n        d: 1,\n    },\n    {\n        s: '16:20',\n        e: '17:20',\n        d: 1,\n    }],\n    \"Abila Scrapyard\": [{\n        s: '14:10',\n        e: '14:30',\n        d: 2,\n    }],\n    \"Octavio's Office Supplies\": [{\n        s: '14:30',\n        e: '16:00',\n        d: 3,\n    }],\n    \"Chostus Hotel\": [{\n        s: '12:10',\n        e: '14:00',\n        d: 8,\n    }],\n    \"Frank's Fuel\": [{\n        s: '12:10',\n        e: '12:40',\n        d: 6,\n    }, {\n        s: '18:10',\n        e: '18:50',\n        d: 1,\n    }],\n    \"Kronos Pipe and Irrigation\": [{\n        s: '14:00',\n        e: '14:20',\n        d: 8,\n    }],\n    \"Stewart and Sons Fabrication\": [{\n        s: '10:20',\n        e: '12:20',\n        d: 7,\n    }],\n    \"Albert's Fine Clothing\": [{\n        s: '15:20',\n        e: '16:20',\n        d: 2,\n    }, {\n        s: '19:00',\n        e: '21:20',\n        d: 5,\n    }],\n    \"Kronos Mart\": [{\n        s: '3:10',\n        e: '4:00',\n        d: 1,\n    }, {\n        s: '7:30',\n        e: '8:40',\n        d: 4,\n    }],\n    \"Daily Dealz\": [{\n        s: '5:50',\n        e: '6:20',\n        d: 1,\n    }],\n    \"Shoppers' Delight\": [{\n        s: '15:10',\n        e: '16:10',\n        d: 7,\n    }, {\n        s: '19:20',\n        e: '21:30',\n        d: 7,\n    }],\n    \"Ahaggo Museum\": [{\n        s: '15:00',\n        e: '17:00',\n        d: 8,\n    }],\n    \"Desafio Golf Course\": [{\n        s: '13:00',\n        e: '15:40',\n        d: 9,\n    }],\n    \"Roberts and Sons\": [{\n        s: '19:10',\n        e: '21:30',\n        d: 8,\n    }],\n    \"U-Pump\": [{\n        s: '13:10',\n        e: '13:30',\n        d: 6,\n    }, {\n        s: '17:25',\n        e: '17:55',\n        d: 1,\n    }],\n    \"General Grocer\": [{\n        s: '15:20',\n        e: '16:00',\n        d: 5,\n    }, {\n        s: '20:30',\n        e: '21:40',\n        d: 4,\n    }],\n    \"Frydos Autosupply n' More\": [{\n        s: '15:30',\n        e: '16:20',\n        d: 4,\n    }, {\n        s: '19:00',\n        e: '21:40',\n        d: 9,\n    }],\n}\n\n\n\n// export const storeButtonArr = {\n//     \"Brew've Been Served\": [{\n//         s: '7:20',\n//         e: '7:50',\n//         d: 1,\n//     }],\n//     \"Hallowed Grounds\": [{\n//         s: '7:50',\n//         e: '8:20',\n//         d: 1,\n//     }],\n//     \"Coffee Cameleon\": [{\n//         s: '8:20',\n//         e: '8:50',\n//         d: 1,\n//     }],\n\n//     \"Coffee Shack\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 1,\n//     }],\n//     \"Bean There Done That\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 2,\n//     }],\n//     \"Jack's Magical Beans\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 3,\n//     }],\n//     \"Brewed Awakenings\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 4,\n//     }],\n    \n//     \"Katerinas Caf\": [{\n//         s: '13:00',\n//         e: '13:30',\n//         d: 1,\n//     }, {\n//         s: '19:00',\n//         e: '19:30',\n//         d: 1,\n//     }],\n//     \"Gelatogalore\": [{\n//         s: '13:30',\n//         e: '14:00',\n//         d: 1,\n//     }],\n//     \"Ouzeri Elian\": [{\n//         s: '14:00',\n//         e: '14:30',\n//         d: 1,\n//     }, {\n//         s: '19:30',\n//         e: '20:00',\n//         d: 1,\n//     }],\n//     \"Hippokampos\": [{\n//         s: '14:30',\n//         e: '15:00',\n//         d: 1,\n//     }, {\n//         s: '20:00',\n//         e: '20:30',\n//         d: 1,\n//     }],\n//     \"Kalami Kafenion\": [{\n//         s: '15:00',\n//         e: '15:30',\n//         d: 1,\n//     }, {\n//         s: '20:30',\n//         e: '21:00',\n//         d: 1,\n//     }],\n//     \"Abila Zacharo\": [{\n//         s: '12:30',\n//         e: '13:00',\n//         d: 1,\n//     }],\n//     \"Guy's Gyros\": [{\n//         s: '15:30',\n//         e: '16:00',\n//         d: 1,\n//     }, {\n//         s: '21:00',\n//         e: '21:30',\n//         d: 1,\n//     }],\n\n//     // partner\n//     \"Abila Airport\": [{\n//         s: '8:30',\n//         e: '9:00',\n//         d: 2,\n//     }, {\n//         s: '12:30',\n//         e: '13:00',\n//         d: 2,\n//     }, {\n//         s: '15:30',\n//         e: '16:00',\n//         d: 2,\n//     }],\n//     \"Nationwide Refinery\": [{\n//         s: '10:00',\n//         e: '10:30',\n//         d: 2,\n//     }],\n//     \"Maximum Iron and Steel\": [{\n//         s: '10:30',\n//         e: '11:00',\n//         d: 2,\n//     }, {\n//         s: '14:50',\n//         e: '15:20',\n//         d: 2,\n//     }],\n//     \"Carlyle Chemical Inc.\": [{\n//         s: '9:30',\n//         e: '10:00',\n//         d: 2,\n//     },\n//     {\n//         s: '12:30',\n//         e: '13:00',\n//         d: 2,\n//     },\n//     {\n//         s: '14:30',\n//         e: '14:50',\n//         d: 2,\n//     },\n//     {\n//         s: '16:20',\n//         e: '17:20',\n//         d: 2,\n//     }],\n//     \"Abila Scrapyard\": [{\n//         s: '14:10',\n//         e: '14:30',\n//         d: 2,\n//     }],\n//     \"Octavio's Office Supplies\": [{\n//         s: '14:30',\n//         e: '16:00',\n//         d: 3,\n//     }],\n//     \"Chostus Hotel\": [{\n//         s: '12:10',\n//         e: '14:00',\n//         d: 8,\n//     }],\n//     \"Frank's Fuel\": [{\n//         s: '12:10',\n//         e: '12:40',\n//         d: 6,\n//     }, {\n//         s: '18:10',\n//         e: '18:50',\n//         d: 1,\n//     }],\n//     \"Kronos Pipe and Irrigation\": [{\n//         s: '14:00',\n//         e: '14:20',\n//         d: 8,\n//     }],\n//     \"Stewart and Sons Fabrication\": [{\n//         s: '10:20',\n//         e: '12:20',\n//         d: 7,\n//     }],\n//     \"Albert's Fine Clothing\": [{\n//         s: '15:20',\n//         e: '16:20',\n//         d: 2,\n//     }, {\n//         s: '19:00',\n//         e: '21:20',\n//         d: 5,\n//     }],\n//     \"Kronos Mart\": [{\n//         s: '3:10',\n//         e: '4:00',\n//         d: 1,\n//     }, {\n//         s: '7:30',\n//         e: '8:40',\n//         d: 4,\n//     }],\n//     \"Daily Dealz\": [{\n//         s: '5:50',\n//         e: '6:20',\n//         d: 1,\n//     }],\n//     \"Shoppers' Delight\": [{\n//         s: '15:10',\n//         e: '16:10',\n//         d: 7,\n//     }, {\n//         s: '19:20',\n//         e: '21:30',\n//         d: 7,\n//     }],\n//     \"Ahaggo Museum\": [{\n//         s: '15:00',\n//         e: '17:00',\n//         d: 8,\n//     }],\n//     \"Desafio Golf Course\": [{\n//         s: '13:00',\n//         e: '15:40',\n//         d: 9,\n//     }],\n//     \"Roberts and Sons\": [{\n//         s: '19:10',\n//         e: '21:30',\n//         d: 8,\n//     }],\n//     \"U-Pump\": [{\n//         s: '13:10',\n//         e: '13:30',\n//         d: 6,\n//     }, {\n//         s: '17:25',\n//         e: '17:55',\n//         d: 1,\n//     }],\n//     \"General Grocer\": [{\n//         s: '15:20',\n//         e: '16:00',\n//         d: 5,\n//     }, {\n//         s: '20:30',\n//         e: '21:40',\n//         d: 4,\n//     }],\n//     \"Frydos Autosupply n' More\": [{\n//         s: '15:30',\n//         e: '16:20',\n//         d: 4,\n//     }, {\n//         s: '19:00',\n//         e: '21:40',\n//         d: 9,\n//     }],\n// }","import { storeMapType } from \"../data/consumer_data\";\n\nexport const building_coordinate = [\n    {\n        name: 'Hallowed Grounds',\n        desc: '',\n        type: 'Consumer sites',\n        range: [[24.88388038, 36.06553341], [24.88788038, 36.06253341]],\n    },\n    {\n        name: 'Bean There Done That',\n        desc: '',\n        range: [[24.84912302000002,36.084489514999994],[24.853505705000018,36.07924747999999]],\n        type: 'Consumer sites',\n    },\n    {\n        name: 'Kronos Mart',\n        desc: '',\n        range: [[24.846974645000017,36.06807593],[24.851529200000016,36.064896335]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Ouzeri Elian\",\n        desc: '',\n        range: [[24.870177095000017,36.0544982],[24.87447384500002,36.05002958]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Coffee Cameleon\",\n        desc: '',\n        range: [[24.888910925000015,36.05656064],[24.893121740000016,36.05329511]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Abila Airport\",\n        desc: '',\n        range: [[24.824030000000022,36.054756005],[24.83417033000002,36.04727966]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Abila Scrapyard\",\n        desc: '',\n        range: [[24.84370911500002,36.076067885],[24.849294890000017,36.072630485]],\n        type: 'Consumer sites',\n    },\n    \n    {\n        name: \"Chostus Hotel\",\n        desc: '',\n        range: [[24.890543690000012,36.07220081],[24.898707515000016,36.067474385]],\n        type: 'Consumer sites',\n    },\n    // 周六19号补充的\n    {\n        name: \"Hippokampos\",\n        desc: \"在Albert's Fine Clothing上方，已验证,6\",\n        range: [[24.85565408000002,36.07770065],[24.859950830000017,36.07598195]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Abila Zacharo\",\n        desc: '在Roberts and Sons左边，已验证,6、7',\n        range: [[24.84981050000002,36.064380725],[24.85178700500002,36.061802675]],\n        type: 'Consumer sites',\n    },\n    {\n        name: 'Roberts and Sons',\n        desc: '已验证, 7号',\n        range: [[24.851529200000016,36.06412292],[24.853763510000018,36.061974545]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Albert's Fine Clothing\",\n        desc: '已验证, 7号',\n        range: [[24.85479473000002,36.07598195],[24.857458715000018,36.074349185]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Gelatogalore\",\n        desc: '冰淇淋店，有些偏差，应该在杂货店的下面，已验证',\n        range: [[24.85702904000002,36.059998039999996],[24.858919610000015,36.05913869]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Kalami Kafenion\",\n        desc: \"在Kronos Mart的右边一点，7号得到的，12号验证\",\n        range: [[24.85161513500002,36.067474385],[24.853763510000018,36.065240075]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Frydos Autosupply n' More\",\n        desc: \"根据7号和8号，修车厂应该在 Brew'veBeenServed 和 Katerinas Caf 中间\",\n        range: [[24.900512150000015,36.055443485000005],[24.903605810000016,36.054412264999996]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Katerinas Caf\",\n        desc: \"比原来的小一点\",\n        range: [[24.897590360000017,36.055787224999996],[24.900426215000014,36.05329511]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Guy's Gyros\",\n        desc: \"在Brew'veBeenServed左下角，12和8车验证\",\n        range: [[24.901801175000017,36.05690438],[24.903176135000013,36.05518568]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"General Grocer\",\n        desc: '杂货店, 12号车验证',\n        range: [[24.85565408000002,36.061287065],[24.85728684500002,36.059912105]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Shoppers' Delight\",\n        desc: \"在Ouzeri Elian 的左边 13号车验证\",\n        range: [[24.867341240000016,36.05432633],[24.870005225000018,36.051490475]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Brew've Been Served\",\n        desc: '非常的小， 13号车验证',\n        range: [[24.900598085000013,36.054584135],[24.901887110000015,36.053381045]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Frank's Fuel\",\n        desc: '比图标靠右一点，15号车验证',\n        range: [[24.83872488500002,36.073489835],[24.84224822000002,36.07116959]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Brewed Awakenings\",\n        desc: \"根据16号车得到的，这个地方比较偏，所以店的消费较少\",\n        range: [[24.86287262000002,36.07443512],[24.865364735000018,36.07271642]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Ahaggo Museum\",\n        desc: \"博物馆\",\n        range: [[24.875419130000015,36.077958455],[24.879887750000016,36.073919509999996]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Octavio's Office Supplies\",\n        desc: \"文具店，20号车14号路过的\",\n        range: [[24.85728684500002,36.05896682],[24.85874774000002,36.0579356]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"U-Pump\",\n        desc: \"23号车6号下午\",\n        range: [[24.869059940000017,36.069279019999996],[24.871895795000015,36.066615035]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Desafio Golf Course\",\n        desc: \"31号车\",\n        range: [[24.85763058500002,36.091536184999995],[24.86390384000002,36.088184719999994]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Jack's Magical Beans\",\n        desc: \"缩小一下\",\n        range: [[24.872325470000018,36.069021215],[24.876106610000015,36.066271295]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Maximum Iron and Steel\",\n        desc: '钢铁厂',\n        range: [[24.83674838000002,36.06601349],[24.84319350500002,36.06240422]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Carlyle Chemical Inc.\",\n        desc: '化工厂',\n        range: [[24.879715880000017,36.059654300000005],[24.882981410000017,36.05741999]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Nationwide Refinery\",\n        desc: '炼油厂',\n        range: [[24.884442305000015,36.059482429999996],[24.888996860000013,36.05656064]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Kronos Pipe and Irrigation\",\n        desc: '灌溉设备厂, 101车6号和13号',\n        range: [[24.83167821500002,36.066443164999995],[24.83434220000002,36.064380725]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Stewart and Sons Fabrication\",\n        desc: '玻璃厂？不知道，101车七号',\n        range: [[24.907301015000012,36.05501381],[24.909363455000012,36.05295137]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Coffee Shack\",\n        desc: '消费场所，没找到，无所谓，就6417一个卡去，这个数据的时间也是错误的',\n        range: [[24.858575870000017,36.07495073],[24.861841400000017,36.071255525]],\n        type: 'Consumer sites',\n    },\n    // {\n    //     name: \"Daily Dealz\",\n    //     desc: '消费场所 就一次消费，就在汽车1的家旁边，自己看着是否需要画',\n    //     range: [[24.881778320000016,36.067130645],[24.883668890000017,36.06532601]],\n    //     type: 'Consumer sites',\n    // },\n    \n    // ================= 其他建筑物 =============\n    {\n        name: \"carly's coffee\",\n        range: [[24.85754465000002,36.058709015],[24.861153920000017,36.055271614999995]],\n        type: 'location',\n    },\n    {\n        name: \"Cup o'Joe\",\n        range: [[24.877825310000016,36.053552915],[24.880833035000016,36.050717060000004]],\n        type: 'location',\n    },\n    {\n        name: \"Abila Hospital\",\n        range: [[24.876708155000017,36.057677795000004],[24.883840760000016,36.053209175]],\n        type: 'location',\n    },\n    {\n        name: 'GAStect',\n        range: [[24.877309700000016,36.050974865],[24.881950190000016,36.046162505]],\n        type: 'location',\n    },\n    {\n        name: \"kronos capitol\",\n        range: [[24.84456846500002,36.058537145],[24.850841720000016,36.05209202]],\n        type: 'location',\n    },\n\n    // ================= 员工的家 =============\n    {\n        name: \"home_1\",\n        desc: \"车1的家\",\n        range:[[24.88160233,36.067487109999995],[24.883602330000002,36.06548711]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_2\",\n        desc: \"车2的家\",\n        range: [[24.859401759999997,36.08634633],[24.86140176,36.08434633]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_3\",\n        desc:\"车3的家\",\n        range: [[24.85667136,36.087593749999996],[24.858671360000002,36.08559375]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_4\",\n        desc:\"车4的家\",\n        range: [[24.87106884,36.07921458],[24.873068840000002,36.07721458]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_5\",\n        desc:\"车5的家\",\n        range: [[24.876958979999998,36.06831877],[24.87895898,36.06631877]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_6_25_29\",\n        desc:\"车6、25、29的家\",\n        range: [[24.893741,36.060403349999994],[24.895741,36.05840335]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_7\",\n        desc:\"车7的家\",\n        range: [[24.86319721,36.085321119999996],[24.86519721,36.08332112]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_8\",\n        desc:\"车8的家\",\n        range: [[24.88492574,36.06817381],[24.886925740000002,36.06617381]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_10\",\n        desc:\"车10的家\",\n        range: [[24.864882079999997,36.07768915],[24.86688208,36.07568915]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_11\",\n        desc:\"车11的家\",\n        range: [[24.85796606,36.08512021],[24.85996606,36.083120210000004]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_12\",\n        desc:\"车12的家\",\n        range: [[24.898078079999998,36.06875761],[24.90007808,36.06675761]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_13_15_16_21\",\n        desc:\"车13、15、16、21的家\",\n        range: [[24.904667829999998,36.06134734],[24.90666783,36.05934734]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_14_18\",\n        desc:\"车14、18的家\",\n        range: [[24.89508249,36.06436043],[24.897082490000003,36.062360430000005]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_17_24_33\",\n        desc:\"车17、24、33的家\",\n        range: [[24.89771782,36.063341259999994],[24.899717820000003,36.06134126]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_19\",\n        desc:\"车19的家\",\n        range: [[24.8554893,36.088918209999996],[24.8574893,36.08691821]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_20\",\n        desc:\"车20的家\",\n        range: [[24.89999889,36.06686874],[24.90199889,36.06486874]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_22\",\n        desc:\"车22的家\",\n        range: [[24.89940545,36.051338789999996],[24.901405450000002,36.04933879]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_23_30\",\n        desc:\"车23、30的家\",\n        range: [[24.899992689999998,36.05949165],[24.90199269,36.05749165]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_26\",\n        desc:\"车26的家\",\n        range: [[24.883036129999997,36.073828819999996],[24.88503613,36.07182882]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_27\",\n        desc:\"车27的家\",\n        range: [[24.88319323,36.07024187],[24.885193230000002,36.06824187]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_28\",\n        desc:\"车28的家\",\n        range: [[24.879169006599998,36.070638333649995],[24.8811690066,36.06863833365]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_32\",\n        desc:\"车32的家\",\n        range: [[24.873631659999997,36.07322591],[24.87563166,36.07122591]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_34\",\n        desc:\"车34的家\",\n        range: [[24.90155042,36.0686293],[24.903550420000002,36.0666293]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_35\",\n        desc:\"车35的家\",\n        range: [[24.873611139999998,36.07724279],[24.87561114,36.075242790000004]],\n        type: \"home\",\n    },\n    ].map(d => ({\n        ...d,\n        classify: storeMapType[d.name] || d.type,\n    }))","import { ascending } from \"d3-array\"\nimport { scaleOrdinal } from \"d3-scale\"\nimport { schemeCategory10 } from \"d3-scale-chromatic\"\nimport moment from \"moment\"\nimport { building_coordinate } from \"../data/buliding_coordinate\"\nimport { storeClassify, storeMapType } from \"../data/consumer_data\"\n\nexport  function pushOrPop(arr, d, mode='single') {\n    const newArr = [...arr]\n    if (mode !== 'single') {\n        if (newArr.includes(d)) {\n            return newArr.filter(d1 => d1 !== d)\n        }\n        newArr.push(d)\n        return newArr\n    } else {\n        if (newArr.includes(d)) {\n            return []\n        } else {\n            return [d]\n        }\n    }\n}\n\n//增加两个容易溢出的数据\nexport function add(a, b) {\n    return parseFloat((Number(a) + Number(b)).toFixed(10))\n}\n\n// 计算只有时分秒的时间戳\nexport function calHourTime(hour) {\n    let hourStr = hour.toString()\n    const count = hourStr.match(/:/g)\n        ? hourStr.match(/:/g).length\n        : 0\n    switch (count) {\n        case 0:\n            hourStr = `${hourStr}:00:00`\n            break;\n        case 1:\n            hourStr = `${hourStr}:00`\n            break;\n        default:\n            break;\n    }\n    return moment(`2020-01-01 ${hourStr}`).unix()\n}\n\n// 计算商店分类颜色\nexport const calcualteTypeColor = id => {\n    const domain = storeClassify.map(d => d.type)\n    const colorScale = scaleOrdinal(domain.sort(ascending), schemeCategory10)\n    if (domain.includes(id)) {\n        return colorScale(id)\n    }\n    return 'gray'\n}\n\nexport const calcualteStoreColor = store => {\n    if(store.includes('unknow')) return 'red';\n    if(store.includes('home')) return 'green';\n    const type = storeMapType[store] || 'location'\n    return calcualteTypeColor(type)\n}\n\nexport const findLocaiton = (coor) => {\n    const [long, lat] = coor\n    const a = building_coordinate.find(d => {\n        const [sp, ep] = d.range\n        return sp[0] < Number(long)\n            && Number(long) < ep[0]\n            && Number(lat) < sp[1]\n            && Number(lat) > ep[1]\n    })\n    return a ? a.name : false\n} ","import { ascending, extent } from 'd3-array'\nimport { json } from 'd3-fetch'\nimport { path } from 'd3-path'\nimport { event, drag, forceCollide, forceLink, forceManyBody, forceSimulation, scaleLinear, scaleOrdinal, schemeCategory10, select, selectAll, color, csv } from 'd3'\nimport { arc, curveCatmullRom, line } from 'd3-shape'\nimport { chain } from 'lodash'\nimport moment from 'moment'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { ccLoyMap, storeButtonArr, storeClassify, storeMapType, timeArr, timeClassifyData } from '../../data/consumer_data'\nimport { add, calHourTime, pushOrPop } from '../../utils'\nimport './index.scss'\n\nfunction calData(res) {\n    const nodeData = Object.keys(ccLoyMap).map(d => {\n        // const data = res.filter(d1 => d1.loyaltynum === d && d1.type === 'justCC')\n        const data = res.filter(d1 => d1.loyaltynum === d)\n        const location = chain(data).map('location').uniq().value()\n        const type = chain(location).map(d => storeMapType[d]).sortBy().uniq().value()\n        return {\n            id: d,\n            data,\n            location,\n            type,\n            arcData: chain(data)\n                .reduce((obj, d1) => {\n                    obj[d1.locationType] = {\n                        value: obj[d1.locationType]\n                        ? add(obj[d1.locationType].value, d1.price)\n                        : Number(d1.price),\n                        type: d1.locationType,\n                    }\n                    return obj\n                }, {})\n                .values()\n                .value()\n        }\n    })\n    const linksObj = {}\n    nodeData.forEach((d1) => {\n        const key1 = d1.type.toString()\n        nodeData.forEach(d2 => {\n            if (d1.id === d2.id) return\n            if (linksObj[`${d1.id}-${d2.id}`] || linksObj[`${d2.id}-${d1.id}`]) return\n            const key2 = d2.type.toString()\n            if(key1 !== key2) return\n            // const sameLoaction = intersection(d1.location, d2.location)\n            // const sameLoaction = d1.data\n            //     .filter(d3 => {\n            //         const a = d2.data.filter(d4 => \n            //             d4.location === d3.location\n            //             && Math.abs(moment(d4.timestamp).diff(moment(d3.timestamp))) < 5 * 60 * 1000)\n            //         return a.length\n            //     })\n            // const sameLoaction = []\n            linksObj[`${d1.id}-${d2.id}`] = {\n                source: d1.id,\n                target: d2.id,\n                value: 1\n            }\n        })\n    })\n    const nodes = nodeData\n    const links = chain(linksObj).values().filter(d => d.value > 0).value()\n    return [nodes, links]\n}\n\nexport default function ConsumerGraph() {\n    const [top, right, bottom, left] = [0,0,0,0]\n    const containerRef = useRef(null)\n    const [size, setsize] = useState({\n        width: 300,\n        height: 300,\n    })\n\n    const width = useMemo(() => size.width, [size])\n    const height = useMemo(() => size.height, [size])\n\n    const radiusArr = useMemo(() => {\n        const maxSize = Math.min((width - left - right) / 2, (height - top - bottom) / 2)\n        const minR = Math.max(maxSize / 4, 120)\n        const item =  (maxSize - minR) / 3\n        return [\n            [0, minR], // card\n            [minR, item * 2.5], // timeCircle\n            [item * 4, item * 4 + 1], // timeLabel\n            [item * 2.5 + 10, item * 4 - 10], // store\n        ]\n    }, [width, height])\n\n    useEffect(() => {\n        const { clientWidth, clientHeight } = containerRef.current\n        setsize({\n            width: clientWidth,\n            height: clientHeight,\n        })\n    }, [])\n\n    // 是否展示track \n    const [showTrack, setshowTrack] = useState(true)\n    // 选中模式\n    const [selectMode, setselectMode] = useState('mulitiple')\n    // MergeMethod\n    const [mergefun, setMergeFun] = useState('intersection')\n\n    const anagleScale = scaleLinear()\n        .domain([0, 24])\n        .range([0, 360])\n\n    const dayScale = scaleLinear()\n        .domain(extent(timeArr))\n        .range([radiusArr[1][0], radiusArr[1][1]])\n\n    const timeScale = scaleLinear()\n        .domain([calHourTime('00:00:00'), calHourTime('23:59:59')])\n        .range([0, Math.PI * 2])\n\n    const consumePath = arc()\n        .innerRadius(d => dayScale(d.day))\n        .outerRadius(d => dayScale(d.day) + (radiusArr[1][1] - radiusArr[1][0]) / timeArr.length )\n        .startAngle(d => timeScale(d.time))\n        .endAngle(d => timeScale(d.time + 500))\n\n    // getData\n    const [originCCdata, setOriginCCdata] = useState([])\n\n    // 选中\n    const [activeStore, setActiveStore] = useState([])\n    const [activeClassify, setActiveClassify] = useState([])\n    const [activeCustom, setActiveCustom] = useState([])\n\n    // 展示的数据\n    const consumeData = useMemo(() => {\n        return originCCdata\n        .filter(d => activeStore.length ? activeStore.includes(d.location) : true)\n        .filter(d => activeCustom.length ? activeCustom.includes(d.id) : true)\n    }, [activeStore, originCCdata, activeCustom])\n\n    // 所有的会员卡的ID\n    const [ccNumData, setccNumData] = useState([])\n\n    // 请求数据\n    useEffect(() => {\n        json('./data/merge_cc_and_loy.json').then(res => {\n            const newConsumeData = res.map(d => {\n                const [dayStr, hourStr] = d.timestamp.split(' ')\n                const day = moment(dayStr).unix()\n                const time = calHourTime(hourStr)\n                const locationType = storeClassify.find(d1 => d1.data.includes(d.location)).type\n                // 时间有点不准确\n                return {\n                    ...d,\n                    day,\n                    dayStr,\n                    id: d.loyaltynum,\n                    time,\n                    locationType,\n                    hour: hourStr.split(':')[0],\n                }\n            })\n            const newLoy = chain(newConsumeData).map('id').uniq().value()\n            setccNumData(newLoy)\n            setOriginCCdata(newConsumeData)\n            const [nodes, links] = calData(res)\n            drawForce(nodes, links)\n        })\n    }, [])\n\n    const drawForce = useMemo(() => {\n        return (nodes, links) => {\n            const distance = ([x1, y1], [x2, y2]) => Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n            const radius = radiusArr[0][1] - 20\n            const force = forceSimulation(nodes)\n                .force('links', forceLink(links)\n                    .id(d => d.id)\n                    .strength(d => 2)\n                    // .distance(0)\n                )\n                .force('charge', forceManyBody()\n                    .strength(-4)\n                )\n                .force('collide', forceCollide()\n                    .radius(10)\n                    // .iterations(20)\n                )\n                .force('circle', () => {\n                    nodes.forEach((node, i) => {\n                        if (distance([node.x, node.y], [0, 0]) > radius) {\n                            const theta = Math.atan((node.y) / (node.x));\n                            node.x = radius * Math.cos(theta) * (node.x < 0 ? -1 : 1);\n                            node.y = radius * Math.sin(theta) * (node.x < 0 ? -1 : 1);\n                          }\n                    })\n                })\n            \n            selectAll('.custom-item').each(function() {\n                const id = select(this).attr('id')\n                const thisData = nodes.filter(d => d.id === id)\n                select(this).data(thisData)\n            })\n            .call(\n                drag()\n                    .on('start', (d) => {\n                        const alpha = Math.max(force.alpha(), 0.1)\n                        force.alpha(alpha).restart()\n                        d.fx = null\n                        d.fy = null\n                    })\n                    .on('drag', d=> {\n                        d.x = event.x\n                        d.y = event.y\n                    })\n                    .on('end', d=>{\n                        d.fx = event.x\n                        d.fy = event.y\n                    })\n            )\n\n            select('.links')\n                .selectAll('line').remove()\n            const link = select('.links')\n                .selectAll('line')\n                .data(links)\n                .enter()\n                .append('line')\n                .attr(\"stroke-width\", d => 1)\n                .attr(\"stroke\", '#e9e9e9');\n\n            force.on('tick', () => {\n                link\n                    .attr(\"x1\", d => d.source.x)\n                    .attr(\"y1\", d => d.source.y)\n                    .attr(\"x2\", d => d.target.x)\n                    .attr(\"y2\", d => d.target.y);\n\n                selectAll('.custom-item')\n                    .attr('transform', d =>`translate(${d.x}, ${d.y})`)\n            })\n    }\n    }, [])\n\n    // 数据的信用卡\n    const exitCCArr = useMemo(() => {\n        return chain(consumeData)\n            .map('id')\n            .uniq()\n            .value()\n    }, [consumeData])\n\n    // 剩余的价格比例尺\n    const priceOpacity = useMemo(() => {\n        const extents = extent(consumeData, d => Number(d.price))\n        return scaleLinear()\n        .domain(extents)\n        .range([0.2, 1])\n    }, [consumeData])\n\n    const locationPriceObj = useMemo(() => {\n        return consumeData.reduce((obj, d) => {\n            const num = obj[d.location] || 0\n            obj[d.location] = add(num, d.price)\n            return obj\n        }, {})\n    }, [consumeData])\n\n    // 地点消费比例尺\n    const locationOpacity = useMemo(() => {\n        const extents = extent(Object.values(locationPriceObj))\n        return scaleLinear()\n        .domain(extents)\n        .range([0.2, 1])\n    }, [locationPriceObj])\n    \n    // 商店列表\n    const storePath = arc()\n        .innerRadius(d => d.inner)\n        .outerRadius(d => d.outer)\n        .startAngle(d => timeScale(calHourTime(d.s)))\n        .endAngle(d => timeScale(calHourTime(d.e)))\n        .padAngle(.01)\n        .cornerRadius(4)\n\n    const timePath = arc()\n        .innerRadius(d => radiusArr[2][0])\n        .outerRadius(d => radiusArr[2][1])\n        .startAngle(d => {\n            if(d[0]<0) {\n                return timeScale(moment(`2019-12-31 ${22}:00:00`).unix())\n            }\n            return timeScale(calHourTime(d[0]))\n        })\n        .endAngle(d => timeScale(calHourTime(d[1])))\n        .padAngle(.1)\n        .cornerRadius(4)\n\n    const middleArcLine = d => {\n        if (!d.innerRadius || !d.outerRadius) {\n            return ''\n        }\n        const angles = [d.startAngle, d.endAngle].map(\n            d1 => d1 - Math.PI / 2\n        )\n        const r1 = Math.max(0, (d.outerRadius + d.innerRadius) / 2)\n        const middleAngle = (angles[1] + angles[0]) / 2\n        const invertDirection = middleAngle > 0 && middleAngle < Math.PI\n        if (invertDirection) angles.reverse()\n        const pathFun = path()\n        pathFun.arc(0, 0, r1, angles[0], angles[1], invertDirection)\n        return pathFun.toString()\n    }\n\n    const colorScale = scaleOrdinal(storeClassify.map(d => d.type).sort(ascending), schemeCategory10)\n    const pointObj = useMemo(() => {\n        return ccNumData.reduce((obj, d) => {\n            const thisData = chain(consumeData)\n                .filter(d1 => d1.id === d)\n                .filter(d1 => d1.type !== 'cash')\n                .reduce((obj, d1) => {\n                    const key = d1.dayStr\n                    if (!obj[key]) obj[key] = []\n                    obj[key].push(consumePath.centroid(d1))\n                    return obj\n                }, {})\n                .values()\n                .value()\n            obj[d] = thisData\n            return obj\n        }, {})\n    }, [ccNumData, consumeData, consumePath])\n\n    const activeTimeData = useMemo(() => {\n        return chain(consumeData)\n            .map(d => d.dayStr.replace('/2014', ''))\n            .uniq()\n            .value()\n    }, [consumeData])\n\n    const trackPath = line()\n        .x(d => d[0])\n        .y(d => d[1])\n        .curve(curveCatmullRom.alpha(0.5));\n\n    const weekDay = ['01/11', '01/12', '01/18', '01/19']\n    return (\n        <div className='consumerGraph'>\n            <div className=\"left\" ref={containerRef}>\n                <svg height={height} width={width} className='main'>\n                    <g transform={`translate(${left}, ${top})`}>\n                        <g className=\"timebg\">\n                            {timeArr.map((d, i) => {\n                                const text = moment(d * 1000).format('MM/DD')\n                                const textOpactiy = activeTimeData.includes(text) ? 1 : 0\n                                return <g key={d}>\n                                    <text opacity={textOpactiy} transform={`translate(${width / 2}, ${height /2 - dayScale(d)})`}>\n                                        {text} {weekDay.includes(text) ? 'weekend' : ''}\n                                    </text>\n                                    <circle cx={width / 2} cy={height / 2} r={dayScale(d)} /> \n                                </g>\n                            })}\n                        </g>\n                        <g className=\"timeTick\">\n                            {[6, 9, 12, 14, 18, 22].map((d, i) => {\n                                const attr = {\n                                    x1: width / 2,\n                                    y1: height / 2 - radiusArr[2][0],\n                                    x2: width / 2,\n                                    y2: height / 2,\n                                }\n                                return (\n                                    <g key={d} className='timeSplit' transform={`rotate(${anagleScale(d)})`}>\n                                        <line {...attr} />\n                                        <text x={attr.x1} y={attr.y1} dy={0}>{`${d}:00`}</text>\n                                    </g>\n                                )\n                            })}\n                        </g>\n                        <g className=\"time-classify\" transform={`translate(${width/2}, ${height / 2})`}>\n                            {timeClassifyData.map((d, i) => {\n                                const attr = {\n                                    d: timePath(d.data),\n                                }\n                                const textPathHrefProps = {\n                                    fill: 'none',\n                                    id: `time-${i}`,\n                                    d: middleArcLine({\n                                        innerRadius: radiusArr[2][1] + 10,\n                                        outerRadius: radiusArr[2][1]+10,\n                                        startAngle: d.data[0] < 0 ? \n                                            timeScale(moment(`2019-12-31 ${22}:00:00`).unix())\n                                            : timeScale(calHourTime(d.data[0])),\n                                        endAngle: timeScale(calHourTime(d.data[1])),\n                                    }),\n                                }\n                                const textPathProps = {\n                                    href: `#time-${i}`,\n                                    startOffset: '50%',\n                                    dominantBaseline: 'middle',\n                                }\n                                return (\n                                    <g key={d.data[0]}>\n                                        <path {...attr} className='time-button' />\n                                        <g className='time-label' >\n                                            <path {...textPathHrefProps} />\n                                            <text>\n                                                <textPath {...textPathProps}>\n                                                    {d.name}\n                                                </textPath>\n                                            </text>\n                                        </g>\n                                    </g>\n                                )\n                            })}\n                        </g>\n                        <g className='consume-g' transform={`translate(${width/2}, ${height / 2})`}>\n                            {consumeData.filter(d => d.type !== 'cash').map((d, i) => {\n                                const storeType = storeClassify.find(d1 => d1.data.includes(d.location)).type\n                                const attr = {\n                                    className: 'consume-item',\n                                    d: consumePath(d),\n                                    fill: colorScale(storeType),\n                                    fillOpacity: priceOpacity(d.price),\n                                }\n                                return (\n                                    <path key={JSON.stringify(d)} {...attr} />\n                                )\n                            })}\n                        </g>\n                        <g className='detail-store' transform={`translate(${width/2}, ${height / 2})`}>\n                        {\n                                Object.entries(storeButtonArr).map((d, i) => {\n                                    const [storeName, data] = d\n                                    const type = storeMapType[storeName]\n                                    return (\n                                        <g key={storeName}>\n                                            {\n                                                data.map(d1 => {\n                                                    const key = `${storeName}-${d1.s}`\n                                                    const startAngle = timeScale(calHourTime(d1.s))\n                                                    const endAngle = timeScale(calHourTime(d1.e))\n                                                    const gap = (radiusArr[3][1] - radiusArr[3][0]) / 9\n                                                    const inner = radiusArr[3][0] + gap * (d1.d - 1)\n                                                    const outer = inner + gap\n                                                    const attr = {\n                                                        d: storePath({\n                                                            inner,\n                                                            outer,\n                                                            s: d1.s,\n                                                            e: d1.e,\n                                                        }),\n                                                        fill: colorScale(type),\n                                                        stroke: colorScale(type),\n                                                        fillOpacity: locationOpacity(locationPriceObj[storeName]),\n                                                    }\n                                                    const textPathHrefProps = {\n                                                        fill: 'none',\n                                                        id: `text-${key}`,\n                                                        d: middleArcLine({\n                                                            innerRadius: (inner + outer) / 2,\n                                                            outerRadius: (inner + outer) / 2,\n                                                            startAngle,\n                                                            endAngle,\n                                                        }),\n                                                    }\n                                                    const textPathProps = {\n                                                        href: `#text-${key}`,\n                                                        startOffset: '50%',\n                                                        dominantBaseline: 'middle',\n                                                        textAnchor: 'middle',\n                                                    }\n                                                    let className = activeStore.includes(storeName) ? 'active' : ''\n                                                    if (activeStore.length > 0 && !activeStore.includes(storeName)) {\n                                                        className = 'disabled'\n                                                    }\n                                                    const opacity = consumeData.map(d => d.location).includes(storeName) ? 1 : 0.1\n                                                    const middle = (startAngle + endAngle) / 2\n                                                    const isBottom = middle > Math.PI / 2 && middle < Math.PI / 2 * 3\n                                                    const textData = isBottom ? storeName.split(' ').reverse() : storeName.split(' ')\n                                                    const dy = isBottom ? -10 : 10\n                                                    return (\n                                                        <g key={key} opacity={opacity} className={className} onClick={() => {\n                                                            const newActiveStore = pushOrPop(activeStore, storeName, selectMode)\n                                                            const newType = chain(newActiveStore)\n                                                                .map(d2 => storeMapType[d2])\n                                                                .uniq()\n                                                                .value()\n                                                            setActiveStore(newActiveStore)\n                                                            setActiveClassify(newType)\n                                                        }}>\n                                                            <path {...attr} className='store-button' />\n                                                            <g className='store-label'>\n                                                                <path {...textPathHrefProps} />\n                                                                <text>\n                                                                <textPath {...textPathProps}>\n                                                                    {storeName.split(' ').map(d => d[0]).join().replace(/,/g, '')}\n                                                                </textPath>\n                                                                </text>\n                                                            </g>\n                                                        </g>\n                                                    )\n                                                })\n                                            }\n                                        </g>\n                                    )\n                                })\n                            }\n                        </g>\n                        <g className='customer' transform={`translate(${width/2}, ${height / 2})`}>\n                            <circle className='bg' cx={0} cy={0} r={radiusArr[1][0]}/>\n                            <g className='links' />\n                            <g>\n                                {\n                                    ccNumData.map((d, i) => {\n                                        const opacity = exitCCArr.includes(d) ? 1 : 0.1\n                                        const thisConsumeData = originCCdata.filter(d1 => d1.id === d)\n                                        // const priceA = thisConsumeData.filter(d1 => d1.type === 'cash')\n                                        //     .reduce((num, d1) => {\n                                        //         return add(num, d1.price)\n                                        //     }, 0)\n                                        // const priceB = thisConsumeData.filter(d1 => d1.type === 'justCC')\n                                        //     .reduce((num, d1) => {\n                                        //         return add(num, d1.price)\n                                        //     }, 0)\n                                        // console.log(priceA === priceB)\n                                        // console.log(thisConsumeData.filter(d1 => d1.type === 'justCC'))\n                                        const arcData = chain(thisConsumeData)\n                                            .reduce((obj, d1) => {\n                                                obj[d1.locationType] = {\n                                                    value: obj[d1.locationType]\n                                                    ? add(obj[d1.locationType].value, d1.price)\n                                                    : Number(d1.price),\n                                                    type: d1.locationType,\n                                                }\n                                                return obj\n                                            }, {})\n                                            .values()\n                                            // .flatten()\n                                            .value()\n                                        const total = thisConsumeData.reduce((t, d1) => add(t, d1.price), 0)\n                                        const thisAngleScale = scaleLinear()\n                                            .domain([0, total])\n                                            .range([0, 2 * Math.PI])\n                                        const thisArcFun = arc()\n                                            .innerRadius(0)\n                                            .outerRadius(5)\n                                            .startAngle(d1 => {\n                                                const index = arcData.findIndex(d2 => d2.type === d1.type)\n                                                const startValue = chain(arcData)\n                                                    .slice(0, index)\n                                                    .map('value')\n                                                    .reduce((t, d2) => add(t, d2), 0)\n                                                    .value()\n                                                return thisAngleScale(startValue)\n                                            })\n                                            .endAngle(d1 => {\n                                                const index = arcData.findIndex(d2 => d2.type === d1.type)\n                                                const endValue = chain(arcData)\n                                                    .slice(0, index)\n                                                    .map('value')\n                                                    .reduce((t, d2) => add(t, d2), 0)\n                                                    .value() + d1.value\n                                                return thisAngleScale(endValue)\n                                            })\n                                        return (\n                                            <g\n                                                opacity={opacity}\n                                                id={d}\n                                                className='custom-item'\n                                                transform={`translate(${i * 10}, ${0})`}\n                                                onClick={() => {\n                                                    const newActiveClassisy = pushOrPop(activeCustom, d, selectMode)\n                                                    setActiveCustom(newActiveClassisy)\n                                                }}\n                                            >\n                                                {\n                                                    arcData.map(d1 => {\n                                                        const attr = {\n                                                            d: thisArcFun(d1),\n                                                            key: `small-${d1.type}`,\n                                                            fill: colorScale(d1.type),\n                                                            stroke: colorScale(d1.type),\n                                                            fillOpacity: .3,\n                                                        }\n                                                        return <path {...attr}/>\n                                                    })\n                                                }\n                                                <text\n                                                    dy={-8}\n                                                >\n                                                    {d}\n                                                </text>\n                                            </g>\n                                        )\n                                    })\n                                }\n                            </g>\n                        </g>\n                        <g className='customerTrack' transform={`translate(${width/2}, ${height / 2})`}>\n                            {\n                                Object.entries(pointObj)\n                                    .map(d => {\n                                        const [name, data] = d\n                                        let opacity = activeCustom.includes(name) ? 1 : 0\n                                        // let opacity = consumeData.map(d1 => d1.id).includes(name) ? 1 : 0\n                                        if (opacity) {\n                                            opacity = showTrack ? 1 : 0\n                                        }\n                                        return (\n                                            <g opacity={opacity} key={name}>\n                                                {data.map(d1 => {\n                                                    return <path d ={trackPath(d1)} key={d1.toString()} />\n                                                })}\n                                            </g>\n                                            \n                                        )\n                                    })\n                            }\n                        </g>\n                    </g>\n                </svg>\n            </div>\n            <div className='right'>\n                <div className='condition'>\n                    <div className=\"item\">\n                        select mode：\n                        {['single', 'mulitiple'].map(d => {\n                            return (\n                                <>\n                                    <label htmlFor={d}>{d}</label>\n                                    <input\n                                        type='radio'\n                                        name='select-mode'\n                                        checked={selectMode === d}\n                                        onChange={() => {\n                                            if (selectMode !== d) {\n                                                setselectMode(d)\n                                            }\n                                        }}\n                                        value={d}\n                                        id={d}\n                                    />\n                                </>\n                            )\n                        })}\n                    </div>\n                    <div className='item'>\n                        show customer track：\n                        <input\n                            type='checkbox'\n                            name='track-mode'\n                            checked={showTrack}\n                            onChange={() => {\n                                setshowTrack(!showTrack)\n                            }}\n                        />\n                    </div>\n                    <div className='item'>\n                        merge method：\n                        {['union', 'intersection'].map(d => {\n                            return (\n                                <>\n                                    <label htmlFor={d}>{d}</label>\n                                    <input\n                                        type='radio'\n                                        name='merge-mode'\n                                        checked={mergefun === d}\n                                        onChange={() => {\n                                            if (mergefun !== d) {\n                                                setMergeFun(d)\n                                            }\n                                        }}\n                                        value={d}\n                                        id={d}\n                                    />\n                                </>\n                            )\n                        })}\n                    </div>\n                    <div className='item'>\n                        <button onClick={() => {\n                            setActiveStore([])\n                            setActiveClassify([])\n                            setActiveCustom([])\n                        }}>Refresh</button>\n                    </div>\n                </div>\n                <div className='legend'>\n                    {storeClassify.map(d => {\n                        const { type } = d\n                        const originColor = colorScale(type)\n                        let bgColor = color(originColor)\n                        bgColor.opacity = .6\n                        bgColor += ''\n                        let className = activeClassify.includes(type) ? 'active' : ''\n                        if (activeClassify.length > 0 && !activeClassify.includes(type)) {\n                            className = 'disabled'\n                        }\n                        return (\n                            <div className={`legend-item ${className}`} onClick={() => {\n                                const newActiveClassisy = pushOrPop(activeClassify, type, selectMode)\n                                setActiveClassify(newActiveClassisy)\n                                const newActiveStore = chain(storeClassify)\n                                    .filter(d1 => newActiveClassisy.includes(d1.type))\n                                    .map('data')\n                                    .flatten()\n                                    .value()\n                                setActiveStore(newActiveStore)\n                            }}>\n                                <div className='legend-label' style={{\n                                    backgroundColor: bgColor,\n                                    borderColor: originColor,\n                                }} />\n                                <div className='legend-name'>{type}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}","import { json } from 'd3-fetch'\nimport { chain, countBy, forIn, sumBy, } from 'lodash'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport moment from 'moment'\nimport { axisBottom, axisTop, curveStep, extent, line, schemeCategory10, scaleLinear, scaleOrdinal, scaleTime, scaleBand, select, schemePaired, easeLinear } from 'd3'\nimport { building_coordinate } from '../../data/buliding_coordinate'\nimport { calcualteStoreColor, findLocaiton, pushOrPop } from '../../utils'\nimport { dayStr } from '../../data/consumer_data'\nimport './index.scss'\n\n\nfunction findHour(timestamp) {\n    const hour = parseInt(timestamp.split(' ')[1].split(':')[0])\n    return hour\n}\n\nconst timeRange = [\n    {\n        name: 'Sleep.Morning',\n        key: 'sm',\n        range: [0, 6],\n    },\n    {\n        name: 'Breakfast',\n        key: 'bf',\n        range: [6, 9],\n    },\n    {\n        name: 'Working.AM',\n        key: 'wa',\n        range: [9, 12],\n    },\n    {\n        name: 'Lunch',\n        key: 'l',\n        range: [12, 15],\n    },\n    {\n        name: 'Working.PM',\n        key: 'wp',\n        range: [15, 18],\n    },\n    {\n        name: 'Dinner',\n        key: 'd',\n        range: [18, 20],\n    },\n    {\n        name: 'After Dinner',\n        key: 'ad',\n        range: [20, 22],\n    },\n    {\n        name: 'Sleep.Night',\n        key: 'sn',\n        range: [22, 24],\n    },\n]\nfunction calcualteTimeRange(hour) {\n    return timeRange.find(d => d.range[0] <= hour && d.range[1] > hour).key\n}\nconst [width, height] = [1140,700]\nconst [top, right, bottom, left] = [40, 20, 20, 300]\nconst graphHeight = height - top - bottom\nconst graphWidth = width - left - right\n\nconst createLine = line()\n    // .curve(curveBasis)\n    .curve(curveStep)\n\nexport default function CarTrack() {\n    //!=============================== 图背景相关 ===============================\n    // ============== 画坐标轴 ==============\n    const timeScale = useMemo(() => {\n        return scaleTime(\n            [new Date('2020-01-01 00:00:00'), new Date('2020-01-01 23:59:59')]\n        , [0, graphWidth])\n    }, [])\n\n    useEffect(() => {\n        const tickValues = timeRange.map(d => new Date(`2020-01-01 ${d.range[0]}:00:00`))\n        const tickFormat = d => moment(d).format('HH:mm')\n        select('.timeAxisBottom').call(axisBottom().tickValues(tickValues).tickFormat(tickFormat).scale(timeScale))\n        select('.timeAxisTop').call(axisTop().tickValues(tickValues).tickFormat(tickFormat).scale(timeScale))\n    }, [timeScale])\n\n    //! =============================== 左侧图数据相关 ===============================\n\n    // ============== 监听原始数据，程序的开始 ==============\n    const [originData, setoriginData] = useState([])\n\n    useEffect(() => {\n        json('./data/gpswithstop.json').then(gps => {\n            let unknowCount = 0\n            gps.forEach(d => {\n                const newStopArr = d.stopArr.map(d1 => {\n                    const { long, lat } = d1\n                    let location = findLocaiton([long, lat])\n                    if (!location) {\n                        const item = {\n                            name: `unknow_${unknowCount}`,\n                            desc: '',\n                            range: [[Number(long) - 0.001, Number(lat) + 0.001], [Number(long) + 0.001, Number(lat) - 0.001]],\n                            type: 'unknow',\n                        }\n                        building_coordinate.push(item)\n                        location = findLocaiton([long, lat])\n                        unknowCount += 1\n                    }\n                    const locationInfo = building_coordinate.find(d2 => d2.name === location)\n                    return {\n                        ...d1,\n                        location,\n                        locationInfo,\n                    }\n                })\n                d.stopArr = newStopArr\n            })\n            console.log(gps)\n            setoriginData(gps)\n        })\n    }, [])\n\n    // ============== 根据原始数据获取所有的汽车的ID ==============\n    const carid = useMemo(() => {\n        return originData.map(d => d.id)\n    }, [originData])\n\n    // ============== 汽车ID的Y比例尺 ==============\n    const carIdScale = useMemo(() => {\n        return scaleBand(carid, [0, graphHeight])\n    }, [carid])\n    // ============== 汽车颜色计算 ==============\n    const calCarColor = useMemo(() => {\n        return scaleOrdinal(carid, schemePaired)\n    }, [carid])\n    \n    // ============== 汽车的选中 ==============\n    const [activeCarId, setactiveCarId] = useState(['1'])\n\n    // ============== 定义日期的y轴比例尺 ==============\n    const dayStrScale = useMemo(() => {\n        return scaleBand(dayStr, [0, graphHeight]).paddingInner(.1)\n    }, [])\n\n    // ============== 日期的选中 ==============\n    const [activetime, setactivetime] = useState(dayStr)\n\n    // ============== 地点的选中 ==============\n    const [disabledLocation, setDisabledLocation] = useState([])\n\n    // ============== 右侧图所用的展示数据 ==============\n    const [useData, setuseData] = useState([])\n\n    // ============== 根据汽车和日期的选中，算出右侧图数据 ==============\n    useEffect(() => {\n        const useData =  originData\n            .filter(d => activeCarId.includes(d.id))\n            .map(d => ({\n                id: d.id,\n                stopArr: d.stopArr\n                .filter(\n                    d1 => activetime.includes(d1.st.split(' ')[0])\n                )\n            }))\n        setuseData(useData)\n    }, [originData, activeCarId, activetime])\n\n    //! =============================== 右侧图数据相关 ===============================\n    // ============== 计算每个停留点高度的scale ==============\n    const heightScale = useMemo(() => scaleLinear(), [])\n\n    // ============== 商店legend的数据 ==============\n    const [stopLegend, setstopLegend] = useState([])\n\n    // ============== 查看商店细节的 ==============\n    const [detailLocation, setdetailLocation] = useState([])\n\n    // ============== 计算每个车每天的在不同的停留点 ==============\n    const carStopArr = useMemo(() => {\n        let useStopArr = chain(useData)\n            .map('stopArr')\n            .flatten()\n            .map(d => {\n                const {st} = d\n                const [time] = st.split(' ')\n                const hour = findHour(st)\n                const timeRange = calcualteTimeRange(hour)\n                return {\n                    ...d,\n                    hour,\n                    time,\n                    range: timeRange,\n                }\n            })\n            .value()\n\n        const newStopLegend = chain(useStopArr)\n            .map(d => d.locationInfo.classify)\n            .uniq()\n            .map(d => {\n                const data = chain(useStopArr)\n                    .filter(d1 => d1.locationInfo.classify === d)\n                    .map('location')\n                    .uniq()\n                    .value()\n                return {\n                    classify: d,\n                    data,\n                }\n            })\n            .value()\n        setstopLegend(newStopLegend)\n\n        // useStopArr = useStopArr.filter(d => !disabledLocation.includes(d.location))\n\n        const maxValue = chain(useStopArr)\n            .map('data')\n            .flatten()\n            .countBy('range')\n            .values()\n            .maxBy()\n            .value()\n            \n        heightScale.domain([0, maxValue])\n            .range([4, graphHeight/ 2])\n        return useStopArr\n    }, [heightScale, useData])\n\n    // ============== 定义每一个Range的比例尺 ==============\n    const timeScaleObj = useMemo(() => {\n        return timeRange.reduce((obj, d) => {\n            const data = carStopArr.filter(d1 => d1.range === d.key)\n            const countObj = countBy(data.map(d1 => d1.location))\n            const countData = chain(countObj)\n                .entries()\n                .map(d => ({\n                    name: d[0],\n                    value: d[1],\n                }))\n                .orderBy('value', 'desc')\n                .value()\n\n            const sum = sumBy(countData, 'value')\n            const domain = []\n            const gap = 20\n            const totalSpace = heightScale(sum) + (countData.length - 1) * gap\n            const topItem = (graphHeight - totalSpace) / 2\n            const range = countData.map((d1, i) => {\n                domain.push(d1.name)\n                const valuePrv = sumBy(countData.slice(0, i), 'value')\n                return topItem + heightScale(sum) * valuePrv / sum + i * gap\n            })\n            obj[d.key] = {\n                ...d,\n                data,\n                scale: scaleOrdinal(domain, range), //地点\b在y上的比例尺\n            }\n            domain.forEach(store => {\n                const value = countObj[store]\n                const idArr = chain(data)\n                    .filter(d1 => d1.location === store)\n                    .map('id')\n                    .uniq()\n                    .sortBy()\n                    .value()\n                // 汽车停留点在地点内部的位置偏移比例尺\n                obj[d.key][`${store}Scale`] = scaleLinear([1, value], [0, heightScale(value)])\n                // 汽车箭头的比例尺\n                obj[d.key][`${store}CarIdScale`] = scaleBand(idArr, [0, heightScale(value)])\n            })\n            return obj\n        }, {})\n    }, [carStopArr, heightScale])\n\n    // ============== 商店的位置，也是根据停留点得到的 ==============\n    const stopLocation = useMemo(() => {\n        const useData = chain(carStopArr)\n        .reduce((obj, d) => {\n            const key = `${d.range}-${d.location}`\n            const dataArr = obj[key] ? obj[key].data : []\n            dataArr.push(d)\n            const [st, et] = extent(\n                chain(dataArr)\n                    .map('st')\n                    .map(d1 => new Date(`2020-01-01 ${d1.split(' ')[1]}`).getTime())\n                    .value()\n            ).map(d1 => moment(d1).format('MM/DD/YYYY HH:mm:ss'))\n            obj[key] = {\n                key,\n                data: dataArr,\n                range: d.range,\n                st,\n                et,\n                location: d.location,\n                locationInfo: d.locationInfo,\n                count: dataArr.length,\n            }\n            return obj\n        }, {})\n        .values()\n        .value()\n        return useData\n    }, [carStopArr])\n\n    // ============== 汽车的连线，也是根据停留点得到的 ==============\n    const carTrack = useMemo(() => {\n        const useData = chain(carStopArr)\n            .reduce((obj, d) => {\n                const dataArr = obj[d.id] ? obj[d.id].data : []\n                dataArr.push(d)\n                obj[d.id] = {\n                    id: d.id,\n                    data: dataArr,\n                }\n                return obj\n            }, {})\n            .values()\n            .map(car => {\n                const { data, id } = car\n                const trackArr = chain(data)\n                    .reduce((obj, d) => {\n                        const key = d.day\n                        if(!obj[key])obj[key] = []\n                        obj[key].push(d)\n                        return obj\n                    }, {})\n                    .values()\n                    .reduce((obj, d) => {\n                        d.forEach((stopItem, i) => {\n                            if (i === 0) return\n                            const source = d[i-1].location\n                            const sourceRange = d[i-1].range\n                            const target = stopItem.location\n                            const targetRange = stopItem.range\n                            const key = `${source}-${sourceRange}-${target}-${targetRange}`\n                            obj[key] = {\n                                key,\n                                source,\n                                target,\n                                sourceRange,\n                                targetRange,\n                                count: obj[key] ? obj[key].count + 1 : 1,\n                            }\n                        })\n                        return obj\n                    }, {})\n                    .values()\n                    .value()\n                return {\n                    id,\n                    track: trackArr,\n                }\n            })\n            .value()\n        return useData\n    }, [carStopArr])\n\n    // ============== 汽车连线宽度的比例尺 ==============\n    const pathWidthScale = useMemo(() => {\n        const domain = extent(chain(carTrack).map('track').flatten().map('count').value())\n        return scaleLinear(domain, [1,5])\n    }, [carTrack])\n\n    //! =============================== tooltip相关 ===============================\n    const [tooltips, settooltips] = useState({\n        style: {\n            display: 'none',\n        },\n        content: {\n            name: '',\n        },\n    })\n\n    const closeTips = () => settooltips({\n        style: {\n            display: 'none',\n        },\n        content: {\n            name: '',\n        },\n    })\n\n    //! =============================== 其他 ===============================\n    const obj = {}\n\n    return (\n        <div className='carTrackGraph'>\n            <svg height={height} width={width}>\n                <g className=\"bg-left\" transform={`translate(${100}, ${top})`}>\n                    <g className='car'>\n                        {carid.map(d => {\n                            const gAttr = {\n                                key: d,\n                                transform: `translate(${0}, ${carIdScale(d) + carIdScale.bandwidth()/ 2})`,\n                                className: `carItem ${activeCarId.includes(d) ? 'active' : 'disabled'}`,\n                                onClick: () => {\n                                    const newCarId = pushOrPop(activeCarId, d, 'mulity')\n                                    setactiveCarId(newCarId)\n                                }\n                            }\n                            const color = calCarColor(d)\n                            const circleAttr = {\n                                cx: 0,\n                                cy: 0,\n                                stroke: color,\n                                fill: color,\n                            }\n                            const textAttr = {\n                                dx: 6,\n                                dy: 3,\n                            }\n                            return (\n                                <g {...gAttr}>\n                                    <circle {...circleAttr}/>\n                                    <text {...textAttr}>{d}</text>\n                                </g>\n                            )\n                        })}\n                    </g>\n                    <g className='day' transform={`translate(100, 0)`}>\n                        {dayStr.map(d => {\n                            const y = dayStrScale(d)\n                            const spaceItem = dayStrScale.bandwidth()\n                            const gAttr = {\n                                key: d,\n                                transform: `translate(${0}, ${y + spaceItem / 2})`,\n                                className: `dayItem ${activetime.includes(d) ? 'active' : 'disabled'}`,\n                                onClick: () => {\n                                    const newActiveTime = pushOrPop(activetime, d, 'mulity')\n                                    setactivetime(newActiveTime)\n                                }\n                            }\n                            const rectAttr = {\n                                x: 0,\n                                y: -spaceItem / 2,\n                                height: spaceItem,\n                            }\n                            const textAttr = {\n                                dx: 14,\n                            }\n                            const day = d.split('/')[1]\n                            return (\n                                <g {...gAttr}>\n                                    <rect {...rectAttr}/>\n                                    <text {...textAttr}>{`${day} ${['11', '12', '17', '18'].includes(day) ? 'weekend' : ''}`}</text>\n                                </g>\n                            )\n                        })}\n                    </g>\n                </g>\n                <g className=\"bg-right\" transform={`translate(${left}, ${top})`}>\n                <g className='transform-g'>\n                    {/* 选择图 */}\n                    {/* 主图 */}\n                    <g className='timeAxisTop' transform={`translate(${0}, ${0})`}/>\n                    <g className='timeAxisBottom' transform={`translate(${0}, ${height - top - bottom})`}/>\n                    <g className='timeRange'>\n                        {timeRange.map(d => {\n                            const x0 = timeScale(new Date(`2020-01-01 ${d.range[0]}:00:00`))\n                            const x1 = timeScale(new Date(`2020-01-01 ${d.range[1]}:00:00`))\n                            const xhalf = (x1 - x0) / 2\n                            const lineAttr = {\n                                x1: 0,\n                                x2: 0,\n                                y1: 0,\n                                y2: graphHeight,\n                                stroke: '#d9d9d9',\n                                strokeDasharray: 10,\n                            }\n                            const gAttr = {\n                                transform: `translate(${x0}, 0)`,\n                                key: d.name,\n                            }\n                            const textAttr = {\n                                dx: xhalf,\n                                textAnchor: 'middle',\n                                dy: -10,\n                                fontSize: 8,\n                                fill: '#000',\n                            }\n                            return (\n                                <g {...gAttr}>\n                                    <line {...lineAttr} />\n                                    <text {...textAttr}>{d.name}</text>\n                                </g>\n                            )\n                        })}\n                    </g>\n                    {/* 车的连线图 连线和箭头 */}\n                    <g className=\"car\">\n                        {carTrack.map((d, i) => {\n                                const { id, track } = d\n                                const carColor = calCarColor(id)\n                                return (\n                                    <g className='trackItem' key={`${id}-track`}>\n                                        {\n                                            track.map(d1 => {\n                                                const { source, sourceRange, target, targetRange } = d1\n                                                const { scale: sourceScale } = timeScaleObj[sourceRange]\n                                                let sourceY = sourceScale(source)\n                                                const { scale: targetScale } = timeScaleObj[targetRange]\n                                                sourceY += timeScaleObj[sourceRange][`${source}CarIdScale`](id)\n                                                sourceY += timeScaleObj[sourceRange][`${source}CarIdScale`].bandwidth() / 2\n\n                                                let targetY = targetScale(target)\n                                                targetY += timeScaleObj[targetRange][`${target}CarIdScale`](id)\n                                                targetY += timeScaleObj[targetRange][`${target}CarIdScale`].bandwidth() / 2\n\n                                                const sourStop = stopLocation.find(\n                                                    d2=> d2.location === source && d2.range === sourceRange\n                                                )\n                                                let sourceX = timeScale(\n                                                    new Date(`2020-01-01 ${sourStop.et.split(' ')[1]}`)\n                                                )\n\n                                                const targetStop = stopLocation.find(\n                                                    d2=> d2.location === target && d2.range === targetRange\n                                                )\n                                                let targetX = timeScale(\n                                                    new Date(`2020-01-01 ${targetStop.st.split(' ')[1]}`)\n                                                )\n\n                                                if(sourStop.st === sourStop.et) {\n                                                    sourceX = sourceX + 10\n                                                }\n\n                                                const pathArr = [\n                                                    [sourceX, sourceY],\n                                                    [targetX, targetY]\n                                                ]\n\n                                                const pathAttr = {\n                                                    fill: 'none',\n                                                    stroke: carColor,\n                                                    strokeWidth: pathWidthScale(d1.count),\n                                                    strokeOpacity: pathWidthScale(d1.count) / 5,\n                                                }\n                                                const opacity = disabledLocation.includes(targetStop.location)\n                                                || disabledLocation.includes(sourStop.location)\n                                                ? 0.1 : 1\n                                                const gAttr = {\n                                                    opacity,\n                                                    key: d1.key,\n                                                    stroke: carColor,\n                                                }\n                                                return (\n                                                    <g {...gAttr}>\n                                                        <path d={createLine(pathArr)} {...pathAttr} />\n                                                        <line {...{\n                                                            x1: pathArr[0][0],\n                                                            y1: pathArr[0][1] - 3,\n                                                            x2: pathArr[0][0],\n                                                            y2: pathArr[0][1] + 3,\n                                                            strokeWidth: 2,\n                                                        }} />\n                                                        <path d={\n                                                            line()([\n                                                                [\n                                                                    pathArr[1][0] - 2,\n                                                                    pathArr[1][1] - 2\n                                                                ],\n                                                                [\n                                                                    pathArr[1][0] + 2,\n                                                                    pathArr[1][1]\n                                                                ],\n                                                                [\n                                                                    pathArr[1][0] - 2,\n                                                                    pathArr[1][1] + 2\n                                                                ],\n                                                                [\n                                                                    pathArr[1][0] - 2,\n                                                                    pathArr[1][1] - 2\n                                                                ],\n                                                            ])\n                                                        }\n                                                        fill='#fff'\n                                                        />\n                                                    </g>\n                                                )\n                                            })\n                                        }\n                                    </g>\n                                )\n                            })}\n                    </g>\n                    {/* 商店图 矩形表示 */}\n                    <g className=\"stopLocation\">\n                        {stopLocation.map(d => {\n                            const { st,et, range, location, key, count, data } = d\n                            const { scale } = timeScaleObj[range]\n                            const sx = timeScale(new Date(`2020-01-01 ${st.split(' ')[1]}`))\n                            let ex = timeScale(new Date(`2020-01-01 ${et.split(' ')[1]}`))\n                            if(ex < sx) ex = timeScale(new Date(`2020-01-01 23:59:59`))\n                            const y = scale(location)\n                            const rectheight = heightScale(count)\n                            const color = calcualteStoreColor(location)\n                            const rectWidth = ex - sx || 10\n                            const rectAttr = {\n                                x: 0,\n                                y: 0,\n                                width: rectWidth,\n                                height: rectheight,\n                                fill: color,\n                            }\n                            const opacity = disabledLocation.includes(location) ? 0.01 : 1\n                            const className= `stopLocationItem-${range}-${location.replace(/['\\s]/g, '')}`\n                            const gAttr = {\n                                key,\n                                fontSize: 9,\n                                opacity,\n                                className: `stopLocationItem ${className} ${detailLocation.includes(key) ? 'active' : '' }`,\n                                'transform-origin': `${sx} ${y}`,\n                                onMouseEnter: () => {\n                                    const relateCar = chain(data).map('id').countBy().entries().map(d1 => d1.join(':')).join('/n').value()\n                                    const obj = {\n                                        name: location,\n                                        'vis count': count,\n                                        'relate car': relateCar,\n                                    }\n                                    settooltips({\n                                        style: {\n                                            display: 'flex',\n                                            left: ex + left,\n                                            top: y + top,\n                                        },\n                                        content: obj,\n                                    })\n                                },\n                                onMouseOut: closeTips,\n                                onClick: () => {\n                                    closeTips()\n                                    setdetailLocation(pushOrPop(detailLocation, key))\n                                    const scalePower = Math.min(graphHeight / rectheight, graphWidth / rectWidth) / 2\n                                    const transformX = ((graphWidth - rectWidth * scalePower) / 2 - sx) \n                                    const transformY = ((graphHeight - rectheight * scalePower) / 2 - y)\n                                    if (detailLocation.includes(key)) {\n                                        select(`.${className}`)\n                                            .transition()\n                                            .ease(easeLinear)\n                                            .duration(100)\n                                            .attr('transform', 'translate(0, 0)')\n                                    } else {\n                                        select('.stopLocationItem.active')\n                                            .transition()\n                                            .ease(easeLinear)\n                                            .duration(100)\n                                            .attr('transform', 'translate(0, 0)')\n                                        select(`.${className}`)\n                                            .transition()\n                                            .ease(easeLinear)\n                                            .duration(100)\n                                            .attr('transform', `translate(${transformX} ${transformY}) scale(${scalePower})`)\n                                    }\n                                    \n                                },\n                            }\n                            return (\n                                <g {...gAttr}>\n                                    <g className='stopBg' transform={`translate(${sx}, ${y})`}>\n                                        <rect {...rectAttr} />\n                                        <text dx={rectAttr.width / 2}>{d.location}</text>\n                                    </g>\n                                    <g className=\"stopDetail\">\n                                        {\n                                            data.map(d1 => {\n                                                const {st, et, location, range, id } = d1\n                                                const carColor = calCarColor(id)\n                                                const cx = timeScale(new Date(`2020-01-01 ${st.split(' ')[1]}`))\n                                                const storeKey = `${range}-${location}`\n                                                if(!obj[storeKey]) {\n                                                    obj[storeKey] = 1\n                                                } else {\n                                                    obj[storeKey] = obj[storeKey] + 1\n                                                }\n                                                const cy = y + timeScaleObj[range][`${location}Scale`](obj[storeKey])\n                                                const circleAttr = {\n                                                    key: `${location}-${et}-${st}`,\n                                                    transform: `translate(${cx}, ${cy})`,\n                                                    stroke: carColor,\n                                                    fill: carColor,\n                                                    fillOpacity: .4,\n                                                    r: 2,\n                                                    onMouseEnter: () => {\n                                                        console.log(d1)\n                                                        const obj = {\n                                                            car: id,\n                                                            starttime: st,\n                                                            endtime: et,\n                                                            duration: `${d1.hour} hour`\n                                                        }\n                                                        settooltips({\n                                                            style: {\n                                                                display: 'flex',\n                                                                left: cx + left,\n                                                                top: cy + top,\n                                                            },\n                                                            content: obj,\n                                                        })\n                                                    }\n                                                }\n                                                return (\n                                                    <circle {...circleAttr} />\n                                                )\n                                            })\n                                        }\n                                    </g>\n                                </g>\n                            )\n                        })}\n                    </g>\n                </g>\n                </g>\n            </svg>\n            <div className='location'>\n                {stopLegend\n                    .map(d => {\n                        return (\n                            <div className='location-classify' key={d.classify}>\n                                <div className=\"classify-item\">\n                                    <div className=\"classify-item-label\" style={{\n                                        background: calcualteStoreColor(d.data[0])\n                                    }} />\n                                    <div className=\"classify-item-value\">{d.classify}</div>\n                                </div>\n                                <div className=\"location-classify-cotent\">\n                                    {\n                                        d.data.map(d1 => {\n                                            const itemAttr = {\n                                                className: `loaction-item ${disabledLocation.includes(d1) ? 'disabled' : ''}`,\n                                                key: d1,\n                                                onClick: () => {\n                                                    setDisabledLocation(pushOrPop(disabledLocation, d1, 'mul'))\n                                                }\n                                            }\n                                            return (\n                                                <div {...itemAttr}>{d1}</div>\n                                            )\n                                        })\n                                    } \n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n            {/* tooltips */}\n            <div className=\"tooltips tooltips-location\" style={tooltips.style}>\n                    {Object.entries(tooltips.content).map(d => {\n                        const [name, value] = d\n                        return (\n                            <div className=\"tooltip-line\" key={name}>\n                                <div className=\"tooltip-label\">{name}:</div>\n                                <div className=\"tooltip-value\">{\n                                    value.toString().split('/n').map(d1 => <span key={d1}>{d1}</span>)\n                                }</div>\n                            </div>\n                        )\n                    })}                        \n            </div>\n        </div>\n    )\n}\n","import { json } from 'd3-fetch'\nimport { chain, countBy, max } from 'lodash'\nimport React, { useEffect, useRef } from 'react'\nimport './index.scss'\nimport moment from 'moment'\nimport { forceCenter, forceLink, forceManyBody, forceSimulation } from 'd3-force'\nimport { select } from 'd3-selection'\nimport CarTrack from '../components/carTrack'\nimport { findLocaiton } from '../utils'\n\n\nexport default function Cal() {\n\n    function calNode() {\n        return json('./data/gpswithstop.json').then(res => {\n            console.log(res)\n            const nodeData = res.map(d => ({\n                id: d.id,\n                data: d.stopArr.map(d1 => ({\n                    ...d1,\n                    location: findLocaiton([d1.long, d1.lat]),\n                })),\n            }))\n            console.log(nodeData)\n            const linksObj = {}\n            nodeData.forEach((d1) => {\n                nodeData.forEach(d2 => {\n                    if (d1.id === d2.id) return\n                    if (linksObj[`${d1.id}-${d2.id}`] || linksObj[`${d2.id}-${d1.id}`]) return\n                    // const sameLoaction = intersection(d1.location, d2.location)\n                    const sameLoaction = d1.data\n                        .filter(d3 => {\n                            if (!d3.location) return false\n                            const st1 = moment(d3.st).unix()\n                            const et1 = moment(d3.et).unix()\n                            const a = d2.data.filter(d4 => {\n                                const st2 = moment(d4.st).unix()\n                                const et2 = moment(d4.et).unix()\n                                // return (st1 < et2 && et1 > st2 ) && d3.location === d4.location\n                                return Math.abs(st1 - st2) < 3600 && d3.location === d4.location\n                            })\n                            return a.length\n                        })\n                    // const sameLoaction = []\n                    linksObj[`${d1.id}-${d2.id}`] = {\n                        source: d1.id,\n                        target: d2.id,\n                        d1: d1.id,\n                        d2: d2.id,\n                        value: sameLoaction.length,\n                        data: countBy(sameLoaction, 'location')\n                    }\n                })\n            })\n            const nodes = nodeData\n            const links = chain(linksObj).values().filter(d => d.value > 10).value()\n\n            console.log(chain(linksObj).values().orderBy('value', 'desc')\n            .map(d => ({\n                sourceId: d.d1,\n                targetId: d.d2,\n                value: d.value,\n                data: d.data,\n            })).value()\n            )\n\n            console.log(linksObj)\n            return [nodes, links]\n        })\n        // carAssign.reduce(d => {\n            \n        // })\n    }\n    const svgRef = useRef(null)\n\n    const [width, height] = [1000,600]\n    const [top, right, bottom, left] = [40, 20, 20, 60]\n \n    useEffect(() => {\n        // calNode()\n        // .then(res => {\n        //     const [nodes, links] = res\n        //     console.log(nodes, links)\n        //     const value = max(links, d => d.value)\n        //     // console.log(value)\n        //     // console.log(links)\n        //     const force = forceSimulation(nodes)\n        //         .force('links', forceLink(links)\n        //             .id(d => d.id)\n        //             // .strength(d => 0.01 * d.value)\n        //             .distance(100)\n        //         )\n        //         .force('charge', forceManyBody())\n        //         .force('center', forceCenter(width / 2, height / 2))\n        //     const svg = select(svgRef.current)\n        //     const link = svg.append('g')\n        //         .selectAll('g')\n        //         .data(links)\n        //         .enter()\n        //         .append('line')\n        //         // .attr(\"stroke-width\", d => d.value)\n        //         .attr(\"stroke-width\", d => 1)\n        //         .attr(\"stroke\", '#e9e9e9');\n            \n        //     const node = svg.append('g')\n        //         .selectAll('g')\n        //         .data(nodes)\n        //         .enter()\n        //         .append('circle')\n        //         .attr('r', 5)\n        //         .attr('fill', 'red')\n            \n        //     force.on('tick', () => {\n        //         link\n        //             .attr(\"x1\", d => d.source.x)\n        //             .attr(\"y1\", d => d.source.y)\n        //             .attr(\"x2\", d => d.target.x)\n        //             .attr(\"y2\", d => d.target.y);\n\n        //         node\n        //             .attr(\"cx\", d => d.x)\n        //             .attr(\"cy\", d => d.y);\n        //     })\n        // })\n    }, [])\n    return (\n        <div>\n            <CarTrack />\n            <svg ref={svgRef}/>\n        </div>\n    )\n}\n","import { json } from 'd3-fetch'\nimport { geoEquirectangular, geoPath } from 'd3-geo'\nimport { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale'\nimport { line, schemeCategory10, brush, extent, easeLinear, axisTop, axisBottom, brushX, path } from 'd3'\nimport { select, selectAll, event } from 'd3-selection'\nimport { chain } from 'lodash'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport './index.scss'\nimport moment from 'moment'\nimport { carAssign, dayStr, storeMapType } from '../data/consumer_data'\nimport { building_coordinate } from '../data/buliding_coordinate'\nimport { calcualteTypeColor, calHourTime, findLocaiton } from '../utils'\n\nfunction pushOrPop(arr, d) {\n    const newArr = [...arr]\n    if (newArr.includes(d)) {\n        return newArr.filter(d1 => d1 !== d)\n    }\n    newArr.push(d)\n    return newArr\n}\n\nexport default function SecondQ() {\n    const [ width, height ] = [1000, 600]\n    const mapRef = useRef(null)\n    const trackRef = useRef(null)\n\n    const [map, setmap] = useState([])\n    const [allTrack, setAllTrack] = useState([])\n\n    const projection = useMemo(() => geoEquirectangular(), [])\n    const colorScale = useMemo(() => \n        scaleOrdinal()\n            .domain(allTrack.map(d => d.id))\n            .range(schemeCategory10)\n    ,[allTrack])\n\n\n    const [selectCar, setSelectCard] = useState([])\n    const [selectDay, setSelectDay] = useState(dayStr)\n    const [selectHour, setSelectHour] = useState(['00:00:00', '23:59:59'].map(d => calHourTime(d)))\n\n    const carArr = useMemo(() =>{\n        const res = chain(allTrack)\n            .map('id')\n            .uniq()\n            .map(d => {\n                const info = carAssign.find(d1 => d1.CarID === d)\n                if (info) {\n                    return {\n                        id: d,\n                        name: `${info.FirstName} ${info.LastName}`,\n                        type: info.CurrentEmploymentType,\n                        title: info.CurrentEmploymentTitle,\n                    }\n                }\n                return {\n                    id: d,\n                }\n            })\n            .value()\n        // setSelectCard(res.map(d => d.id))\n        return res\n    } ,[allTrack])\n\n    useEffect(() => {\n        json('./data/map.json').then(res => {\n            projection.fitSize([width, height], res)\n            window.projection = projection\n            setmap(res.features)\n            json('./data/gpswithstop.json').then(res => {\n                // calStopArr(projection)\n                setAllTrack(res)\n            })\n        })\n    }, [])\n\n    const brushRef = useRef(null)\n    useEffect(() => {\n        select(brushRef.current)\n            .call(\n                brush()\n                .extent([[0,0], [width, height]])\n                .on('end', e => {\n                    const {selection} = event\n                    if(!selection) {\n                        return \n                    }\n                    const arr = []\n                    console.log(selection.map(d => projection.invert(d)))\n                    selectAll('.stopDot')\n                        .filter(function () {\n                            return selection[0][0] <= select(this).attr('cx')\n                            && selection[1][0] >= select(this).attr('cx')\n                            && selection[0][1] <= select(this).attr('cy')\n                            && selection[1][1] >= select(this).attr('cy')\n                        })\n                        .each(function (){\n                            arr.push(JSON.parse(select(this).attr('data')))\n                        })\n\n                    console.log(arr)\n                })\n            )\n    }, [])\n\n    const showTrack = useMemo(() => {\n        return allTrack.filter(d => selectCar.includes(d.id))\n    }, [selectCar, allTrack])\n\n    const stopArr = useMemo(() => {\n        return chain(showTrack)\n            .map(d => d.stopArr)\n            .flatten()\n            .filter(d1 => selectDay.includes(d1.st.split(' ')[0]))\n            .filter(d1 => {\n                const hour = d1.st.split(' ')[1]\n                const thisTime = calHourTime(hour)\n                return thisTime >= selectHour[0] && thisTime <= selectHour[1]\n            })\n            .value()\n    }, [selectDay, selectHour, showTrack])\n\n    const stopCircleRScale = useMemo(() => {\n        const domain = showTrack.length ? extent(\n            chain(showTrack).map('stopArr').flatten().value(),\n            d => d.gap\n        ) : [0, 0]\n        return scaleLinear()\n            .domain(domain)\n            .range([5, 5])\n    }, [showTrack])\n\n\n    const [tooltip, setTooltip] = useState({\n        style: {\n            display: 'none',\n        },\n        content: {\n            \n        },\n    })\n\n    function mouseenter(e, content) {\n        setTooltip({\n            style: {\n                display: 'block',\n                left: e.clientX + 10,\n                top: e.clientY + 10,\n            },\n            content,\n        })\n    }\n    \n\n    function play() {\n        selectAll('.trackItem')\n            .each(function(){\n                const path = select(this).select('.path')\n                const length = path.node().getTotalLength()\n                path\n                    .attr(\"stroke-dasharray\", length + \" \" + length)\n                    .attr(\"stroke-dashoffset\", length)\n                    .transition()\n                    .ease(easeLinear)\n                    .attr(\"stroke-dashoffset\", 0)\n                    .duration(10000)\n\n                const arrow = select(this).select('.arrow')\n                arrow\n                    .attr(\"stroke-width\", 10)\n                    .attr(\"stroke-dasharray\", function() {\n                    return [10, length - 10];\n                    })\n                    .attr(\"stroke-dashoffset\", length)\n                    .transition()\n                    .ease(easeLinear)\n                    .attr(\"stroke-dashoffset\", 10 + .5)\n                    .duration(10000)\n                // .on(\"end\", () => setTimeout(repeat, 1000));\n            })\n    }\n\n    return (\n        <div className='second-graph'>\n            <div>\n            <img src='./data/bg.jpeg' className='realMap' alt='map' />\n            </div>\n            \n            <div className='tooltip' style={tooltip.style}>\n                {Object.entries(tooltip.content).map(d => {\n                    const [key, value] = d\n                    return (\n                        <div className='tooltip-item' key={key}>\n                            <span className='tooltips-label'>{key}: </span>\n                            <span className='tooltips-value'>{value}</span>\n                        </div>\n                    )\n                })}\n            </div>\n            <div className='mapcontainer'>\n                <svg height={height} width={width} className='mapSvg'>\n                    <g className=\"bg\">\n                        <g className=\"map\" ref={mapRef}>\n                            {map.map((d, i) => (\n                                <path key={i} className='map-item' d={geoPath(projection)(d)}/>\n                            ))}\n                        </g>\n                        <g ref={brushRef} />\n                        <g className=\"track\" ref={trackRef}>\n                            {showTrack\n                                .map(d => {\n                                    const { id, data } = d\n                                    const geoArr = data\n                                        .filter(d1 => selectDay.includes(d1.Timestamp.split(' ')[0]))\n                                        .filter(d1 => {\n                                            const hour = d1.Timestamp.split(' ')[1]\n                                            const thisTime = calHourTime(hour)\n                                            return thisTime >= selectHour[0] && thisTime <= selectHour[1]\n                                        })\n                                        .map(d1 => projection([d1.long, d1.lat]))\n\n                                    const attr = {\n                                        stroke: colorScale(id),\n                                        d: line()(geoArr),\n                                        className: 'path'\n                                    }\n                                    const attr2 = {\n                                        strokeWidth: 10,\n                                        className: 'arrow',\n                                        d: line()(geoArr),\n                                        strokeDasharray: [10, 100000 - 10],\n                                    }\n                                    return (\n                                        <g className={`trackItem trackItem-${id}`} key={id}>\n                                            <path {...attr} />\n                                            <path {...attr2} />\n                                        </g>\n                                    )\n                                }\n                            )}\n                        </g>\n                        <g className=\"stop\">\n                            {stopArr.map((d,i) => {\n                                const { id, long, lat, gap } = d\n                                const [cx, cy] = projection([long, lat])\n                                const keyItem = `${long}_${lat}_${id}`\n                                const className = `stopitem_${keyItem}`\n                                const attr = {\n                                    cx, cy,\n                                    r: stopCircleRScale(gap),\n                                    key: keyItem,\n                                    fill: colorScale(id),\n                                    stroke: colorScale(id),\n                                    // fill: 'red',\n                                    className: `stopDot ${className}`,\n                                    data: JSON.stringify(d),\n                                }\n                                return (\n                                    <circle {...attr}/>\n                                )\n                            })}\n                        </g>\n                        <g className='store'>\n                            {building_coordinate.map(d => {\n                                const {range, name} = d\n                                const cpname = name.replace(/'|\\.|\\s/g, '')\n                                const [x1, y1] = projection(range[0])\n                                const [x2, y2] = projection(range[1])\n                                const rectAttr = {\n                                    x: x1,\n                                    y: y1,\n                                    height: y2 - y1,\n                                    width: x2 - x1,\n                                    fill: calcualteTypeColor(d.classify),\n                                    stroke: calcualteTypeColor(d.classify),\n                                    fillOpacity: .3,\n                                    onMouseEnter: () => {\n                                        select(`.${cpname}_label`).attr('display', null)\n                                    },\n                                    onMouseOut: () => {\n                                        select(`.${cpname}_label`).attr('display', 'none')\n                                    }\n                                }\n                                const textAttr = {\n                                    x: x1 + (x2 - x1) / 2,\n                                    y: y1 - 10,\n                                    textAnchor: 'middle',\n                                    fontSize: '12px',\n                                    fontWeight: 'bolder',\n                                    display: 'none',\n                                    className: `${cpname}_label`,\n                                    TextEvent: 'none',\n                                }\n\n                                const gAttr = {\n                                    key: `store-${name}`,\n                                }\n                                return (\n                                    <g {...gAttr}>\n                                        <rect {...rectAttr} />\n                                        <text {...textAttr}>{name}</text>\n                                    </g>\n                                )\n                            })}\n                        </g>\n                    </g>\n                </svg>\n                <div className=\"carlist\">\n                    <table>\n                        <thead>\n                            <th>Color</th>\n                            <th>CarID</th>\n                            <th>Staff</th>\n                        </thead>\n                        <tbody>\n                            {\n                                carArr.map(d => (\n                                    <tr\n                                        key={d.id}\n                                        className={`${selectCar.includes(d.id) ? 'active' : 0}`}\n                                        onClick={() => {\n                                            const newSelectCar = pushOrPop(selectCar, d.id)\n                                            setSelectCard(newSelectCar)\n                                        }}\n                                    >\n                                        <td><div className='color-legend' style={{\n                                            background: colorScale(d.id)\n                                        }}/></td>\n                                        <td>{d.id}</td>\n                                        <td>{d.name}</td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className='second'>\n                <SplitTrack\n                    GasData={allTrack.filter(d => selectCar.includes(d.id))}\n                    selectDay = {selectDay}\n                    selectDayCB = {d => {setSelectDay(d)}}\n                    brushCB = {hourArr => setSelectHour(hourArr.map(d => calHourTime(d)))}\n                    playCB = {play}\n                />\n                {/* <FirstQ /> */}\n            </div>\n        </div>\n    )\n}\n\n\nfunction SplitTrack({ \n    GasData, selectDay, selectDayCB,\n    brushCB,\n    playCB,\n }) {\n    const [width, height] = [1000, 500]\n    const [top, right, bottom, left] = [20,100,20,20]\n    const realHeight = height - top - bottom\n    const realWidth = width - left - right\n\n    const topRef = useRef(null)\n    const bottomRef = useRef(null)\n    const brushRef = useRef(null)\n\n    const xScale = scaleTime()\n        .domain([new Date('2020-01-01 00:00:00'), new Date('2020-01-01 23:59:59')])\n        .range([0, realWidth])\n        \n    const topAxis = axisTop().scale(xScale)\n    const bottomAxis = axisBottom().scale(xScale)\n\n    useEffect(() => {\n        select(topRef.current).call(topAxis)\n        select(bottomRef.current).call(bottomAxis)\n        select(brushRef.current).call(\n            brushX()\n            .extent([[0,0], [realWidth, realHeight]])\n            .on('end', () => {\n                const { selection } = event\n                if (selection) {\n                    const timeArr = selection.map(d => xScale.invert(d)).map(d => moment(d).format('HH:mm:ss'))\n                    brushCB(timeArr)\n                    console.log(timeArr)\n                } else {\n                    brushCB(['00:00:00', '23:59:59'])\n                }\n            })\n        )\n    }, [])\n\n    const axisPosScale = scalePoint()\n        .domain(dayStr)\n        .range([realHeight / dayStr.length, realHeight])\n        .align(1)\n\n    const gpsArr = useMemo(() => {\n        // console.log(GasData)\n       const result = chain(GasData)\n        .cloneDeep()\n        .forEach(trackItem => {\n            const { data, stopArr } = trackItem\n            trackItem.day = chain(dayStr)\n                .reduce((obj, day) => {\n                    obj[day] = {\n                        track: data.filter(d => d.Timestamp.split(' ')[0] === day),\n                        stopDot: stopArr.filter(d => d.st.split(' ')[0] === day),\n                    }\n                    return obj\n                }, {})\n                .value()\n        })\n        .value()\n        // console.log(result[0].day['01/09/2014'])\n        return result\n    }, [GasData])\n\n    const gap = axisPosScale.step()\n\n    const xItem = useMemo(() => {\n        return scalePoint()\n            .domain(GasData.map(d => d.id))\n            .range([0, gap])\n            .align(0)\n    }, [GasData])\n\n    return (\n        <div className='explain'>\n            <div className='toolbox'>\n                <button onClick={() => {\n                    playCB()\n                    select('.scaleplate')\n                        .attr(\"x1\", 0)\n                        .attr(\"x2\", 0)\n                        .transition()\n                        .ease(easeLinear)\n                        .attr(\"x1\", realWidth)\n                        .attr(\"x2\", realWidth)\n                        .duration(10000)\n                    select('.scaleplate')\n                        .transition()\n                        .attr(\"x1\", 0)\n                        .attr(\"x2\", 0)\n                        .delay(10000)\n\n                }}>\n                    play\n                </button>\n                <input type='checkbox' id='checkall' onChange={e => {\n                    const val = e.target.checked\n                    if (val) {\n                        selectDayCB(dayStr)\n                    } else {\n                        selectDayCB([])\n                    }\n\n                }}/>\n                <label htmlFor=\"checkall\">全选</label>\n            </div>\n            <svg width={width} height={height} className='timeScale'>\n                <g className=\"bg\" transform={`translate(${left}, ${top})`}>\n                    {/* 坐标 */}\n                    <g ref={topRef} />\n                    <g ref={bottomRef} transform={`translate(0, ${realHeight})`}  />\n                    {/* time split */}\n                    <line className='scaleplate' x1={0} y1={0} x2={0} y2={realHeight} />\n                    {/* brush */}\n                    <g className=\"brush\" ref={brushRef} />\n                    {/* day */}\n                    {dayStr.map(d => {\n                        const className = selectDay.includes(d) ? '' : 'disabled'\n                        return (\n                            <g transform={`translate(${0}, ${axisPosScale(d)})`} className={`dayItem ${className}`} key={d}>\n                                <line  x1={0} y1={0} x2={realWidth} y2={0}/>\n                                <text onClick={() => {\n                                    const newDay = pushOrPop(selectDay, d)\n                                    selectDayCB(d)\n                                }} transform={`translate(${realWidth + 10}, ${-gap / 2})`}>{d}</text>\n                            </g>\n                        )\n                    })}\n                    {/* gps */}\n                    {\n                        gpsArr.map((carItem, index) => {\n                            const { day, id } = carItem\n                            return Object.entries(day)\n                                .map(dayitem => {\n                                    const [dayName, data] = dayitem\n                                    const { stopDot } = data\n                                    const pathFun = path()\n                                    \n                                    stopDot.forEach((d, i) => {\n                                        const x1 = xScale(new Date(`2020-01-01 ${d.st.split(' ')[1]}`))\n                                        const x2 = xScale(new Date(`2020-01-01 ${d.et.split(' ')[1]}`))\n                                        if (i === 0) pathFun.moveTo(x1, 0)\n                                        pathFun.lineTo(x1, 0)\n                                        pathFun.lineTo(x1, -10)\n                                        if (d.et.split(' ')[0] === dayName) {\n                                            pathFun.lineTo(x2, -10)\n                                            pathFun.lineTo(x2, -0)\n                                        }\n                                    })\n                                    console.log(xItem(id))\n                                    const y2 = gap / (gpsArr.length + 1) * (index + 1)\n                                    return (\n                                        <g transform={`translate(${0}, ${axisPosScale(dayName) - gap + y2})`} key={`${dayName}-${id}`}>\n                                                {\n                                                    stopDot.map(stopItem => {\n                                                        const location = findLocaiton([stopItem.long, stopItem.lat])\n                                                        const sx = xScale(new Date(`2020-01-01 ${stopItem.st.split(' ')[1]}`))\n                                                        let ex = xScale(new Date(`2020-01-01 ${stopItem.et.split(' ')[1]}`))\n                                                        if(ex < sx) ex = xScale(new Date(`2020-01-01 23:59:59`))\n                                                        \n                                                        const locationType = location ? storeMapType[location] : 'location'\n\n                                                        const rectAttr = {\n                                                            x1: 0,\n                                                            y1: 0,\n                                                            x2: ex-sx,\n                                                            y2: 0,\n                                                            // width: ex-sx,\n                                                            strokeWidth: 2,\n                                                            fill: calcualteTypeColor(locationType),\n                                                            stroke: calcualteTypeColor(locationType),\n                                                            className: 'stopItem',\n                                                            fillOpacity: .2,\n                                                            rx: 5,\n                                                            ry: 5,\n                                                        }\n                                                        const textAttr = {\n                                                            fontSize: 6,\n                                                            x: (ex-sx)/2,\n                                                            y: -6,\n                                                            textAnchor: 'middle',\n                                                            className: 'stopItemLabel'\n                                                        }\n                                                        return (\n                                                            <g transform={`translate(${sx}, ${0})`}  key={`${dayName}-${id}-${sx}`}>\n                                                                <text {...textAttr}>{location ? location.split(' ').map(d => d[0]).join('-') : ''}</text>\n                                                                <line {...rectAttr}>\n                                                                    <title>\n                                                                        {\n                                                                            `时间: ${stopItem.st.split(' ')[1]}--${stopItem.et.split(' ')[1]}\\n地点: ${location}\\n汽车: ${id}\\n消费: ...`\n                                                                        }\n                                                                    </title>\n                                                                </line>\n                                                            </g>\n                                                        )\n                                                    })\n                                                }\n                                        </g>\n                                    )\n                                })\n                        })\n                    }\n                </g>\n            </svg>\n        </div>\n    )\n}","import { HashRouter as Router, Link, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport ConsumerGraph from './components/consumerGraph';\nimport Cal from './dataCal';\nimport SecondQ from './secondQ';\n\nfunction Content({children}) {\n  return <div>\n    {children}\n  </div>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <ConsusePage /> */}\n        <div className='nav'>\n            <Link to=\"/first\">first Q</Link>\n            <Link to=\"/map\">map</Link>\n            <Link to=\"/cal\">cal</Link>\n        </div>\n        <Content>\n          <Switch>\n            <Route path=\"/first\">\n              <ConsumerGraph />\n            </Route>\n            <Route path=\"/map\">\n              <SecondQ />\n            </Route>\n            <Route path=\"/cal\">\n              <Cal />\n            </Route>\n            <Redirect from='/' to='/first' />\n          </Switch>\n        </Content>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}