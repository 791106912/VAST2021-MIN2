{"version":3,"sources":["data/consumer_data.js","data/buliding_coordinate.js","utils/index.js","components/consumerGraph/index.jsx","components/carTrack/index.jsx","dataCal/index.jsx","secondQ/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["timeArr","dayStr","storeClassify","type","data","storeMapType","chain","map","flatten","reduce","obj","d","find","d1","includes","value","timeClassifyData","name","ccLoyMap","carAssign","storeButtonArr","s","e","building_coordinate","desc","range","classify","pushOrPop","arr","mode","newArr","filter","push","add","a","b","parseFloat","Number","toFixed","calHourTime","hour","hourStr","toString","match","length","moment","unix","calcualteTypeColor","id","domain","colorScale","scaleOrdinal","sort","ascending","schemeCategory10","calcualteStoreColor","store","findLocaiton","coor","long","lat","sp","ep","ConsumerGraph","containerRef","useRef","useState","width","height","size","setsize","useMemo","radiusArr","maxSize","Math","min","minR","max","item","useEffect","current","clientWidth","clientHeight","showTrack","setshowTrack","selectMode","setselectMode","anagleScale","scaleLinear","dayScale","extent","timeScale","PI","consumePath","arc","innerRadius","day","outerRadius","startAngle","time","endAngle","originCCdata","setOriginCCdata","activeStore","setActiveStore","activeClassify","setActiveClassify","activeCustom","setActiveCustom","activeTime","setActiveTime","consumeData","location","replace","ccNumData","setccNumData","json","then","res","newConsumeData","timestamp","split","locationType","loyaltynum","newLoy","uniq","nodeData","Object","keys","sortBy","arcData","price","values","linksObj","forEach","key1","d2","key2","source","target","calData","nodes","links","drawForce","radius","force","forceSimulation","forceLink","strength","forceManyBody","forceCollide","node","i","x1","y1","x2","y2","sqrt","pow","distance","x","y","theta","atan","cos","sin","selectAll","each","select","this","attr","thisData","call","drag","on","alpha","restart","fx","fy","event","remove","link","enter","append","exitCCArr","priceOpacity","extents","locationPriceObj","num","locationOpacity","storePath","inner","outer","padAngle","cornerRadius","timePath","middleArcLine","angles","r1","middleAngle","invertDirection","reverse","pathFun","path","pointObj","key","centroid","activeTimeData","trackPath","line","curve","curveCatmullRom","weekDay","style","display","content","tooltips","settooltips","closeTooltips","className","ref","transform","text","format","textAttr","opacity","cursor","onClick","cx","cy","r","dy","textPathHrefProps","fill","textPathProps","href","startOffset","dominantBaseline","JSON","stringify","fillOpacity","onMouseEnter","left","clientX","top","clientY","onMouseOut","entries","storeName","gap","stroke","textAnchor","middle","isBottom","gAttr","newActiveStore","newType","join","thisConsumeData","priceTotal","priceCash","priceJustCC","priceRight","total","t","thisAngleScale","thisArcFun","index","findIndex","startValue","slice","endValue","newActiveClassisy","number","htmlFor","checked","onChange","originColor","bgColor","color","backgroundColor","borderColor","timeRange","graphHeight","createLine","curveStep","CarTrack","scaleTime","Date","tickValues","tickFormat","axisBottom","scale","axisTop","originData","setoriginData","gps","unknowCount","newStopArr","stopArr","locationInfo","console","log","carid","carIdScale","scaleBand","calCarColor","schemePaired","activeCarId","setactiveCarId","dayStrScale","paddingInner","activetime","setactivetime","disabledLocation","setDisabledLocation","useData","setuseData","st","heightScale","stopLegend","setstopLegend","detailLocation","setdetailLocation","carStopArr","useStopArr","parseInt","calcualteTimeRange","newStopLegend","maxValue","countBy","maxBy","timeScaleObj","countObj","countData","orderBy","sum","sumBy","totalSpace","topItem","valuePrv","idArr","stopLocation","dataArr","getTime","et","count","carTrack","car","track","stopItem","sourceRange","targetRange","pathWidthScale","closeTips","bandwidth","newCarId","circleAttr","dx","spaceItem","newActiveTime","rectAttr","x0","xhalf","lineAttr","strokeDasharray","fontSize","carColor","sourceY","sourceScale","targetScale","targetY","sourStop","sourceX","targetStop","targetX","pathArr","pathAttr","strokeWidth","strokeOpacity","sx","ex","rectheight","rectWidth","relateCar","scalePower","transformX","transformY","transition","ease","easeLinear","duration","storeKey","info","CarID","infoObj","user","FirstName","LastName","CurrentEmploymentType","title","CurrentEmploymentTitle","starttime","endtime","background","itemAttr","Cal","svgRef","SecondQ","mapRef","trackRef","setmap","allTrack","setAllTrack","projection","geoEquirectangular","selectCar","setSelectCard","selectDay","setSelectDay","selectHour","setSelectHour","carArr","fitSize","window","features","brushRef","brush","selection","invert","parse","thisTime","stopCircleRScale","tooltip","src","alt","geoPath","geoArr","Timestamp","attr2","keyItem","cpname","fontWeight","TextEvent","newSelectCar","SplitTrack","GasData","selectDayCB","brushCB","hourArr","playCB","getTotalLength","realHeight","realWidth","topRef","bottomRef","xScale","topAxis","bottomAxis","brushX","axisPosScale","scalePoint","align","gpsArr","cloneDeep","trackItem","stopDot","step","xItem","delay","val","carItem","dayitem","dayName","moveTo","lineTo","rx","ry","Content","children","App","to","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":";gaAEaA,EAAU,CACnB,WACE,UACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,WACA,YAGOC,EAAS,CAClB,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAiESC,EAAgB,CACzB,CACIC,KAAM,WACNC,KAAM,CACF,sBACA,mBACA,kBACA,eACA,uBACA,uBACA,sBAGR,CACID,KAAM,aACNC,KAAM,CACF,gBACA,eACA,eACA,kBACA,cACA,gBACA,gBAGR,CACID,KAAM,WACNC,KAAM,CACF,gBACA,sBACA,yBACA,wBACA,kBACA,4BACA,gBACA,6BACA,iCAGR,CACID,KAAM,cACNC,KAAM,CACF,eACA,WAGR,CACID,KAAM,SACNC,KAAM,CACF,yBACA,cACA,cACA,oBACA,4BACA,mBAGR,CACID,KAAM,gBACNC,KAAM,CACF,sBACA,mBACA,mBAKCC,EAAeC,gBAAMJ,GAC7BK,IAAI,QACJC,UACAC,QAAO,SAACC,EAAKC,GAEV,OADAD,EAAIC,GAAKT,EAAcU,MAAK,SAAAC,GAAE,OAAIA,EAAGT,KAAKU,SAASH,MAAIR,KAChDO,IACR,IACFK,QAEQC,EAAmB,CAC5B,CACIZ,KAAM,EAAE,EAAG,GACXa,KAAM,YAEV,CACIb,KAAM,CAAC,EAAG,GACVa,KAAM,sBAEV,CACIb,KAAM,CAAC,EAAG,IACVa,KAAM,WAEV,CACIb,KAAM,CAAC,GAAI,IACXa,KAAM,eAEV,CACIb,KAAM,CAAC,GAAI,IACXa,KAAM,WAEV,CACIb,KAAM,CAAC,GAAI,IACXa,KAAM,eAKDC,EAAW,CACpB,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,OACT,MAAS,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","file":"static/js/main.173c2677.chunk.js","sourcesContent":["import { chain } from \"lodash\"\n\nexport const timeArr = [\n    1388937600\n    , 1389024000\n    , 1389110400\n    , 1389196800\n    , 1389283200\n    , 1389369600\n    , 1389456000\n    , 1389542400\n    , 1389628800\n    , 1389715200\n    , 1389801600\n    , 1389888000\n    , 1389974400\n    , 1390060800\n]\n\nexport const dayStr = [\n    '01/06/2014',\n    '01/07/2014',\n    '01/08/2014',\n    '01/09/2014',\n    '01/10/2014',\n    '01/11/2014',\n    '01/12/2014',\n    '01/13/2014',\n    '01/14/2014',\n    '01/15/2014',\n    '01/16/2014',\n    '01/17/2014',\n    '01/18/2014',\n    '01/19/2014',\n]\n\nexport const storeClassify1 = [\n    {\n        type: 'restaurant',\n        data: [\n            \"Brew've Been Served\",\n            'Hallowed Grounds',\n            'Coffee Cameleon',\n            'Coffee Shack',\n            'Bean There Done That',\n            \"Jack's Magical Beans\",\n            'Brewed Awakenings',\n            'Katerinas Caf',\n            'Gelatogalore',\n            'Ouzeri Elian',\n            'Kalami Kafenion',\n            'Hippokampos',\n            'Abila Zacharo',\n            \"Guy's Gyros\",\n        ],\n    },\n    {\n        type: 'parnter',\n        data: [\n            'Abila Airport',\n            'Nationwide Refinery',\n            'Maximum Iron and Steel',\n            'Carlyle Chemical Inc.',\n            'Abila Scrapyard',\n            \"Octavio's Office Supplies\",\n            'Chostus Hotel',\n            \"Frank's Fuel\",\n            'Kronos Pipe and Irrigation',\n            'Stewart and Sons Fabrication',\n        ],\n    },\n    {\n        type: 'shop',\n        data: [\n            \"Albert's Fine Clothing\",\n            'Kronos Mart',\n            'Daily Dealz',\n            \"Shoppers' Delight\",\n            'Ahaggo Museum',\n        ],\n    },\n    {\n        type: 'entertainment',\n        data: [\n            \"Desafio Golf Course\",\n            'Roberts and Sons',\n        ],\n    },\n    {\n        type: 'other',\n        data: [\n            'U-Pump',\n            'General Grocer',\n            \"Frydos Autosupply n' More\",\n        ]\n    }\n]\n\nexport const storeClassify = [\n    {\n        type: 'FastFood',\n        data: [\n            \"Brew've Been Served\",\n            'Hallowed Grounds',\n            'Coffee Cameleon',\n            'Coffee Shack',\n            'Bean There Done That',\n            \"Jack's Magical Beans\",\n            'Brewed Awakenings',\n        ],\n    },\n    {\n        type: 'Restaurant',\n        data: [\n            'Katerinas Caf',\n            'Gelatogalore',\n            'Ouzeri Elian',\n            'Kalami Kafenion',\n            'Hippokampos',\n            'Abila Zacharo',\n            \"Guy's Gyros\",\n        ],\n    },\n    {\n        type: 'Industry',\n        data: [\n            'Abila Airport',\n            'Nationwide Refinery',\n            'Maximum Iron and Steel',\n            'Carlyle Chemical Inc.',\n            'Abila Scrapyard',\n            \"Octavio's Office Supplies\",\n            'Chostus Hotel',\n            'Kronos Pipe and Irrigation',\n            'Stewart and Sons Fabrication',\n        ],\n    },\n    {\n        type: 'Gas Station',\n        data: [\n            \"Frank's Fuel\",\n            'U-Pump',\n        ],\n    },\n    {\n        type: 'Living',\n        data: [\n            \"Albert's Fine Clothing\",\n            'Kronos Mart',\n            'Daily Dealz',\n            \"Shoppers' Delight\",\n            \"Frydos Autosupply n' More\",\n            'General Grocer',\n        ],\n    },\n    {\n        type: 'Entertainment',\n        data: [\n            \"Desafio Golf Course\",\n            'Roberts and Sons',\n            'Ahaggo Museum',\n        ],\n    },\n]\n\nexport const storeMapType = chain(storeClassify)\n    .map('data')\n    .flatten()\n    .reduce((obj, d) => {\n        obj[d] = storeClassify.find(d1 => d1.data.includes(d)).type\n        return obj\n    }, {})\n    .value()\n\nexport const timeClassifyData = [\n    {\n        data: [-2, 6],\n        name: 'Sleeping',\n    },\n    {\n        data: [6, 9],\n        name: 'On the way to work',\n    },\n    {\n        data: [9, 12],\n        name: 'Working',\n    },\n    {\n        data: [12, 14],\n        name: 'Lunch Break',\n    },\n    {\n        data: [14, 18],\n        name: 'Working',\n    },\n    {\n        data: [18, 22],\n        name: 'After work',\n    }\n]\n\n// 54个Loy, 55 个 cc\nexport const ccLoyMap = {\n    \"L8328\": \"8129\", // true\n    \"L6417\": \"7117\", // true\n    \"L1107\": \"2681\", // true\n    \"L4034\": \"5407\", // true\n    \"L6110\": \"8411\", // true\n    \"L2343\": \"8202\", // true\n    \"L9018\": \"2418\", // true\n    \"L5777\": \"9551\", // true\n    \"L7783\": \"1415\", // true\n    \"L3191\": \"9635\", // true\n    \"L4164\": \"7688\", // true\n    \"L1682\": \"7253\", // true\n    \"L1485\": \"3853\", // true\n    \"L5947\": \"2540\", // true\n    \"L3014\": \"1877\", // true\n    \"L4149\": \"1321\", // true\n    \"L6544\": \"7108\",// true\n    \"L4424\": \"1874\", // true\n    \"L5259\": \"7819\", // true\n    \"L3800\": \"7384\", // true\n    \"L5553\": \"9617\", // true\n    \"L3366\": \"6895\", // true\n    \"L8148\": \"6816\",// true\n    \"L4063\": \"9220\", // true\n    \"L2490\": \"3484\", // true\n    \"L2769\": \"8642\", // true\n    \"L2169\": \"4434\", // true\n    \"L9633\": \"9735\", // true\n    \"L9637\": \"2142\", // true\n    \"L8012\": \"1310\", // true\n    \"L7814\": \"3492\", // true\n    \"L3259\": \"9405\", // true\n    \"L9363\": \"6901\", // true\n    \"L5224\": \"8156\", // true\n    \"L7291\": \"9683\", // true\n    \"L9254\": \"7354\", // true\n    \"L6886\": \"2463\", // true\n    \"L7761\": \"3506\", // true\n    \"L5756\": \"7792\", // true\n    \"L8477\": \"4530\", // true\n    \"L3317\": \"2276\", // true\n    \"L5485\": \"9152\", // true\n    \"L5924\": \"9614\", // true\n    \"L2459\": \"5010\", // true\n    \"L2247\": \"5368\", //true\n    \"L9406\": \"4948\", // true\n    \"L9362\": \"3547\", // true L9362 和 L3295 是一个人的\n    \"L3295\": \"5921\", // true\n    \"L6267\": [\"6691\", \"6899\"], // true L6227在不同的时间段分属于不同的人，这其实不是一个人的,可能存在盗刷\n    \"L6119\": \"7889\", // true\n    \"L2070\": \"8332\", // true\n    \"L8566\": \"4795\", // true\n    \"L3572\": \"1286\", // true // L3572 和 L3288有关系\n    \"L3288\": \"9241\", // true\n}\n\nexport const carAssign = [\n    {\n        \"LastName\": \"Calixto\",\n        \"FirstName\": \"Nils\",\n        \"CarID\": \"1\",\n        \"CurrentEmploymentType\": \"Information Technology\",\n        \"CurrentEmploymentTitle\": \"IT Helpdesk\"\n    },\n    {\n        \"LastName\": \"Azada\",\n        \"FirstName\": \"Lars\",\n        \"CarID\": \"2\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Engineer\"\n    }, { \"LastName\": \"Balas\", \"FirstName\": \"Felix\", \"CarID\": \"3\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Engineer\" }, { \"LastName\": \"Barranco\", \"FirstName\": \"Ingrid\", \"CarID\": \"4\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"SVP/CFO\" }, { \"LastName\": \"Baza\", \"FirstName\": \"Isak\", \"CarID\": \"5\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Technician\" }, { \"LastName\": \"Bergen\", \"FirstName\": \"Linnea\", \"CarID\": \"6\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Group Manager\" }, { \"LastName\": \"Orilla\", \"FirstName\": \"Elsa\", \"CarID\": \"7\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Alcazar\", \"FirstName\": \"Lucas\", \"CarID\": \"8\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Technician\" }, { \"LastName\": \"Cazar\", \"FirstName\": \"Gustav\", \"CarID\": \"9\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Campo-Corrente\", \"FirstName\": \"Ada\", \"CarID\": \"10\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"SVP/CIO\" }, { \"LastName\": \"Calzas\", \"FirstName\": \"Axel\", \"CarID\": \"11\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Hydraulic Technician\" }, { \"LastName\": \"Cocinaro\", \"FirstName\": \"Hideki\", \"CarID\": \"12\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Site Control\" }, { \"LastName\": \"Ferro\", \"FirstName\": \"Inga\", \"CarID\": \"13\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Site Control\" }, { \"LastName\": \"Dedos\", \"FirstName\": \"Lidelse\", \"CarID\": \"14\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Engineering Group Manager\" }, { \"LastName\": \"Bodrogi\", \"FirstName\": \"Loreto\", \"CarID\": \"15\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Site Control\" }, { \"LastName\": \"Vann\", \"FirstName\": \"Isia\", \"CarID\": \"16\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Flecha\", \"FirstName\": \"Sven\", \"CarID\": \"17\", \"CurrentEmploymentType\": \"Information Technology\", \"CurrentEmploymentTitle\": \"IT Technician\" }, { \"LastName\": \"Frente\", \"FirstName\": \"Birgitta\", \"CarID\": \"18\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Geologist\" }, { \"LastName\": \"Frente\", \"FirstName\": \"Vira\", \"CarID\": \"19\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Hydraulic Technician\" }, { \"LastName\": \"Fusil\", \"FirstName\": \"Stenig\", \"CarID\": \"20\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Building Control\" }, { \"LastName\": \"Osvaldo\", \"FirstName\": \"Hennie\", \"CarID\": \"21\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Nubarron\", \"FirstName\": \"Adra\", \"CarID\": \"22\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Badging Office\" }, { \"LastName\": \"Lagos\", \"FirstName\": \"Varja\", \"CarID\": \"23\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Badging Office\" }, { \"LastName\": \"Mies\", \"FirstName\": \"Minke\", \"CarID\": \"24\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Herrero\", \"FirstName\": \"Kanon\", \"CarID\": \"25\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Geologist\" }, { \"LastName\": \"Onda\", \"FirstName\": \"Marin\", \"CarID\": \"26\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Site Manager\" }, { \"LastName\": \"Orilla\", \"FirstName\": \"Kare\", \"CarID\": \"27\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Borrasca\", \"FirstName\": \"Isande\", \"CarID\": \"28\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Ovan\", \"FirstName\": \"Bertrand\", \"CarID\": \"29\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Facilities Group Manager\" }, { \"LastName\": \"Resumir\", \"FirstName\": \"Felix\", \"CarID\": \"30\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Security Group Manager\" }, { \"LastName\": \"Sanjorge Jr.\", \"FirstName\": \"Sten\", \"CarID\": \"31\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"President/CEO\" }, { \"LastName\": \"Strum\", \"FirstName\": \"Orhan\", \"CarID\": \"32\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"SVP/COO\" }, { \"LastName\": \"Tempestad\", \"FirstName\": \"Brand\", \"CarID\": \"33\", \"CurrentEmploymentType\": \"Engineering\", \"CurrentEmploymentTitle\": \"Drill Technician\" }, { \"LastName\": \"Vann\", \"FirstName\": \"Edvard\", \"CarID\": \"34\", \"CurrentEmploymentType\": \"Security\", \"CurrentEmploymentTitle\": \"Perimeter Control\" }, { \"LastName\": \"Vasco-Pais\", \"FirstName\": \"Willem\", \"CarID\": \"35\", \"CurrentEmploymentType\": \"Executive\", \"CurrentEmploymentTitle\": \"Environmental Safety Advisor\" }, { \"LastName\": \"Hafon\", \"FirstName\": \"Albina\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Hawelon\", \"FirstName\": \"Benito\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Hawelon\", \"FirstName\": \"Claudio\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Mies\", \"FirstName\": \"Henk\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Morlun\", \"FirstName\": \"Valeria\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Morlun\", \"FirstName\": \"Adan\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Morluniau\", \"FirstName\": \"Cecilia\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Nant\", \"FirstName\": \"Irene\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }, { \"LastName\": \"Scozzese\", \"FirstName\": \"Dylan\", \"CarID\": \"\", \"CurrentEmploymentType\": \"Facilities\", \"CurrentEmploymentTitle\": \"Truck Driver\" }]\n\nexport const storeButtonArr = {\n    \"Brew've Been Served\": [{\n        s: '7:30',\n        e: '8:30',\n        d: 1,\n    }],\n    \"Hallowed Grounds\": [{\n        s: '7:30',\n        e: '8:30',\n        d: 2,\n    }],\n    \"Coffee Cameleon\": [{\n        s: '7:30',\n        e: '8:30',\n        d: 3,\n    }],\n    \"Coffee Shack\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 1,\n    }],\n    \"Bean There Done That\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 2,\n    }],\n    \"Jack's Magical Beans\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 3,\n    }],\n    \"Brewed Awakenings\": [{\n        s: '11:45',\n        e: '12:15',\n        d: 4,\n    }],\n    \n    \"Katerinas Caf\": [{\n        s: '13:00',\n        e: '14:30',\n        d: 1,\n    }, {\n        s: '18:50',\n        e: '21:30',\n        d: 1,\n    }],\n    \"Gelatogalore\": [{\n        s: '13:00',\n        e: '14:20',\n        d: 5,\n    }],\n    \"Ouzeri Elian\": [{\n        s: '13:00',\n        e: '14:20',\n        d: 3,\n    }, {\n        s: '19:00',\n        e: '21:30',\n        d: 3,\n    }],\n    \"Kalami Kafenion\": [{\n        s: '13:10',\n        e: '14:20',\n        d: 4,\n    }, {\n        s: '19:00',\n        e: '20:30',\n        d: 4,\n    }],\n    \"Hippokampos\": [{\n        s: '13:00',\n        e: '14:00',\n        d: 2,\n    }, {\n        s: '19:10',\n        e: '22:30',\n        d: 2,\n    }],\n    \"Abila Zacharo\": [{\n        s: '13:00',\n        e: '14:30',\n        d: 7,\n    }],\n    \"Guy's Gyros\": [{\n        s: '13:30',\n        e: '14:30',\n        d: 6,\n    }, {\n        s: '19:0',\n        e: '21:40',\n        d: 6,\n    }],\n    \"Abila Airport\": [{\n        s: '8:26',\n        e: '9:40',\n        d: 1,\n    }, {\n        s: '12:20',\n        e: '13:10',\n        d: 1,\n    }, {\n        s: '15:20',\n        e: '16:10',\n        d: 1,\n    }],\n    \"Nationwide Refinery\": [{\n        s: '10:00',\n        e: '13:00',\n        d: 5,\n    }],\n    \"Maximum Iron and Steel\": [{\n        s: '10:10',\n        e: '10:50',\n        d: 1,\n    }, {\n        s: '14:50',\n        e: '15:20',\n        d: 1,\n    }],\n    \"Carlyle Chemical Inc.\": [{\n        s: '9:40',\n        e: '10:10',\n        d: 1,\n    },\n    {\n        s: '12:30',\n        e: '13:00',\n        d: 2,\n    },\n    {\n        s: '14:30',\n        e: '14:50',\n        d: 1,\n    },\n    {\n        s: '16:20',\n        e: '17:20',\n        d: 1,\n    }],\n    \"Abila Scrapyard\": [{\n        s: '14:10',\n        e: '14:30',\n        d: 2,\n    }],\n    \"Octavio's Office Supplies\": [{\n        s: '14:30',\n        e: '16:00',\n        d: 3,\n    }],\n    \"Chostus Hotel\": [{\n        s: '12:10',\n        e: '14:00',\n        d: 8,\n    }],\n    \"Frank's Fuel\": [{\n        s: '12:10',\n        e: '12:40',\n        d: 6,\n    }, {\n        s: '18:10',\n        e: '18:50',\n        d: 1,\n    }],\n    \"Kronos Pipe and Irrigation\": [{\n        s: '14:00',\n        e: '14:20',\n        d: 8,\n    }],\n    \"Stewart and Sons Fabrication\": [{\n        s: '10:20',\n        e: '12:20',\n        d: 7,\n    }],\n    \"Albert's Fine Clothing\": [{\n        s: '15:20',\n        e: '16:20',\n        d: 2,\n    }, {\n        s: '19:00',\n        e: '21:20',\n        d: 5,\n    }],\n    \"Kronos Mart\": [{\n        s: '3:10',\n        e: '4:00',\n        d: 1,\n    }, {\n        s: '7:30',\n        e: '8:40',\n        d: 4,\n    }],\n    \"Daily Dealz\": [{\n        s: '5:50',\n        e: '6:20',\n        d: 1,\n    }],\n    \"Shoppers' Delight\": [{\n        s: '15:10',\n        e: '16:10',\n        d: 7,\n    }, {\n        s: '19:20',\n        e: '21:30',\n        d: 7,\n    }],\n    \"Ahaggo Museum\": [{\n        s: '15:00',\n        e: '17:00',\n        d: 8,\n    }],\n    \"Desafio Golf Course\": [{\n        s: '13:00',\n        e: '15:40',\n        d: 9,\n    }],\n    \"Roberts and Sons\": [{\n        s: '19:10',\n        e: '21:30',\n        d: 8,\n    }],\n    \"U-Pump\": [{\n        s: '13:10',\n        e: '13:30',\n        d: 6,\n    }, {\n        s: '17:25',\n        e: '17:55',\n        d: 1,\n    }],\n    \"General Grocer\": [{\n        s: '15:20',\n        e: '16:00',\n        d: 5,\n    }, {\n        s: '20:30',\n        e: '21:40',\n        d: 4,\n    }],\n    \"Frydos Autosupply n' More\": [{\n        s: '15:30',\n        e: '16:20',\n        d: 4,\n    }, {\n        s: '19:00',\n        e: '21:40',\n        d: 9,\n    }],\n}\n\n\n\n// export const storeButtonArr = {\n//     \"Brew've Been Served\": [{\n//         s: '7:20',\n//         e: '7:50',\n//         d: 1,\n//     }],\n//     \"Hallowed Grounds\": [{\n//         s: '7:50',\n//         e: '8:20',\n//         d: 1,\n//     }],\n//     \"Coffee Cameleon\": [{\n//         s: '8:20',\n//         e: '8:50',\n//         d: 1,\n//     }],\n\n//     \"Coffee Shack\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 1,\n//     }],\n//     \"Bean There Done That\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 2,\n//     }],\n//     \"Jack's Magical Beans\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 3,\n//     }],\n//     \"Brewed Awakenings\": [{\n//         s: '11:45',\n//         e: '12:15',\n//         d: 4,\n//     }],\n    \n//     \"Katerinas Caf\": [{\n//         s: '13:00',\n//         e: '13:30',\n//         d: 1,\n//     }, {\n//         s: '19:00',\n//         e: '19:30',\n//         d: 1,\n//     }],\n//     \"Gelatogalore\": [{\n//         s: '13:30',\n//         e: '14:00',\n//         d: 1,\n//     }],\n//     \"Ouzeri Elian\": [{\n//         s: '14:00',\n//         e: '14:30',\n//         d: 1,\n//     }, {\n//         s: '19:30',\n//         e: '20:00',\n//         d: 1,\n//     }],\n//     \"Hippokampos\": [{\n//         s: '14:30',\n//         e: '15:00',\n//         d: 1,\n//     }, {\n//         s: '20:00',\n//         e: '20:30',\n//         d: 1,\n//     }],\n//     \"Kalami Kafenion\": [{\n//         s: '15:00',\n//         e: '15:30',\n//         d: 1,\n//     }, {\n//         s: '20:30',\n//         e: '21:00',\n//         d: 1,\n//     }],\n//     \"Abila Zacharo\": [{\n//         s: '12:30',\n//         e: '13:00',\n//         d: 1,\n//     }],\n//     \"Guy's Gyros\": [{\n//         s: '15:30',\n//         e: '16:00',\n//         d: 1,\n//     }, {\n//         s: '21:00',\n//         e: '21:30',\n//         d: 1,\n//     }],\n\n//     // partner\n//     \"Abila Airport\": [{\n//         s: '8:30',\n//         e: '9:00',\n//         d: 2,\n//     }, {\n//         s: '12:30',\n//         e: '13:00',\n//         d: 2,\n//     }, {\n//         s: '15:30',\n//         e: '16:00',\n//         d: 2,\n//     }],\n//     \"Nationwide Refinery\": [{\n//         s: '10:00',\n//         e: '10:30',\n//         d: 2,\n//     }],\n//     \"Maximum Iron and Steel\": [{\n//         s: '10:30',\n//         e: '11:00',\n//         d: 2,\n//     }, {\n//         s: '14:50',\n//         e: '15:20',\n//         d: 2,\n//     }],\n//     \"Carlyle Chemical Inc.\": [{\n//         s: '9:30',\n//         e: '10:00',\n//         d: 2,\n//     },\n//     {\n//         s: '12:30',\n//         e: '13:00',\n//         d: 2,\n//     },\n//     {\n//         s: '14:30',\n//         e: '14:50',\n//         d: 2,\n//     },\n//     {\n//         s: '16:20',\n//         e: '17:20',\n//         d: 2,\n//     }],\n//     \"Abila Scrapyard\": [{\n//         s: '14:10',\n//         e: '14:30',\n//         d: 2,\n//     }],\n//     \"Octavio's Office Supplies\": [{\n//         s: '14:30',\n//         e: '16:00',\n//         d: 3,\n//     }],\n//     \"Chostus Hotel\": [{\n//         s: '12:10',\n//         e: '14:00',\n//         d: 8,\n//     }],\n//     \"Frank's Fuel\": [{\n//         s: '12:10',\n//         e: '12:40',\n//         d: 6,\n//     }, {\n//         s: '18:10',\n//         e: '18:50',\n//         d: 1,\n//     }],\n//     \"Kronos Pipe and Irrigation\": [{\n//         s: '14:00',\n//         e: '14:20',\n//         d: 8,\n//     }],\n//     \"Stewart and Sons Fabrication\": [{\n//         s: '10:20',\n//         e: '12:20',\n//         d: 7,\n//     }],\n//     \"Albert's Fine Clothing\": [{\n//         s: '15:20',\n//         e: '16:20',\n//         d: 2,\n//     }, {\n//         s: '19:00',\n//         e: '21:20',\n//         d: 5,\n//     }],\n//     \"Kronos Mart\": [{\n//         s: '3:10',\n//         e: '4:00',\n//         d: 1,\n//     }, {\n//         s: '7:30',\n//         e: '8:40',\n//         d: 4,\n//     }],\n//     \"Daily Dealz\": [{\n//         s: '5:50',\n//         e: '6:20',\n//         d: 1,\n//     }],\n//     \"Shoppers' Delight\": [{\n//         s: '15:10',\n//         e: '16:10',\n//         d: 7,\n//     }, {\n//         s: '19:20',\n//         e: '21:30',\n//         d: 7,\n//     }],\n//     \"Ahaggo Museum\": [{\n//         s: '15:00',\n//         e: '17:00',\n//         d: 8,\n//     }],\n//     \"Desafio Golf Course\": [{\n//         s: '13:00',\n//         e: '15:40',\n//         d: 9,\n//     }],\n//     \"Roberts and Sons\": [{\n//         s: '19:10',\n//         e: '21:30',\n//         d: 8,\n//     }],\n//     \"U-Pump\": [{\n//         s: '13:10',\n//         e: '13:30',\n//         d: 6,\n//     }, {\n//         s: '17:25',\n//         e: '17:55',\n//         d: 1,\n//     }],\n//     \"General Grocer\": [{\n//         s: '15:20',\n//         e: '16:00',\n//         d: 5,\n//     }, {\n//         s: '20:30',\n//         e: '21:40',\n//         d: 4,\n//     }],\n//     \"Frydos Autosupply n' More\": [{\n//         s: '15:30',\n//         e: '16:20',\n//         d: 4,\n//     }, {\n//         s: '19:00',\n//         e: '21:40',\n//         d: 9,\n//     }],\n// }","import { storeMapType } from \"../data/consumer_data\";\n\nexport const building_coordinate = [\n    {\n        name: 'Hallowed Grounds',\n        desc: '',\n        type: 'Consumer sites',\n        range: [[24.88388038, 36.06553341], [24.88788038, 36.06253341]],\n    },\n    {\n        name: 'Bean There Done That',\n        desc: '',\n        range: [[24.84912302000002,36.084489514999994],[24.853505705000018,36.07924747999999]],\n        type: 'Consumer sites',\n    },\n    {\n        name: 'Kronos Mart',\n        desc: '',\n        range: [[24.846974645000017,36.06807593],[24.851529200000016,36.064896335]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Ouzeri Elian\",\n        desc: '',\n        range: [[24.870177095000017,36.0544982],[24.87447384500002,36.05002958]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Coffee Cameleon\",\n        desc: '',\n        range: [[24.888910925000015,36.05656064],[24.893121740000016,36.05329511]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Abila Airport\",\n        desc: '',\n        range: [[24.824030000000022,36.054756005],[24.83417033000002,36.04727966]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Abila Scrapyard\",\n        desc: '',\n        range: [[24.84370911500002,36.076067885],[24.849294890000017,36.072630485]],\n        type: 'Consumer sites',\n    },\n    \n    {\n        name: \"Chostus Hotel\",\n        desc: '',\n        range: [[24.890543690000012,36.07220081],[24.898707515000016,36.067474385]],\n        type: 'Consumer sites',\n    },\n    // 周六19号补充的\n    {\n        name: \"Hippokampos\",\n        desc: \"在Albert's Fine Clothing上方，已验证,6\",\n        range: [[24.85565408000002,36.07770065],[24.859950830000017,36.07598195]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Abila Zacharo\",\n        desc: '在Roberts and Sons左边，已验证,6、7',\n        range: [[24.84981050000002,36.064380725],[24.85178700500002,36.061802675]],\n        type: 'Consumer sites',\n    },\n    {\n        name: 'Roberts and Sons',\n        desc: '已验证, 7号',\n        range: [[24.851529200000016,36.06412292],[24.853763510000018,36.061974545]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Albert's Fine Clothing\",\n        desc: '已验证, 7号',\n        range: [[24.85479473000002,36.07598195],[24.857458715000018,36.074349185]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Gelatogalore\",\n        desc: '冰淇淋店，有些偏差，应该在杂货店的下面，已验证',\n        range: [[24.85702904000002,36.059998039999996],[24.858919610000015,36.05913869]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Kalami Kafenion\",\n        desc: \"在Kronos Mart的右边一点，7号得到的，12号验证\",\n        range: [[24.85161513500002,36.067474385],[24.853763510000018,36.065240075]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Frydos Autosupply n' More\",\n        desc: \"根据7号和8号，修车厂应该在 Brew'veBeenServed 和 Katerinas Caf 中间\",\n        range: [[24.900512150000015,36.055443485000005],[24.903605810000016,36.054412264999996]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Katerinas Caf\",\n        desc: \"比原来的小一点\",\n        range: [[24.897590360000017,36.055787224999996],[24.900426215000014,36.05329511]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Guy's Gyros\",\n        desc: \"在Brew'veBeenServed左下角，12和8车验证\",\n        range: [[24.901801175000017,36.05690438],[24.903176135000013,36.05518568]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"General Grocer\",\n        desc: '杂货店, 12号车验证',\n        range: [[24.85565408000002,36.061287065],[24.85728684500002,36.059912105]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Shoppers' Delight\",\n        desc: \"在Ouzeri Elian 的左边 13号车验证\",\n        range: [[24.867341240000016,36.05432633],[24.870005225000018,36.051490475]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Brew've Been Served\",\n        desc: '非常的小， 13号车验证',\n        range: [[24.900598085000013,36.054584135],[24.901887110000015,36.053381045]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Frank's Fuel\",\n        desc: '比图标靠右一点，15号车验证',\n        range: [[24.83872488500002,36.073489835],[24.84224822000002,36.07116959]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Brewed Awakenings\",\n        desc: \"根据16号车得到的，这个地方比较偏，所以店的消费较少\",\n        range: [[24.86287262000002,36.07443512],[24.865364735000018,36.07271642]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Ahaggo Museum\",\n        desc: \"博物馆\",\n        range: [[24.875419130000015,36.077958455],[24.879887750000016,36.073919509999996]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Octavio's Office Supplies\",\n        desc: \"文具店，20号车14号路过的\",\n        range: [[24.85728684500002,36.05896682],[24.85874774000002,36.0579356]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"U-Pump\",\n        desc: \"23号车6号下午\",\n        range: [[24.869059940000017,36.069279019999996],[24.871895795000015,36.066615035]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Desafio Golf Course\",\n        desc: \"31号车\",\n        range: [[24.85763058500002,36.091536184999995],[24.86390384000002,36.088184719999994]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Jack's Magical Beans\",\n        desc: \"缩小一下\",\n        range: [[24.872325470000018,36.069021215],[24.876106610000015,36.066271295]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Maximum Iron and Steel\",\n        desc: '钢铁厂',\n        range: [[24.83674838000002,36.06601349],[24.84319350500002,36.06240422]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Carlyle Chemical Inc.\",\n        desc: '化工厂',\n        range: [[24.879715880000017,36.059654300000005],[24.882981410000017,36.05741999]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Nationwide Refinery\",\n        desc: '炼油厂',\n        range: [[24.884442305000015,36.059482429999996],[24.888996860000013,36.05656064]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Kronos Pipe and Irrigation\",\n        desc: '灌溉设备厂, 101车6号和13号',\n        range: [[24.83167821500002,36.066443164999995],[24.83434220000002,36.064380725]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Stewart and Sons Fabrication\",\n        desc: '玻璃厂？不知道，101车七号',\n        range: [[24.907301015000012,36.05501381],[24.909363455000012,36.05295137]],\n        type: 'Consumer sites',\n    },\n    {\n        name: \"Coffee Shack\",\n        desc: '消费场所，没找到，无所谓，就6417一个卡去，这个数据的时间也是错误的',\n        range: [[24.858575870000017,36.07495073],[24.861841400000017,36.071255525]],\n        type: 'Consumer sites',\n    },\n    // {\n    //     name: \"Daily Dealz\",\n    //     desc: '消费场所 就一次消费，就在汽车1的家旁边，自己看着是否需要画',\n    //     range: [[24.881778320000016,36.067130645],[24.883668890000017,36.06532601]],\n    //     type: 'Consumer sites',\n    // },\n    \n    // ================= 其他建筑物 =============\n    {\n        name: \"carly's coffee\",\n        range: [[24.85754465000002,36.058709015],[24.861153920000017,36.055271614999995]],\n        type: 'location',\n    },\n    {\n        name: \"Cup o'Joe\",\n        range: [[24.877825310000016,36.053552915],[24.880833035000016,36.050717060000004]],\n        type: 'location',\n    },\n    {\n        name: \"Abila Hospital\",\n        range: [[24.876708155000017,36.057677795000004],[24.883840760000016,36.053209175]],\n        type: 'location',\n    },\n    {\n        name: 'GAStect',\n        range: [[24.877309700000016,36.050974865],[24.881950190000016,36.046162505]],\n        type: 'location',\n    },\n    {\n        name: \"kronos capitol\",\n        range: [[24.84456846500002,36.058537145],[24.850841720000016,36.05209202]],\n        type: 'location',\n    },\n\n    // ================= 员工的家 =============\n    {\n        name: \"home_1\",\n        desc: \"车1的家\",\n        range:[[24.88160233,36.067487109999995],[24.883602330000002,36.06548711]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_2\",\n        desc: \"车2的家\",\n        range: [[24.859401759999997,36.08634633],[24.86140176,36.08434633]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_3\",\n        desc:\"车3的家\",\n        range: [[24.85667136,36.087593749999996],[24.858671360000002,36.08559375]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_4\",\n        desc:\"车4的家\",\n        range: [[24.87106884,36.07921458],[24.873068840000002,36.07721458]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_5\",\n        desc:\"车5的家\",\n        range: [[24.876958979999998,36.06831877],[24.87895898,36.06631877]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_6_25_29\",\n        desc:\"车6、25、29的家\",\n        range: [[24.893741,36.060403349999994],[24.895741,36.05840335]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_7\",\n        desc:\"车7的家\",\n        range: [[24.86319721,36.085321119999996],[24.86519721,36.08332112]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_8\",\n        desc:\"车8的家\",\n        range: [[24.88492574,36.06817381],[24.886925740000002,36.06617381]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_10\",\n        desc:\"车10的家\",\n        range: [[24.864882079999997,36.07768915],[24.86688208,36.07568915]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_11\",\n        desc:\"车11的家\",\n        range: [[24.85796606,36.08512021],[24.85996606,36.083120210000004]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_12\",\n        desc:\"车12的家\",\n        range: [[24.898078079999998,36.06875761],[24.90007808,36.06675761]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_13_15_16_21\",\n        desc:\"车13、15、16、21的家\",\n        range: [[24.904667829999998,36.06134734],[24.90666783,36.05934734]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_14_18\",\n        desc:\"车14、18的家\",\n        range: [[24.89508249,36.06436043],[24.897082490000003,36.062360430000005]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_17_24_33\",\n        desc:\"车17、24、33的家\",\n        range: [[24.89771782,36.063341259999994],[24.899717820000003,36.06134126]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_19\",\n        desc:\"车19的家\",\n        range: [[24.8554893,36.088918209999996],[24.8574893,36.08691821]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_20\",\n        desc:\"车20的家\",\n        range: [[24.89999889,36.06686874],[24.90199889,36.06486874]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_22\",\n        desc:\"车22的家\",\n        range: [[24.89940545,36.051338789999996],[24.901405450000002,36.04933879]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_23_30\",\n        desc:\"车23、30的家\",\n        range: [[24.899992689999998,36.05949165],[24.90199269,36.05749165]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_26\",\n        desc:\"车26的家\",\n        range: [[24.883036129999997,36.073828819999996],[24.88503613,36.07182882]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_27\",\n        desc:\"车27的家\",\n        range: [[24.88319323,36.07024187],[24.885193230000002,36.06824187]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_28\",\n        desc:\"车28的家\",\n        range: [[24.879169006599998,36.070638333649995],[24.8811690066,36.06863833365]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_32\",\n        desc:\"车32的家\",\n        range: [[24.873631659999997,36.07322591],[24.87563166,36.07122591]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_34\",\n        desc:\"车34的家\",\n        range: [[24.90155042,36.0686293],[24.903550420000002,36.0666293]],\n        type: \"home\",\n    },\n    {   \n        name:\"home_35\",\n        desc:\"车35的家\",\n        range: [[24.873611139999998,36.07724279],[24.87561114,36.075242790000004]],\n        type: \"home\",\n    },\n    ].map(d => ({\n        ...d,\n        classify: storeMapType[d.name] || d.type,\n    }))","import { ascending } from \"d3-array\"\nimport { scaleOrdinal } from \"d3-scale\"\nimport { schemeCategory10 } from \"d3-scale-chromatic\"\nimport moment from \"moment\"\nimport { building_coordinate } from \"../data/buliding_coordinate\"\nimport { storeClassify, storeMapType } from \"../data/consumer_data\"\n\nexport  function pushOrPop(arr, d, mode='single') {\n    const newArr = [...arr]\n    if (mode !== 'single') {\n        if (newArr.includes(d)) {\n            return newArr.filter(d1 => d1 !== d)\n        }\n        newArr.push(d)\n        return newArr\n    } else {\n        if (newArr.includes(d)) {\n            return []\n        } else {\n            return [d]\n        }\n    }\n}\n\n//增加两个容易溢出的数据\nexport function add(a, b) {\n    return parseFloat((Number(a) + Number(b)).toFixed(10))\n}\n\n// 计算只有时分秒的时间戳\nexport function calHourTime(hour) {\n    let hourStr = hour.toString()\n    const count = hourStr.match(/:/g)\n        ? hourStr.match(/:/g).length\n        : 0\n    switch (count) {\n        case 0:\n            hourStr = `${hourStr}:00:00`\n            break;\n        case 1:\n            hourStr = `${hourStr}:00`\n            break;\n        default:\n            break;\n    }\n    return moment(`2020-01-01 ${hourStr}`).unix()\n}\n\n// 计算商店分类颜色\nexport const calcualteTypeColor = id => {\n    const domain = storeClassify.map(d => d.type)\n    const colorScale = scaleOrdinal(domain.sort(ascending), schemeCategory10)\n    if (domain.includes(id)) {\n        return colorScale(id)\n    }\n    return 'gray'\n}\n\nexport const calcualteStoreColor = store => {\n    if(store.includes('unknow')) return 'red';\n    if(store.includes('home')) return 'green';\n    const type = storeMapType[store] || 'location'\n    return calcualteTypeColor(type)\n}\n\nexport const findLocaiton = (coor) => {\n    const [long, lat] = coor\n    const a = building_coordinate.find(d => {\n        const [sp, ep] = d.range\n        return sp[0] < Number(long)\n            && Number(long) < ep[0]\n            && Number(lat) < sp[1]\n            && Number(lat) > ep[1]\n    })\n    return a ? a.name : false\n} \n\nexport const findLocationCoord = name => {\n    const a = building_coordinate.find(d => {\n       return d.name === name\n    })\n    if(!a) return false\n    const long = (a.range[0][0] + a.range[1][0]) / 2\n    const lat = (a.range[1][0] + a.range[1][1]) / 2\n    return [long, lat]\n} ","import { ascending, extent } from 'd3-array'\nimport { json } from 'd3-fetch'\nimport { path } from 'd3-path'\nimport { event, drag, forceCollide, forceLink, forceManyBody, forceSimulation, scaleLinear, scaleOrdinal, schemeCategory10, select, selectAll, color, csv } from 'd3'\nimport { arc, curveCatmullRom, line } from 'd3-shape'\nimport { chain } from 'lodash'\nimport moment from 'moment'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { ccLoyMap, storeButtonArr, storeClassify, storeMapType, timeArr, timeClassifyData } from '../../data/consumer_data'\nimport { add, calcualteStoreColor, calHourTime, pushOrPop } from '../../utils'\nimport './index.scss'\n\nfunction calData(res) {\n    const nodeData = Object.keys(ccLoyMap).map(d => {\n        // const data = res.filter(d1 => d1.loyaltynum === d && d1.type === 'justCC')\n        const data = res.filter(d1 => d1.loyaltynum === d)\n        const location = chain(data).map('location').uniq().value()\n        const type = chain(location).map(d => storeMapType[d]).sortBy().uniq().value()\n        return {\n            id: d,\n            data,\n            location,\n            type,\n            arcData: chain(data)\n                .reduce((obj, d1) => {\n                    obj[d1.locationType] = {\n                        value: obj[d1.locationType]\n                        ? add(obj[d1.locationType].value, d1.price)\n                        : Number(d1.price),\n                        type: d1.locationType,\n                    }\n                    return obj\n                }, {})\n                .values()\n                .value()\n        }\n    })\n    const linksObj = {}\n    nodeData.forEach((d1) => {\n        const key1 = d1.type.toString()\n        nodeData.forEach(d2 => {\n            if (d1.id === d2.id) return\n            if (linksObj[`${d1.id}-${d2.id}`] || linksObj[`${d2.id}-${d1.id}`]) return\n            const key2 = d2.type.toString()\n            if(key1 !== key2) return\n            // const sameLoaction = intersection(d1.location, d2.location)\n            // const sameLoaction = d1.data\n            //     .filter(d3 => {\n            //         const a = d2.data.filter(d4 => \n            //             d4.location === d3.location\n            //             && Math.abs(moment(d4.timestamp).diff(moment(d3.timestamp))) < 5 * 60 * 1000)\n            //         return a.length\n            //     })\n            // const sameLoaction = []\n            linksObj[`${d1.id}-${d2.id}`] = {\n                source: d1.id,\n                target: d2.id,\n                value: 1\n            }\n        })\n    })\n    const nodes = nodeData\n    const links = chain(linksObj).values().filter(d => d.value > 0).value()\n    return [nodes, links]\n}\n\nexport default function ConsumerGraph() {\n    const [top, right, bottom, left] = [0,0,0,0]\n    const containerRef = useRef(null)\n    const [size, setsize] = useState({\n        width: 300,\n        height: 300,\n    })\n\n    const width = useMemo(() => size.width, [size])\n    const height = useMemo(() => size.height, [size])\n\n    const radiusArr = useMemo(() => {\n        const maxSize = Math.min((width - left - right) / 2, (height - top - bottom) / 2)\n        const minR = Math.max(maxSize / 4, 120)\n        const item =  (maxSize - minR) / 3\n        return [\n            [0, minR], // card\n            [minR, item * 2.5], // timeCircle\n            [item * 4, item * 4 + 1], // timeLabel\n            [item * 2.5 + 10, item * 4 - 10], // store\n        ]\n    }, [width, height])\n\n    useEffect(() => {\n        const { clientWidth, clientHeight } = containerRef.current\n        setsize({\n            width: clientWidth,\n            height: clientHeight,\n        })\n    }, [])\n\n    // 是否展示track \n    const [showTrack, setshowTrack] = useState(true)\n    // 选中模式\n    const [selectMode, setselectMode] = useState('mulitiple')\n    // MergeMethod\n    const [mergefun, setMergeFun] = useState('intersection')\n\n    const anagleScale = scaleLinear()\n        .domain([0, 24])\n        .range([0, 360])\n\n    const dayScale = scaleLinear()\n        .domain(extent(timeArr))\n        .range([radiusArr[1][0], radiusArr[1][1]])\n\n    const timeScale = scaleLinear()\n        .domain([calHourTime('00:00:00'), calHourTime('23:59:59')])\n        .range([0, Math.PI * 2])\n\n    const consumePath = arc()\n        .innerRadius(d => dayScale(d.day))\n        .outerRadius(d => dayScale(d.day) + (radiusArr[1][1] - radiusArr[1][0]) / timeArr.length )\n        .startAngle(d => timeScale(d.time))\n        .endAngle(d => timeScale(d.time + 500))\n\n    // getData\n    const [originCCdata, setOriginCCdata] = useState([])\n\n    // 选中\n    const [activeStore, setActiveStore] = useState([])\n    const [activeClassify, setActiveClassify] = useState([])\n    const [activeCustom, setActiveCustom] = useState([])\n    const [activeTime, setActiveTime] = useState([])\n\n    // 展示的数据\n    const consumeData = useMemo(() => {\n        return originCCdata\n        .filter(d => activeStore.length ? activeStore.includes(d.location) : true)\n        .filter(d => activeCustom.length ? activeCustom.includes(d.id) : true)\n        .filter(d => activeTime.length ? activeTime.includes(d.dayStr.replace('/2014', '')) : true)\n    }, [activeStore, originCCdata, activeCustom, activeTime])\n\n    // 所有的会员卡的ID\n    const [ccNumData, setccNumData] = useState([])\n\n    // 请求数据\n    useEffect(() => {\n        json('./data/merge_cc_and_loy.json').then(res => {\n            const newConsumeData = res.map(d => {\n                const [dayStr, hourStr] = d.timestamp.split(' ')\n                const day = moment(dayStr).unix()\n                const time = calHourTime(hourStr)\n                const locationType = storeClassify.find(d1 => d1.data.includes(d.location)).type\n                // 时间有点不准确\n                return {\n                    ...d,\n                    day,\n                    dayStr,\n                    id: d.loyaltynum,\n                    time,\n                    locationType,\n                    hour: hourStr.split(':')[0],\n                }\n            })\n            const newLoy = chain(newConsumeData).map('id').uniq().value()\n            setccNumData(newLoy)\n            setOriginCCdata(newConsumeData)\n            const [nodes, links] = calData(res)\n            drawForce(nodes, links)\n        })\n    }, [])\n\n    const drawForce = useMemo(() => {\n        return (nodes, links) => {\n            const distance = ([x1, y1], [x2, y2]) => Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n            const radius = radiusArr[0][1] - 20\n            const force = forceSimulation(nodes)\n                .force('links', forceLink(links)\n                    .id(d => d.id)\n                    .strength(d => 2)\n                    // .distance(0)\n                )\n                .force('charge', forceManyBody()\n                    .strength(-4)\n                )\n                .force('collide', forceCollide()\n                    .radius(10)\n                    // .iterations(20)\n                )\n                .force('circle', () => {\n                    nodes.forEach((node, i) => {\n                        if (distance([node.x, node.y], [0, 0]) > radius) {\n                            const theta = Math.atan((node.y) / (node.x));\n                            node.x = radius * Math.cos(theta) * (node.x < 0 ? -1 : 1);\n                            node.y = radius * Math.sin(theta) * (node.x < 0 ? -1 : 1);\n                          }\n                    })\n                })\n            \n            selectAll('.custom-item').each(function() {\n                const id = select(this).attr('id')\n                const thisData = nodes.filter(d => d.id === id)\n                select(this).data(thisData)\n            })\n            .call(\n                drag()\n                    .on('start', (d) => {\n                        const alpha = Math.max(force.alpha(), 0.1)\n                        force.alpha(alpha).restart()\n                        d.fx = null\n                        d.fy = null\n                    })\n                    .on('drag', d=> {\n                        d.x = event.x\n                        d.y = event.y\n                    })\n                    .on('end', d=>{\n                        d.fx = event.x\n                        d.fy = event.y\n                    })\n            )\n\n            select('.links')\n                .selectAll('line').remove()\n            const link = select('.links')\n                .selectAll('line')\n                .data(links)\n                .enter()\n                .append('line')\n                .attr(\"stroke-width\", d => 1)\n                .attr(\"stroke\", '#e9e9e9');\n\n            force.on('tick', () => {\n                link\n                    .attr(\"x1\", d => d.source.x)\n                    .attr(\"y1\", d => d.source.y)\n                    .attr(\"x2\", d => d.target.x)\n                    .attr(\"y2\", d => d.target.y);\n\n                selectAll('.custom-item')\n                    .attr('transform', d =>`translate(${d.x}, ${d.y})`)\n            })\n    }\n    }, [])\n\n    // 数据的信用卡\n    const exitCCArr = useMemo(() => {\n        return chain(consumeData)\n            .map('id')\n            .uniq()\n            .value()\n    }, [consumeData])\n\n    // 剩余的价格比例尺\n    const priceOpacity = useMemo(() => {\n        const extents = extent(consumeData, d => Number(d.price))\n        return scaleLinear()\n        .domain(extents)\n        .range([0.2, 1])\n    }, [consumeData])\n\n    const locationPriceObj = useMemo(() => {\n        return consumeData.reduce((obj, d) => {\n            const num = obj[d.location] || 0\n            obj[d.location] = add(num, d.price)\n            return obj\n        }, {})\n    }, [consumeData])\n\n    // 地点消费比例尺\n    const locationOpacity = useMemo(() => {\n        const extents = extent(Object.values(locationPriceObj))\n        return scaleLinear()\n        .domain(extents)\n        .range([0.2, 1])\n    }, [locationPriceObj])\n    \n    // 商店列表\n    const storePath = arc()\n        .innerRadius(d => d.inner)\n        .outerRadius(d => d.outer)\n        .startAngle(d => timeScale(calHourTime(d.s)))\n        .endAngle(d => timeScale(calHourTime(d.e)))\n        .padAngle(.01)\n        .cornerRadius(4)\n\n    const timePath = arc()\n        .innerRadius(d => radiusArr[2][0])\n        .outerRadius(d => radiusArr[2][1])\n        .startAngle(d => {\n            if(d[0]<0) {\n                return timeScale(moment(`2019-12-31 ${22}:00:00`).unix())\n            }\n            return timeScale(calHourTime(d[0]))\n        })\n        .endAngle(d => timeScale(calHourTime(d[1])))\n        .padAngle(.1)\n        .cornerRadius(4)\n\n    const middleArcLine = d => {\n        if (!d.innerRadius || !d.outerRadius) {\n            return ''\n        }\n        const angles = [d.startAngle, d.endAngle].map(\n            d1 => d1 - Math.PI / 2\n        )\n        const r1 = Math.max(0, (d.outerRadius + d.innerRadius) / 2)\n        const middleAngle = (angles[1] + angles[0]) / 2\n        const invertDirection = middleAngle > 0 && middleAngle < Math.PI\n        if (invertDirection) angles.reverse()\n        const pathFun = path()\n        pathFun.arc(0, 0, r1, angles[0], angles[1], invertDirection)\n        return pathFun.toString()\n    }\n\n    const colorScale = scaleOrdinal(storeClassify.map(d => d.type).sort(ascending), schemeCategory10)\n    const pointObj = useMemo(() => {\n        return ccNumData.reduce((obj, d) => {\n            const thisData = chain(consumeData)\n                .filter(d1 => d1.id === d)\n                .filter(d1 => d1.type !== 'cash')\n                .reduce((obj, d1) => {\n                    const key = d1.dayStr\n                    if (!obj[key]) obj[key] = []\n                    obj[key].push(consumePath.centroid(d1))\n                    return obj\n                }, {})\n                .values()\n                .value()\n            obj[d] = thisData\n            return obj\n        }, {})\n    }, [ccNumData, consumeData, consumePath])\n\n    const activeTimeData = useMemo(() => {\n        return chain(consumeData)\n            .map(d => d.dayStr.replace('/2014', ''))\n            .uniq()\n            .value()\n    }, [consumeData])\n\n    const trackPath = line()\n        .x(d => d[0])\n        .y(d => d[1])\n        .curve(curveCatmullRom.alpha(0.5));\n\n    const weekDay = ['01/11', '01/12', '01/18', '01/19']\n\n    const [tooltips, settooltips] = useState({\n        style: {\n            display: 'none',\n        },\n        content: {}\n    })\n\n    function closeTooltips() {\n        settooltips({\n            style: {\n                display: 'none',\n            },\n            content: {},\n        })\n    }\n\n    return (\n        <div className='consumerGraph'>\n            <div className=\"left\" ref={containerRef}>\n                <svg height={height} width={width} className='main'>\n                    <g transform={`translate(${left}, ${top})`}>\n                        <g className=\"timebg\">\n                            {timeArr.map((d, i) => {\n                                const text = moment(d * 1000).format('MM/DD')\n                                const textOpactiy = activeTimeData.includes(text) ? 1 : .1\n                                const textAttr = {\n                                    opacity: textOpactiy,\n                                    transform: `translate(${width / 2}, ${height /2 - dayScale(d)})`,\n                                    cursor: 'pointer',\n                                    className: `timeText ${activeTime.includes(text) ? 'active' : ''}`,\n                                    onClick: () => {\n                                        setActiveTime(pushOrPop(activeTime, text, selectMode))\n                                    }\n                                }\n                                return <g key={d}>\n                                    <text {...textAttr}>\n                                        {text} {weekDay.includes(text) ? 'weekend' : ''}\n                                    </text>\n                                    <circle cx={width / 2} cy={height / 2} r={dayScale(d)} /> \n                                </g>\n                            })}\n                        </g>\n                        <g className=\"timeTick\">\n                            {[6, 9, 12, 14, 18, 22].map((d, i) => {\n                                const attr = {\n                                    x1: width / 2,\n                                    y1: height / 2 - radiusArr[2][0],\n                                    x2: width / 2,\n                                    y2: height / 2,\n                                }\n                                return (\n                                    <g key={d} className='timeSplit' transform={`rotate(${anagleScale(d)})`}>\n                                        <line {...attr} />\n                                        <text x={attr.x1} y={attr.y1} dy={0}>{`${d}:00`}</text>\n                                    </g>\n                                )\n                            })}\n                        </g>\n                        <g className=\"time-classify\" transform={`translate(${width/2}, ${height / 2})`}>\n                            {timeClassifyData.map((d, i) => {\n                                const attr = {\n                                    d: timePath(d.data),\n                                }\n                                const textPathHrefProps = {\n                                    fill: 'none',\n                                    id: `time-${i}`,\n                                    d: middleArcLine({\n                                        innerRadius: radiusArr[2][1] + 10,\n                                        outerRadius: radiusArr[2][1]+10,\n                                        startAngle: d.data[0] < 0 ? \n                                            timeScale(moment(`2019-12-31 ${22}:00:00`).unix())\n                                            : timeScale(calHourTime(d.data[0])),\n                                        endAngle: timeScale(calHourTime(d.data[1])),\n                                    }),\n                                }\n                                const textPathProps = {\n                                    href: `#time-${i}`,\n                                    startOffset: '50%',\n                                    dominantBaseline: 'middle',\n                                }\n                                return (\n                                    <g key={d.data[0]}>\n                                        <path {...attr} className='time-button' />\n                                        <g className='time-label' >\n                                            <path {...textPathHrefProps} />\n                                            <text>\n                                                <textPath {...textPathProps}>\n                                                    {d.name}\n                                                </textPath>\n                                            </text>\n                                        </g>\n                                    </g>\n                                )\n                            })}\n                        </g>\n                        <g className='consume-g' transform={`translate(${width/2}, ${height / 2})`}>\n                            {consumeData.filter(d => d.type !== 'cash').map((d, i) => {\n                                const attr = {\n                                    key: JSON.stringify(d),\n                                    className: 'consume-item',\n                                    d: consumePath(d),\n                                    fill: calcualteStoreColor(d.location),\n                                    fillOpacity: priceOpacity(d.price),\n                                    onMouseEnter: e => {\n                                        settooltips({\n                                            style: {\n                                                display: 'block',\n                                                left: e.clientX + 10,\n                                                top: e.clientY,\n                                            },\n                                            content: {\n                                                loyaltynum: d.loyaltynum,\n                                                location: d.location,\n                                                time: d.timestamp,\n                                                price: d.price,\n                                                type: d.type,\n                                            },\n                                        })\n                                    },\n                                    onMouseOut: closeTooltips\n                                }\n                                return (\n                                    <path {...attr} />\n                                )\n                            })}\n                        </g>\n                        <g className='detail-store' transform={`translate(${width/2}, ${height / 2})`}>\n                        {\n                                Object.entries(storeButtonArr).map((d, i) => {\n                                    const [storeName, data] = d\n                                    const type = storeMapType[storeName]\n                                    return (\n                                        <g key={storeName}>\n                                            {\n                                                data.map(d1 => {\n                                                    const key = `${storeName}-${d1.s}`\n                                                    const startAngle = timeScale(calHourTime(d1.s))\n                                                    const endAngle = timeScale(calHourTime(d1.e))\n                                                    const gap = (radiusArr[3][1] - radiusArr[3][0]) / 9\n                                                    const inner = radiusArr[3][0] + gap * (d1.d - 1)\n                                                    const outer = inner + gap\n                                                    const attr = {\n                                                        d: storePath({\n                                                            inner,\n                                                            outer,\n                                                            s: d1.s,\n                                                            e: d1.e,\n                                                        }),\n                                                        fill: colorScale(type),\n                                                        stroke: colorScale(type),\n                                                        fillOpacity: locationOpacity(locationPriceObj[storeName]),\n                                                    }\n                                                    const textPathHrefProps = {\n                                                        fill: 'none',\n                                                        id: `text-${key}`,\n                                                        d: middleArcLine({\n                                                            innerRadius: (inner + outer) / 2,\n                                                            outerRadius: (inner + outer) / 2,\n                                                            startAngle,\n                                                            endAngle,\n                                                        }),\n                                                    }\n                                                    const textPathProps = {\n                                                        href: `#text-${key}`,\n                                                        startOffset: '50%',\n                                                        dominantBaseline: 'middle',\n                                                        textAnchor: 'middle',\n                                                    }\n                                                    let className = activeStore.includes(storeName) ? 'active' : ''\n                                                    if (activeStore.length > 0 && !activeStore.includes(storeName)) {\n                                                        className = 'disabled'\n                                                    }\n                                                    const opacity = consumeData.map(d => d.location).includes(storeName) ? 1 : 0.1\n                                                    const middle = (startAngle + endAngle) / 2\n                                                    const isBottom = middle > Math.PI / 2 && middle < Math.PI / 2 * 3\n                                                    const textData = isBottom ? storeName.split(' ').reverse() : storeName.split(' ')\n                                                    const dy = isBottom ? -10 : 10\n                                                    const gAttr = {\n                                                        key,\n                                                        opacity,\n                                                        className,\n                                                        onClick: () => {\n                                                            const newActiveStore = pushOrPop(activeStore, storeName, selectMode)\n                                                            const newType = chain(newActiveStore)\n                                                                .map(d2 => storeMapType[d2])\n                                                                .uniq()\n                                                                .value()\n                                                            setActiveStore(newActiveStore)\n                                                            setActiveClassify(newType)\n                                                        },\n                                                        onMouseEnter: e => {\n                                                            settooltips({\n                                                                style: {\n                                                                    display: 'block',\n                                                                    left: e.clientX + 10,\n                                                                    top: e.clientY,\n                                                                },\n                                                                content: {\n                                                                    name: storeName,\n                                                                    'consume st': `${d1.s}`,\n                                                                    'consume et': `${d1.e}`,\n                                                                    'consume price': locationPriceObj[storeName],\n                                                                }\n                                                            })\n                                                        },\n                                                        onMouseOut: closeTooltips\n                                                    }\n                                                    return (\n                                                        <g {...gAttr}>\n                                                            <path {...attr} className='store-button' />\n                                                            <g className='store-label'>\n                                                                <path {...textPathHrefProps} />\n                                                                <text>\n                                                                <textPath {...textPathProps}>\n                                                                    {storeName.split(' ').map(d => d[0]).join().replace(/,/g, '')}\n                                                                </textPath>\n                                                                </text>\n                                                            </g>\n                                                        </g>\n                                                    )\n                                                })\n                                            }\n                                        </g>\n                                    )\n                                })\n                            }\n                        </g>\n                        <g className='customer' transform={`translate(${width/2}, ${height / 2})`}>\n                            <circle className='bg' cx={0} cy={0} r={radiusArr[1][0]}/>\n                            <g className='links' />\n                            <g>\n                                {\n                                    ccNumData.map((d, i) => {\n                                        const opacity = exitCCArr.includes(d) ? 1 : 0.1\n                                        const thisConsumeData = originCCdata.filter(d1 => d1.id === d)\n                                        const priceTotal = thisConsumeData\n                                            .reduce((num, d1) => {\n                                                return add(num, d1.price)\n                                            }, 0)\n                                        const priceCash = thisConsumeData.filter(d1 => d1.type === 'cash')\n                                            .reduce((num, d1) => {\n                                                return add(num, d1.price)\n                                            }, 0)\n                                        const priceJustCC = thisConsumeData.filter(d1 => d1.type === 'justCC')\n                                            .reduce((num, d1) => {\n                                                return add(num, d1.price)\n                                            }, 0)\n                                        const priceRight = thisConsumeData.filter(d1 => d1.type === 'right')\n                                        .reduce((num, d1) => {\n                                            return add(num, d1.price)\n                                        }, 0)\n                                        // console.log(priceA === priceB)\n                                        // console.log(thisConsumeData.filter(d1 => d1.type === 'justCC'))\n                                        const arcData = chain(thisConsumeData)\n                                            .reduce((obj, d1) => {\n                                                obj[d1.locationType] = {\n                                                    value: obj[d1.locationType]\n                                                    ? add(obj[d1.locationType].value, d1.price)\n                                                    : Number(d1.price),\n                                                    type: d1.locationType,\n                                                }\n                                                return obj\n                                            }, {})\n                                            .values()\n                                            // .flatten()\n                                            .value()\n                                        const total = thisConsumeData.reduce((t, d1) => add(t, d1.price), 0)\n                                        const thisAngleScale = scaleLinear()\n                                            .domain([0, total])\n                                            .range([0, 2 * Math.PI])\n                                        const thisArcFun = arc()\n                                            .innerRadius(0)\n                                            .outerRadius(5)\n                                            .startAngle(d1 => {\n                                                const index = arcData.findIndex(d2 => d2.type === d1.type)\n                                                const startValue = chain(arcData)\n                                                    .slice(0, index)\n                                                    .map('value')\n                                                    .reduce((t, d2) => add(t, d2), 0)\n                                                    .value()\n                                                return thisAngleScale(startValue)\n                                            })\n                                            .endAngle(d1 => {\n                                                const index = arcData.findIndex(d2 => d2.type === d1.type)\n                                                const endValue = chain(arcData)\n                                                    .slice(0, index)\n                                                    .map('value')\n                                                    .reduce((t, d2) => add(t, d2), 0)\n                                                    .value() + d1.value\n                                                return thisAngleScale(endValue)\n                                            })\n                                        const gAttr = {\n                                            opacity,\n                                            id: d,\n                                            className: 'custom-item',\n                                            transform: `translate(${i * 10}, ${0})`,\n                                            onClick: () => {\n                                                    const newActiveClassisy = pushOrPop(activeCustom, d, selectMode)\n                                                    setActiveCustom(newActiveClassisy)\n                                            },\n                                            onMouseEnter: e => {\n                                                settooltips({\n                                                    style: {\n                                                        display: 'block',\n                                                        left: e.clientX + 10,\n                                                        top: e.clientY,\n                                                    },\n                                                    content: {\n                                                        number: d,\n                                                        total: priceTotal,\n                                                        'justcc price': priceJustCC,\n                                                        'cash price': priceCash,\n                                                        'right price': priceRight,\n                                                    }\n                                                })\n                                            },\n                                            onMouseOut: closeTooltips\n                                        }\n                                        return (\n                                            <g {...gAttr}>\n                                                {\n                                                    arcData.map(d1 => {\n                                                        const attr = {\n                                                            d: thisArcFun(d1),\n                                                            key: `small-${d1.type}`,\n                                                            fill: colorScale(d1.type),\n                                                            stroke: colorScale(d1.type),\n                                                            fillOpacity: .3,\n                                                        }\n                                                        return <path {...attr}/>\n                                                    })\n                                                }\n                                                <text\n                                                    dy={-8}\n                                                >\n                                                    {d}\n                                                </text>\n                                            </g>\n                                        )\n                                    })\n                                }\n                            </g>\n                        </g>\n                        <g className='customerTrack' transform={`translate(${width/2}, ${height / 2})`}>\n                            {\n                                Object.entries(pointObj)\n                                    .map(d => {\n                                        const [name, data] = d\n                                        let opacity = activeCustom.includes(name) ? 1 : 0\n                                        // let opacity = consumeData.map(d1 => d1.id).includes(name) ? 1 : 0\n                                        if (opacity) {\n                                            opacity = showTrack ? 1 : 0\n                                        }\n                                        return (\n                                            <g opacity={opacity} key={name}>\n                                                {data.map(d1 => {\n                                                    return <path d ={trackPath(d1)} key={d1.toString()} />\n                                                })}\n                                            </g>\n                                            \n                                        )\n                                    })\n                            }\n                        </g>\n                    </g>\n                </svg>\n                <div className=\"tooltips\" style={tooltips.style}>\n                    {Object.entries(tooltips.content).map(d => {\n                        return (\n                            <div className=\"tooltip-line\" key={d[0]}>\n                                <div className=\"tooltip-label\">{d[0]}: </div>\n                                <div className=\"tooltip-value\">{d[1]}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <div className='right'>\n                <div className='condition'>\n                    <div className=\"item\">\n                        select mode：\n                        {['single', 'mulitiple'].map(d => {\n                            return (\n                                <>\n                                    <label htmlFor={d}>{d}</label>\n                                    <input\n                                        type='radio'\n                                        name='select-mode'\n                                        checked={selectMode === d}\n                                        onChange={() => {\n                                            if (selectMode !== d) {\n                                                setselectMode(d)\n                                            }\n                                        }}\n                                        value={d}\n                                        id={d}\n                                    />\n                                </>\n                            )\n                        })}\n                    </div>\n                    <div className='item'>\n                        show customer track：\n                        <input\n                            type='checkbox'\n                            name='track-mode'\n                            checked={showTrack}\n                            onChange={() => {\n                                setshowTrack(!showTrack)\n                            }}\n                        />\n                    </div>\n                    {/* <div className='item'>\n                        merge method：\n                        {['union', 'intersection'].map(d => {\n                            return (\n                                <>\n                                    <label htmlFor={d}>{d}</label>\n                                    <input\n                                        type='radio'\n                                        name='merge-mode'\n                                        checked={mergefun === d}\n                                        onChange={() => {\n                                            if (mergefun !== d) {\n                                                setMergeFun(d)\n                                            }\n                                        }}\n                                        value={d}\n                                        id={d}\n                                    />\n                                </>\n                            )\n                        })}\n                    </div> */}\n                    <div className='item'>\n                        <button onClick={() => {\n                            setActiveStore([])\n                            setActiveClassify([])\n                            setActiveCustom([])\n                        }}>Refresh</button>\n                    </div>\n                </div>\n                <div className='legend'>\n                    {storeClassify.map(d => {\n                        const { type } = d\n                        const originColor = colorScale(type)\n                        let bgColor = color(originColor)\n                        bgColor.opacity = .6\n                        bgColor += ''\n                        let className = activeClassify.includes(type) ? 'active' : ''\n                        if (activeClassify.length > 0 && !activeClassify.includes(type)) {\n                            className = 'disabled'\n                        }\n                        return (\n                            <div className={`legend-item ${className}`} onClick={() => {\n                                const newActiveClassisy = pushOrPop(activeClassify, type, selectMode)\n                                setActiveClassify(newActiveClassisy)\n                                const newActiveStore = chain(storeClassify)\n                                    .filter(d1 => newActiveClassisy.includes(d1.type))\n                                    .map('data')\n                                    .flatten()\n                                    .value()\n                                setActiveStore(newActiveStore)\n                            }}>\n                                <div className='legend-label' style={{\n                                    backgroundColor: bgColor,\n                                    borderColor: originColor,\n                                }} />\n                                <div className='legend-name'>{type}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}","import { json } from 'd3-fetch'\nimport { chain, countBy, forIn, sumBy, } from 'lodash'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport moment from 'moment'\nimport { axisBottom, axisTop, curveStep, extent, line, schemeCategory10, scaleLinear, scaleOrdinal, scaleTime, scaleBand, select, schemePaired, easeLinear } from 'd3'\nimport { building_coordinate } from '../../data/buliding_coordinate'\nimport { calcualteStoreColor, findLocaiton, pushOrPop } from '../../utils'\nimport { carAssign, dayStr } from '../../data/consumer_data'\nimport './index.scss'\n\n\nfunction findHour(timestamp) {\n    const hour = parseInt(timestamp.split(' ')[1].split(':')[0])\n    return hour\n}\n\nconst timeRange = [\n    {\n        name: 'Sleep.Morning',\n        key: 'sm',\n        range: [0, 6],\n    },\n    {\n        name: 'Breakfast',\n        key: 'bf',\n        range: [6, 9],\n    },\n    {\n        name: 'Working.AM',\n        key: 'wa',\n        range: [9, 12],\n    },\n    {\n        name: 'Lunch',\n        key: 'l',\n        range: [12, 15],\n    },\n    {\n        name: 'Working.PM',\n        key: 'wp',\n        range: [15, 18],\n    },\n    {\n        name: 'Dinner',\n        key: 'd',\n        range: [18, 20],\n    },\n    {\n        name: 'After Dinner',\n        key: 'ad',\n        range: [20, 22],\n    },\n    {\n        name: 'Sleep.Night',\n        key: 'sn',\n        range: [22, 24],\n    },\n]\nfunction calcualteTimeRange(hour) {\n    return timeRange.find(d => d.range[0] <= hour && d.range[1] > hour).key\n}\nconst [width, height] = [1140,700]\nconst [top, right, bottom, left] = [40, 20, 20, 300]\nconst graphHeight = height - top - bottom\nconst graphWidth = width - left - right\n\nconst createLine = line()\n    // .curve(curveBasis)\n    .curve(curveStep)\n\nexport default function CarTrack() {\n    //!=============================== 图背景相关 ===============================\n    // ============== 画坐标轴 ==============\n    const timeScale = useMemo(() => {\n        return scaleTime(\n            [new Date('2020-01-01 00:00:00'), new Date('2020-01-01 23:59:59')]\n        , [0, graphWidth])\n    }, [])\n\n    useEffect(() => {\n        const tickValues = timeRange.map(d => new Date(`2020-01-01 ${d.range[0]}:00:00`))\n        const tickFormat = d => moment(d).format('HH:mm')\n        select('.timeAxisBottom').call(axisBottom().tickValues(tickValues).tickFormat(tickFormat).scale(timeScale))\n        select('.timeAxisTop').call(axisTop().tickValues(tickValues).tickFormat(tickFormat).scale(timeScale))\n    }, [timeScale])\n\n    //! =============================== 左侧图数据相关 ===============================\n\n    // ============== 监听原始数据，程序的开始 ==============\n    const [originData, setoriginData] = useState([])\n\n    useEffect(() => {\n        json('./data/gpswithstop.json').then(gps => {\n            let unknowCount = 0\n            gps.forEach(d => {\n                const newStopArr = d.stopArr.map(d1 => {\n                    const { long, lat } = d1\n                    let location = findLocaiton([long, lat])\n                    if (!location) {\n                        const item = {\n                            name: `unknow_${unknowCount}`,\n                            desc: '',\n                            range: [[Number(long) - 0.001, Number(lat) + 0.001], [Number(long) + 0.001, Number(lat) - 0.001]],\n                            type: 'unknow',\n                        }\n                        building_coordinate.push(item)\n                        location = findLocaiton([long, lat])\n                        unknowCount += 1\n                    }\n                    const locationInfo = building_coordinate.find(d2 => d2.name === location)\n                    return {\n                        ...d1,\n                        location,\n                        locationInfo,\n                    }\n                })\n                d.stopArr = newStopArr\n            })\n            console.log(gps)\n            setoriginData(gps)\n        })\n    }, [])\n\n    // ============== 根据原始数据获取所有的汽车的ID ==============\n    const carid = useMemo(() => {\n        return originData.map(d => d.id)\n    }, [originData])\n\n    // ============== 汽车ID的Y比例尺 ==============\n    const carIdScale = useMemo(() => {\n        return scaleBand(carid, [0, graphHeight])\n    }, [carid])\n    // ============== 汽车颜色计算 ==============\n    const calCarColor = useMemo(() => {\n        return scaleOrdinal(carid, schemePaired)\n    }, [carid])\n    \n    // ============== 汽车的选中 ==============\n    const [activeCarId, setactiveCarId] = useState(['1'])\n\n    // ============== 定义日期的y轴比例尺 ==============\n    const dayStrScale = useMemo(() => {\n        return scaleBand(dayStr, [0, graphHeight]).paddingInner(.1)\n    }, [])\n\n    // ============== 日期的选中 ==============\n    const [activetime, setactivetime] = useState(dayStr)\n\n    // ============== 地点的选中 ==============\n    const [disabledLocation, setDisabledLocation] = useState([])\n\n    // ============== 右侧图所用的展示数据 ==============\n    const [useData, setuseData] = useState([])\n\n    // ============== 根据汽车和日期的选中，算出右侧图数据 ==============\n    useEffect(() => {\n        const useData =  originData\n            .filter(d => activeCarId.includes(d.id))\n            .map(d => ({\n                id: d.id,\n                stopArr: d.stopArr\n                .filter(\n                    d1 => activetime.includes(d1.st.split(' ')[0])\n                )\n            }))\n        setuseData(useData)\n    }, [originData, activeCarId, activetime])\n\n    //! =============================== 右侧图数据相关 ===============================\n    // ============== 计算每个停留点高度的scale ==============\n    const heightScale = useMemo(() => scaleLinear(), [])\n\n    // ============== 商店legend的数据 ==============\n    const [stopLegend, setstopLegend] = useState([])\n\n    // ============== 查看商店细节的 ==============\n    const [detailLocation, setdetailLocation] = useState([])\n\n    // ============== 计算每个车每天的在不同的停留点 ==============\n    const carStopArr = useMemo(() => {\n        let useStopArr = chain(useData)\n            .map('stopArr')\n            .flatten()\n            .map(d => {\n                const {st} = d\n                const [time] = st.split(' ')\n                const hour = findHour(st)\n                const timeRange = calcualteTimeRange(hour)\n                return {\n                    ...d,\n                    hour,\n                    time,\n                    range: timeRange,\n                }\n            })\n            .value()\n\n        const newStopLegend = chain(useStopArr)\n            .map(d => d.locationInfo.classify)\n            .uniq()\n            .map(d => {\n                const data = chain(useStopArr)\n                    .filter(d1 => d1.locationInfo.classify === d)\n                    .map('location')\n                    .uniq()\n                    .value()\n                return {\n                    classify: d,\n                    data,\n                }\n            })\n            .value()\n        setstopLegend(newStopLegend)\n\n        // useStopArr = useStopArr.filter(d => !disabledLocation.includes(d.location))\n\n        const maxValue = chain(useStopArr)\n            .map('data')\n            .flatten()\n            .countBy('range')\n            .values()\n            .maxBy()\n            .value()\n            \n        heightScale.domain([0, maxValue])\n            .range([4, 1000])\n        return useStopArr\n    }, [heightScale, useData])\n\n    // ============== 定义每一个Range的比例尺 ==============\n    const timeScaleObj = useMemo(() => {\n        return timeRange.reduce((obj, d) => {\n            const data = carStopArr.filter(d1 => d1.range === d.key)\n            const countObj = countBy(data.map(d1 => d1.location))\n            const countData = chain(countObj)\n                .entries()\n                .map(d => ({\n                    name: d[0],\n                    value: d[1],\n                }))\n                .orderBy('value', 'desc')\n                .value()\n\n            const sum = sumBy(countData, 'value')\n            const domain = []\n            const gap = 20\n            const totalSpace = heightScale(sum) + (countData.length - 1) * gap\n            const topItem = (graphHeight - totalSpace) / 2\n            const range = countData.map((d1, i) => {\n                domain.push(d1.name)\n                const valuePrv = sumBy(countData.slice(0, i), 'value')\n                return topItem + heightScale(sum) * valuePrv / sum + i * gap\n            })\n            obj[d.key] = {\n                ...d,\n                data,\n                scale: scaleOrdinal(domain, range), //地点\b在y上的比例尺\n            }\n            domain.forEach(store => {\n                const value = countObj[store]\n                const idArr = chain(data)\n                    .filter(d1 => d1.location === store)\n                    .map('id')\n                    .uniq()\n                    .sortBy()\n                    .value()\n                // 汽车停留点在地点内部的位置偏移比例尺\n                obj[d.key][`${store}Scale`] = scaleLinear([1, value], [0, heightScale(value)])\n                // 汽车箭头的比例尺\n                obj[d.key][`${store}CarIdScale`] = scaleBand(idArr, [0, heightScale(value)])\n            })\n            return obj\n        }, {})\n    }, [carStopArr, heightScale])\n\n    // ============== 商店的位置，也是根据停留点得到的 ==============\n    const stopLocation = useMemo(() => {\n        const useData = chain(carStopArr)\n        .reduce((obj, d) => {\n            const key = `${d.range}-${d.location}`\n            const dataArr = obj[key] ? obj[key].data : []\n            dataArr.push(d)\n            const [st, et] = extent(\n                chain(dataArr)\n                    .map('st')\n                    .map(d1 => new Date(`2020-01-01 ${d1.split(' ')[1]}`).getTime())\n                    .value()\n            ).map(d1 => moment(d1).format('MM/DD/YYYY HH:mm:ss'))\n            obj[key] = {\n                key,\n                data: dataArr,\n                range: d.range,\n                st,\n                et,\n                location: d.location,\n                locationInfo: d.locationInfo,\n                count: dataArr.length,\n            }\n            return obj\n        }, {})\n        .values()\n        .value()\n        return useData\n    }, [carStopArr])\n\n    // ============== 汽车的连线，也是根据停留点得到的 ==============\n    const carTrack = useMemo(() => {\n        const useData = chain(carStopArr)\n            .reduce((obj, d) => {\n                const dataArr = obj[d.id] ? obj[d.id].data : []\n                dataArr.push(d)\n                obj[d.id] = {\n                    id: d.id,\n                    data: dataArr,\n                }\n                return obj\n            }, {})\n            .values()\n            .map(car => {\n                const { data, id } = car\n                const trackArr = chain(data)\n                    .reduce((obj, d) => {\n                        const key = d.day\n                        if(!obj[key])obj[key] = []\n                        obj[key].push(d)\n                        return obj\n                    }, {})\n                    .values()\n                    .reduce((obj, d) => {\n                        d.forEach((stopItem, i) => {\n                            if (i === 0) return\n                            const source = d[i-1].location\n                            const sourceRange = d[i-1].range\n                            const target = stopItem.location\n                            const targetRange = stopItem.range\n                            const key = `${source}-${sourceRange}-${target}-${targetRange}`\n                            obj[key] = {\n                                key,\n                                source,\n                                target,\n                                sourceRange,\n                                targetRange,\n                                count: obj[key] ? obj[key].count + 1 : 1,\n                            }\n                        })\n                        return obj\n                    }, {})\n                    .values()\n                    .value()\n                return {\n                    id,\n                    track: trackArr,\n                }\n            })\n            .value()\n        return useData\n    }, [carStopArr])\n\n    // ============== 汽车连线宽度的比例尺 ==============\n    const pathWidthScale = useMemo(() => {\n        const domain = extent(chain(carTrack).map('track').flatten().map('count').value())\n        return scaleLinear(domain, [1,5])\n    }, [carTrack])\n\n    //! =============================== tooltip相关 ===============================\n    const [tooltips, settooltips] = useState({\n        style: {\n            display: 'none',\n        },\n        content: {\n            name: '',\n        },\n    })\n\n    const closeTips = () => settooltips({\n        style: {\n            display: 'none',\n        },\n        content: {\n            name: '',\n        },\n    })\n\n    //! =============================== 其他 ===============================\n    const obj = {}\n\n    return (\n        <div className='carTrackGraph'>\n            <svg height={height} width={width}>\n                <g className=\"bg-left\" transform={`translate(${100}, ${top})`}>\n                    <g className='car'>\n                        {carid.map(d => {\n                            const gAttr = {\n                                key: d,\n                                transform: `translate(${0}, ${carIdScale(d) + carIdScale.bandwidth()/ 2})`,\n                                className: `carItem ${activeCarId.includes(d) ? 'active' : 'disabled'}`,\n                                onClick: () => {\n                                    const newCarId = pushOrPop(activeCarId, d, 'mulity')\n                                    setactiveCarId(newCarId)\n                                }\n                            }\n                            const color = calCarColor(d)\n                            const circleAttr = {\n                                cx: 0,\n                                cy: 0,\n                                stroke: color,\n                                fill: color,\n                            }\n                            const textAttr = {\n                                dx: 6,\n                                dy: 3,\n                            }\n                            return (\n                                <g {...gAttr}>\n                                    <circle {...circleAttr}/>\n                                    <text {...textAttr}>{d}</text>\n                                </g>\n                            )\n                        })}\n                    </g>\n                    <g className='day' transform={`translate(100, 0)`}>\n                        {dayStr.map(d => {\n                            const y = dayStrScale(d)\n                            const spaceItem = dayStrScale.bandwidth()\n                            const gAttr = {\n                                key: d,\n                                transform: `translate(${0}, ${y + spaceItem / 2})`,\n                                className: `dayItem ${activetime.includes(d) ? 'active' : 'disabled'}`,\n                                onClick: () => {\n                                    const newActiveTime = pushOrPop(activetime, d, 'mulity')\n                                    setactivetime(newActiveTime)\n                                }\n                            }\n                            const rectAttr = {\n                                x: 0,\n                                y: -spaceItem / 2,\n                                height: spaceItem,\n                            }\n                            const textAttr = {\n                                dx: 14,\n                            }\n                            const day = d.split('/')[1]\n                            return (\n                                <g {...gAttr}>\n                                    <rect {...rectAttr}/>\n                                    <text {...textAttr}>{`${day} ${['11', '12', '17', '18'].includes(day) ? 'weekend' : ''}`}</text>\n                                </g>\n                            )\n                        })}\n                    </g>\n                </g>\n                <g className=\"bg-right\" transform={`translate(${left}, ${top})`}>\n                <g className='transform-g'>\n                    {/* 选择图 */}\n                    {/* 主图 */}\n                    <g className='timeAxisTop' transform={`translate(${0}, ${0})`}/>\n                    <g className='timeAxisBottom' transform={`translate(${0}, ${height - top - bottom})`}/>\n                    <g className='timeRange'>\n                        {timeRange.map(d => {\n                            const x0 = timeScale(new Date(`2020-01-01 ${d.range[0]}:00:00`))\n                            const x1 = timeScale(new Date(`2020-01-01 ${d.range[1]}:00:00`))\n                            const xhalf = (x1 - x0) / 2\n                            const lineAttr = {\n                                x1: 0,\n                                x2: 0,\n                                y1: 0,\n                                y2: graphHeight,\n                                stroke: '#d9d9d9',\n                                strokeDasharray: 10,\n                            }\n                            const gAttr = {\n                                transform: `translate(${x0}, 0)`,\n                                key: d.name,\n                            }\n                            const textAttr = {\n                                dx: xhalf,\n                                textAnchor: 'middle',\n                                dy: -10,\n                                fontSize: 8,\n                                fill: '#000',\n                            }\n                            return (\n                                <g {...gAttr}>\n                                    <line {...lineAttr} />\n                                    <text {...textAttr}>{d.name}</text>\n                                </g>\n                            )\n                        })}\n                    </g>\n                    {/* 车的连线图 连线和箭头 */}\n                    <g className=\"car\">\n                        {carTrack.map((d, i) => {\n                                const { id, track } = d\n                                const carColor = calCarColor(id)\n                                return (\n                                    <g className='trackItem' key={`${id}-track`}>\n                                        {\n                                            track.map(d1 => {\n                                                const { source, sourceRange, target, targetRange } = d1\n                                                const { scale: sourceScale } = timeScaleObj[sourceRange]\n                                                let sourceY = sourceScale(source)\n                                                const { scale: targetScale } = timeScaleObj[targetRange]\n                                                sourceY += timeScaleObj[sourceRange][`${source}CarIdScale`](id)\n                                                sourceY += timeScaleObj[sourceRange][`${source}CarIdScale`].bandwidth() / 2\n\n                                                let targetY = targetScale(target)\n                                                targetY += timeScaleObj[targetRange][`${target}CarIdScale`](id)\n                                                targetY += timeScaleObj[targetRange][`${target}CarIdScale`].bandwidth() / 2\n\n                                                const sourStop = stopLocation.find(\n                                                    d2=> d2.location === source && d2.range === sourceRange\n                                                )\n                                                let sourceX = timeScale(\n                                                    new Date(`2020-01-01 ${sourStop.et.split(' ')[1]}`)\n                                                )\n\n                                                const targetStop = stopLocation.find(\n                                                    d2=> d2.location === target && d2.range === targetRange\n                                                )\n                                                let targetX = timeScale(\n                                                    new Date(`2020-01-01 ${targetStop.st.split(' ')[1]}`)\n                                                )\n\n                                                if(sourStop.st === sourStop.et) {\n                                                    sourceX = sourceX + 10\n                                                }\n\n                                                const pathArr = [\n                                                    [sourceX, sourceY],\n                                                    [targetX, targetY]\n                                                ]\n\n                                                const pathAttr = {\n                                                    fill: 'none',\n                                                    stroke: carColor,\n                                                    strokeWidth: pathWidthScale(d1.count),\n                                                    strokeOpacity: pathWidthScale(d1.count) / 5,\n                                                }\n                                                const opacity = disabledLocation.includes(targetStop.location)\n                                                || disabledLocation.includes(sourStop.location)\n                                                ? 0.1 : 1\n                                                const gAttr = {\n                                                    opacity,\n                                                    key: d1.key,\n                                                    stroke: carColor,\n                                                }\n                                                return (\n                                                    <g {...gAttr}>\n                                                        <path d={createLine(pathArr)} {...pathAttr} />\n                                                        <line {...{\n                                                            x1: pathArr[0][0],\n                                                            y1: pathArr[0][1] - 3,\n                                                            x2: pathArr[0][0],\n                                                            y2: pathArr[0][1] + 3,\n                                                            strokeWidth: 2,\n                                                        }} />\n                                                        <path d={\n                                                            line()([\n                                                                [\n                                                                    pathArr[1][0] - 2,\n                                                                    pathArr[1][1] - 2\n                                                                ],\n                                                                [\n                                                                    pathArr[1][0] + 2,\n                                                                    pathArr[1][1]\n                                                                ],\n                                                                [\n                                                                    pathArr[1][0] - 2,\n                                                                    pathArr[1][1] + 2\n                                                                ],\n                                                                [\n                                                                    pathArr[1][0] - 2,\n                                                                    pathArr[1][1] - 2\n                                                                ],\n                                                            ])\n                                                        }\n                                                        fill='#fff'\n                                                        />\n                                                    </g>\n                                                )\n                                            })\n                                        }\n                                    </g>\n                                )\n                            })}\n                    </g>\n                    {/* 商店图 矩形表示 */}\n                    <g className=\"stopLocation\">\n                        {stopLocation.map(d => {\n                            const { st,et, range, location, key, count, data } = d\n                            const { scale } = timeScaleObj[range]\n                            const sx = timeScale(new Date(`2020-01-01 ${st.split(' ')[1]}`))\n                            let ex = timeScale(new Date(`2020-01-01 ${et.split(' ')[1]}`))\n                            if(ex < sx) ex = timeScale(new Date(`2020-01-01 23:59:59`))\n                            const y = scale(location)\n                            const rectheight = heightScale(count)\n                            const color = calcualteStoreColor(location)\n                            const rectWidth = ex - sx || 10\n                            const rectAttr = {\n                                x: 0,\n                                y: 0,\n                                width: rectWidth,\n                                height: rectheight,\n                                fill: color,\n                            }\n                            const opacity = disabledLocation.includes(location) ? 0.01 : 1\n                            const className= `stopLocationItem-${range}-${location.replace(/['\\s]/g, '')}`\n                            const gAttr = {\n                                key,\n                                fontSize: 9,\n                                opacity,\n                                className: `stopLocationItem ${className} ${detailLocation.includes(key) ? 'active' : '' }`,\n                                'transform-origin': `${sx} ${y}`,\n                                onMouseEnter: () => {\n                                    const relateCar = chain(data).map('id').countBy().entries().map(d1 => d1.join(':')).join('/n').value()\n                                    const obj = {\n                                        name: location,\n                                        type: d.locationInfo.classify,\n                                        'vis count': count,\n                                        'relate car': relateCar,\n                                    }\n                                    settooltips({\n                                        style: {\n                                            display: 'flex',\n                                            left: ex + left,\n                                            top: y + top,\n                                        },\n                                        content: obj,\n                                    })\n                                },\n                                onMouseOut: closeTips,\n                                onClick: () => {\n                                    closeTips()\n                                    setdetailLocation(pushOrPop(detailLocation, key))\n                                    const scalePower = Math.min(graphHeight / rectheight, graphWidth / rectWidth) / 2\n                                    const transformX = ((graphWidth - rectWidth * scalePower) / 2 - sx) \n                                    const transformY = ((graphHeight - rectheight * scalePower) / 2 - y)\n                                    if (detailLocation.includes(key)) {\n                                        select(`.${className}`)\n                                            .transition()\n                                            .ease(easeLinear)\n                                            .duration(100)\n                                            .attr('transform', 'translate(0, 0)')\n                                    } else {\n                                        select('.stopLocationItem.active')\n                                            .transition()\n                                            .ease(easeLinear)\n                                            .duration(100)\n                                            .attr('transform', 'translate(0, 0)')\n                                        select(`.${className}`)\n                                            .transition()\n                                            .ease(easeLinear)\n                                            .duration(100)\n                                            .attr('transform', `translate(${transformX} ${transformY}) scale(${scalePower})`)\n                                    }\n                                    \n                                },\n                            }\n                            return (\n                                <g {...gAttr}>\n                                    <g className='stopBg' transform={`translate(${sx}, ${y})`}>\n                                        <rect {...rectAttr} />\n                                        <text dx={rectAttr.width / 2}>{d.location}</text>\n                                    </g>\n                                    <g className=\"stopDetail\">\n                                        {\n                                            data.map(d1 => {\n                                                const {st, et, location, range, id } = d1\n                                                const carColor = calCarColor(id)\n                                                const cx = timeScale(new Date(`2020-01-01 ${st.split(' ')[1]}`))\n                                                const storeKey = `${range}-${location}`\n                                                if(!obj[storeKey]) {\n                                                    obj[storeKey] = 1\n                                                } else {\n                                                    obj[storeKey] = obj[storeKey] + 1\n                                                }\n                                                const cy = y + timeScaleObj[range][`${location}Scale`](obj[storeKey])\n                                                const circleAttr = {\n                                                    key: `${location}-${et}-${st}`,\n                                                    transform: `translate(${cx}, ${cy})`,\n                                                    stroke: carColor,\n                                                    fill: carColor,\n                                                    fillOpacity: .4,\n                                                    r: 2,\n                                                    onMouseEnter: () => {\n                                                        const info = carAssign.find(d2 => d2.CarID === id)\n                                                        const infoObj = info ? {\n                                                                user: `${info.FirstName} ${info.LastName}`,\n                                                                type: info.CurrentEmploymentType,\n                                                                title: info.CurrentEmploymentTitle,\n                                                            } : {}\n                                                        const obj = {\n                                                            car: id,\n                                                            ...infoObj,\n                                                            starttime: st,\n                                                            endtime: et,\n                                                            duration: `${d1.hour} hour`\n                                                        }\n                                                        settooltips({\n                                                            style: {\n                                                                display: 'flex',\n                                                                left: cx + left,\n                                                                top: cy + top,\n                                                            },\n                                                            content: obj,\n                                                        })\n                                                    }\n                                                }\n                                                return (\n                                                    <circle {...circleAttr} />\n                                                )\n                                            })\n                                        }\n                                    </g>\n                                </g>\n                            )\n                        })}\n                    </g>\n                </g>\n                </g>\n            </svg>\n            <div className='location'>\n                {stopLegend\n                    .map(d => {\n                        return (\n                            <div className='location-classify' key={d.classify}>\n                                <div className=\"classify-item\">\n                                    <div className=\"classify-item-label\" style={{\n                                        background: calcualteStoreColor(d.data[0])\n                                    }} />\n                                    <div className=\"classify-item-value\">{d.classify}</div>\n                                </div>\n                                <div className=\"location-classify-cotent\">\n                                    {\n                                        d.data.map(d1 => {\n                                            const itemAttr = {\n                                                className: `loaction-item ${disabledLocation.includes(d1) ? 'disabled' : ''}`,\n                                                key: d1,\n                                                onClick: () => {\n                                                    setDisabledLocation(pushOrPop(disabledLocation, d1, 'mul'))\n                                                }\n                                            }\n                                            return (\n                                                <div {...itemAttr}>{d1}</div>\n                                            )\n                                        })\n                                    } \n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n            {/* tooltips */}\n            <div className=\"tooltips tooltips-location\" style={tooltips.style}>\n                    {Object.entries(tooltips.content).map(d => {\n                        const [name, value] = d\n                        return (\n                            <div className=\"tooltip-line\" key={name}>\n                                <div className=\"tooltip-label\">{name}:</div>\n                                <div className=\"tooltip-value\">{\n                                    value.toString().split('/n').map(d1 => <span key={d1}>{d1}</span>)\n                                }</div>\n                            </div>\n                        )\n                    })}                        \n            </div>\n        </div>\n    )\n}\n","import { json } from 'd3-fetch'\nimport { chain, countBy, max } from 'lodash'\nimport React, { useEffect, useRef } from 'react'\nimport './index.scss'\nimport moment from 'moment'\nimport { forceCenter, forceLink, forceManyBody, forceSimulation } from 'd3-force'\nimport { select } from 'd3-selection'\nimport CarTrack from '../components/carTrack'\nimport { findLocaiton, findLocationCoord } from '../utils'\nimport { card_car_dict, car_card_dict } from '../data/card_car_map'\n\n\nexport default function Cal() {\n\n    function calNode() {\n        return json('./data/gpswithstop.json').then(res => {\n            console.log(res)\n            const nodeData = res.map(d => ({\n                id: d.id,\n                data: d.stopArr.map(d1 => ({\n                    ...d1,\n                    location: findLocaiton([d1.long, d1.lat]),\n                })),\n            }))\n            console.log(nodeData)\n            const linksObj = {}\n            nodeData.forEach((d1) => {\n                nodeData.forEach(d2 => {\n                    if (d1.id === d2.id) return\n                    if (linksObj[`${d1.id}-${d2.id}`] || linksObj[`${d2.id}-${d1.id}`]) return\n                    // const sameLoaction = intersection(d1.location, d2.location)\n                    const sameLoaction = d1.data\n                        .filter(d3 => {\n                            if (!d3.location) return false\n                            const st1 = moment(d3.st).unix()\n                            const et1 = moment(d3.et).unix()\n                            const a = d2.data.filter(d4 => {\n                                const st2 = moment(d4.st).unix()\n                                const et2 = moment(d4.et).unix()\n                                // return (st1 < et2 && et1 > st2 ) && d3.location === d4.location\n                                return Math.abs(st1 - st2) < 3600 && d3.location === d4.location\n                            })\n                            return a.length\n                        })\n                    // const sameLoaction = []\n                    linksObj[`${d1.id}-${d2.id}`] = {\n                        source: d1.id,\n                        target: d2.id,\n                        d1: d1.id,\n                        d2: d2.id,\n                        value: sameLoaction.length,\n                        data: countBy(sameLoaction, 'location')\n                    }\n                })\n            })\n            const nodes = nodeData\n            const links = chain(linksObj).values().filter(d => d.value > 10).value()\n\n            console.log(chain(linksObj).values().orderBy('value', 'desc')\n            .map(d => ({\n                sourceId: d.d1,\n                targetId: d.d2,\n                value: d.value,\n                data: d.data,\n            })).value()\n            )\n\n            console.log(linksObj)\n            return [nodes, links]\n        })\n        // carAssign.reduce(d => {\n            \n        // })\n    }\n    const svgRef = useRef(null)\n\n    const [width, height] = [1000,600]\n    const [top, right, bottom, left] = [40, 20, 20, 60]\n\n    // useEffect(() => {\n    //     json('./data/merge_cc_and_loy.json').then(res => {\n    //         console.log(res)\n    //         // \n    //         // {消费时间\n    //             // 消费id\n    //             // （消费信用卡号）\n    //             // 消费金额\n    //             // 消费商店\n    //             // 消费对应车辆停留位置\n    //             // }\n    //         const cusom = res.map(d => {\n    //             return {\n    //                 ...d,\n    //                 id: card_car_dict[d.loyaltynum] || false,\n    //                 coor: findLocationCoord(d.location),\n    //             }\n    //         })\n    //         console.log(JSON.stringify(cusom))\n    //     })\n    // }, [])\n \n    useEffect(() => {\n        // calNode()\n        // .then(res => {\n        //     const [nodes, links] = res\n        //     console.log(nodes, links)\n        //     const value = max(links, d => d.value)\n        //     // console.log(value)\n        //     // console.log(links)\n        //     const force = forceSimulation(nodes)\n        //         .force('links', forceLink(links)\n        //             .id(d => d.id)\n        //             // .strength(d => 0.01 * d.value)\n        //             .distance(100)\n        //         )\n        //         .force('charge', forceManyBody())\n        //         .force('center', forceCenter(width / 2, height / 2))\n        //     const svg = select(svgRef.current)\n        //     const link = svg.append('g')\n        //         .selectAll('g')\n        //         .data(links)\n        //         .enter()\n        //         .append('line')\n        //         // .attr(\"stroke-width\", d => d.value)\n        //         .attr(\"stroke-width\", d => 1)\n        //         .attr(\"stroke\", '#e9e9e9');\n            \n        //     const node = svg.append('g')\n        //         .selectAll('g')\n        //         .data(nodes)\n        //         .enter()\n        //         .append('circle')\n        //         .attr('r', 5)\n        //         .attr('fill', 'red')\n            \n        //     force.on('tick', () => {\n        //         link\n        //             .attr(\"x1\", d => d.source.x)\n        //             .attr(\"y1\", d => d.source.y)\n        //             .attr(\"x2\", d => d.target.x)\n        //             .attr(\"y2\", d => d.target.y);\n\n        //         node\n        //             .attr(\"cx\", d => d.x)\n        //             .attr(\"cy\", d => d.y);\n        //     })\n        // })\n    }, [])\n    return (\n        <div>\n            <CarTrack />\n            <svg ref={svgRef}/>\n        </div>\n    )\n}\n","import { json } from 'd3-fetch'\nimport { geoEquirectangular, geoPath } from 'd3-geo'\nimport { scaleLinear, scaleOrdinal, scalePoint, scaleTime } from 'd3-scale'\nimport { line, schemeCategory10, brush, extent, easeLinear, axisTop, axisBottom, brushX, path } from 'd3'\nimport { select, selectAll, event } from 'd3-selection'\nimport { chain } from 'lodash'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport './index.scss'\nimport moment from 'moment'\nimport { carAssign, dayStr, storeMapType } from '../data/consumer_data'\nimport { building_coordinate } from '../data/buliding_coordinate'\nimport { calcualteTypeColor, calHourTime, findLocaiton } from '../utils'\n\nfunction pushOrPop(arr, d) {\n    const newArr = [...arr]\n    if (newArr.includes(d)) {\n        return newArr.filter(d1 => d1 !== d)\n    }\n    newArr.push(d)\n    return newArr\n}\n\nexport default function SecondQ() {\n    const [ width, height ] = [1000, 600]\n    const mapRef = useRef(null)\n    const trackRef = useRef(null)\n\n    const [map, setmap] = useState([])\n    const [allTrack, setAllTrack] = useState([])\n\n    const projection = useMemo(() => geoEquirectangular(), [])\n    const colorScale = useMemo(() => \n        scaleOrdinal()\n            .domain(allTrack.map(d => d.id))\n            .range(schemeCategory10)\n    ,[allTrack])\n\n\n    const [selectCar, setSelectCard] = useState([])\n    const [selectDay, setSelectDay] = useState(dayStr)\n    const [selectHour, setSelectHour] = useState(['00:00:00', '23:59:59'].map(d => calHourTime(d)))\n\n    const carArr = useMemo(() =>{\n        const res = chain(allTrack)\n            .map('id')\n            .uniq()\n            .map(d => {\n                const info = carAssign.find(d1 => d1.CarID === d)\n                if (info) {\n                    return {\n                        id: d,\n                        name: `${info.FirstName} ${info.LastName}`,\n                        type: info.CurrentEmploymentType,\n                        title: info.CurrentEmploymentTitle,\n                    }\n                }\n                return {\n                    id: d,\n                }\n            })\n            .value()\n        // setSelectCard(res.map(d => d.id))\n        return res\n    } ,[allTrack])\n\n    useEffect(() => {\n        json('./data/map.json').then(res => {\n            projection.fitSize([width, height], res)\n            window.projection = projection\n            setmap(res.features)\n            json('./data/gpswithstop.json').then(res => {\n                // calStopArr(projection)\n                setAllTrack(res)\n            })\n        })\n    }, [])\n\n    const brushRef = useRef(null)\n    useEffect(() => {\n        select(brushRef.current)\n            .call(\n                brush()\n                .extent([[0,0], [width, height]])\n                .on('end', e => {\n                    const {selection} = event\n                    if(!selection) {\n                        return \n                    }\n                    const arr = []\n                    console.log(selection.map(d => projection.invert(d)))\n                    selectAll('.stopDot')\n                        .filter(function () {\n                            return selection[0][0] <= select(this).attr('cx')\n                            && selection[1][0] >= select(this).attr('cx')\n                            && selection[0][1] <= select(this).attr('cy')\n                            && selection[1][1] >= select(this).attr('cy')\n                        })\n                        .each(function (){\n                            arr.push(JSON.parse(select(this).attr('data')))\n                        })\n\n                    console.log(arr)\n                })\n            )\n    }, [])\n\n    const showTrack = useMemo(() => {\n        return allTrack.filter(d => selectCar.includes(d.id))\n    }, [selectCar, allTrack])\n\n    const stopArr = useMemo(() => {\n        return chain(showTrack)\n            .map(d => d.stopArr)\n            .flatten()\n            .filter(d1 => selectDay.includes(d1.st.split(' ')[0]))\n            .filter(d1 => {\n                const hour = d1.st.split(' ')[1]\n                const thisTime = calHourTime(hour)\n                return thisTime >= selectHour[0] && thisTime <= selectHour[1]\n            })\n            .value()\n    }, [selectDay, selectHour, showTrack])\n\n    const stopCircleRScale = useMemo(() => {\n        const domain = showTrack.length ? extent(\n            chain(showTrack).map('stopArr').flatten().value(),\n            d => d.gap\n        ) : [0, 0]\n        return scaleLinear()\n            .domain(domain)\n            .range([5, 5])\n    }, [showTrack])\n\n\n    const [tooltip, setTooltip] = useState({\n        style: {\n            display: 'none',\n        },\n        content: {\n            \n        },\n    })\n\n    function mouseenter(e, content) {\n        setTooltip({\n            style: {\n                display: 'block',\n                left: e.clientX + 10,\n                top: e.clientY + 10,\n            },\n            content,\n        })\n    }\n    \n\n    function play() {\n        selectAll('.trackItem')\n            .each(function(){\n                const path = select(this).select('.path')\n                const length = path.node().getTotalLength()\n                path\n                    .attr(\"stroke-dasharray\", length + \" \" + length)\n                    .attr(\"stroke-dashoffset\", length)\n                    .transition()\n                    .ease(easeLinear)\n                    .attr(\"stroke-dashoffset\", 0)\n                    .duration(10000)\n\n                const arrow = select(this).select('.arrow')\n                arrow\n                    .attr(\"stroke-width\", 10)\n                    .attr(\"stroke-dasharray\", function() {\n                    return [10, length - 10];\n                    })\n                    .attr(\"stroke-dashoffset\", length)\n                    .transition()\n                    .ease(easeLinear)\n                    .attr(\"stroke-dashoffset\", 10 + .5)\n                    .duration(10000)\n                // .on(\"end\", () => setTimeout(repeat, 1000));\n            })\n    }\n\n    return (\n        <div className='second-graph'>\n            <div>\n            <img src='./data/bg.jpeg' className='realMap' alt='map' />\n            </div>\n            \n            <div className='tooltip' style={tooltip.style}>\n                {Object.entries(tooltip.content).map(d => {\n                    const [key, value] = d\n                    return (\n                        <div className='tooltip-item' key={key}>\n                            <span className='tooltips-label'>{key}: </span>\n                            <span className='tooltips-value'>{value}</span>\n                        </div>\n                    )\n                })}\n            </div>\n            <div className='mapcontainer'>\n                <svg height={height} width={width} className='mapSvg'>\n                    <g className=\"bg\">\n                        <g className=\"map\" ref={mapRef}>\n                            {map.map((d, i) => (\n                                <path key={i} className='map-item' d={geoPath(projection)(d)}/>\n                            ))}\n                        </g>\n                        <g ref={brushRef} />\n                        <g className=\"track\" ref={trackRef}>\n                            {showTrack\n                                .map(d => {\n                                    const { id, data } = d\n                                    const geoArr = data\n                                        .filter(d1 => selectDay.includes(d1.Timestamp.split(' ')[0]))\n                                        .filter(d1 => {\n                                            const hour = d1.Timestamp.split(' ')[1]\n                                            const thisTime = calHourTime(hour)\n                                            return thisTime >= selectHour[0] && thisTime <= selectHour[1]\n                                        })\n                                        .map(d1 => projection([d1.long, d1.lat]))\n\n                                    const attr = {\n                                        stroke: colorScale(id),\n                                        d: line()(geoArr),\n                                        className: 'path'\n                                    }\n                                    const attr2 = {\n                                        strokeWidth: 10,\n                                        className: 'arrow',\n                                        d: line()(geoArr),\n                                        strokeDasharray: [10, 100000 - 10],\n                                    }\n                                    return (\n                                        <g className={`trackItem trackItem-${id}`} key={id}>\n                                            <path {...attr} />\n                                            <path {...attr2} />\n                                        </g>\n                                    )\n                                }\n                            )}\n                        </g>\n                        <g className=\"stop\">\n                            {stopArr.map((d,i) => {\n                                const { id, long, lat, gap } = d\n                                const [cx, cy] = projection([long, lat])\n                                const keyItem = `${long}_${lat}_${id}`\n                                const className = `stopitem_${keyItem}`\n                                const attr = {\n                                    cx, cy,\n                                    r: stopCircleRScale(gap),\n                                    key: keyItem,\n                                    fill: colorScale(id),\n                                    stroke: colorScale(id),\n                                    // fill: 'red',\n                                    className: `stopDot ${className}`,\n                                    data: JSON.stringify(d),\n                                }\n                                return (\n                                    <circle {...attr}/>\n                                )\n                            })}\n                        </g>\n                        <g className='store'>\n                            {building_coordinate.map(d => {\n                                const {range, name} = d\n                                const cpname = name.replace(/'|\\.|\\s/g, '')\n                                const [x1, y1] = projection(range[0])\n                                const [x2, y2] = projection(range[1])\n                                const rectAttr = {\n                                    x: x1,\n                                    y: y1,\n                                    height: y2 - y1,\n                                    width: x2 - x1,\n                                    fill: calcualteTypeColor(d.classify),\n                                    stroke: calcualteTypeColor(d.classify),\n                                    fillOpacity: .3,\n                                    onMouseEnter: () => {\n                                        select(`.${cpname}_label`).attr('display', null)\n                                    },\n                                    onMouseOut: () => {\n                                        select(`.${cpname}_label`).attr('display', 'none')\n                                    }\n                                }\n                                const textAttr = {\n                                    x: x1 + (x2 - x1) / 2,\n                                    y: y1 - 10,\n                                    textAnchor: 'middle',\n                                    fontSize: '12px',\n                                    fontWeight: 'bolder',\n                                    display: 'none',\n                                    className: `${cpname}_label`,\n                                    TextEvent: 'none',\n                                }\n\n                                const gAttr = {\n                                    key: `store-${name}`,\n                                }\n                                return (\n                                    <g {...gAttr}>\n                                        <rect {...rectAttr} />\n                                        <text {...textAttr}>{name}</text>\n                                    </g>\n                                )\n                            })}\n                        </g>\n                    </g>\n                </svg>\n                <div className=\"carlist\">\n                    <table>\n                        <thead>\n                            <th>Color</th>\n                            <th>CarID</th>\n                            <th>Staff</th>\n                        </thead>\n                        <tbody>\n                            {\n                                carArr.map(d => (\n                                    <tr\n                                        key={d.id}\n                                        className={`${selectCar.includes(d.id) ? 'active' : 0}`}\n                                        onClick={() => {\n                                            const newSelectCar = pushOrPop(selectCar, d.id)\n                                            setSelectCard(newSelectCar)\n                                        }}\n                                    >\n                                        <td><div className='color-legend' style={{\n                                            background: colorScale(d.id)\n                                        }}/></td>\n                                        <td>{d.id}</td>\n                                        <td>{d.name}</td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className='second'>\n                <SplitTrack\n                    GasData={allTrack.filter(d => selectCar.includes(d.id))}\n                    selectDay = {selectDay}\n                    selectDayCB = {d => {setSelectDay(d)}}\n                    brushCB = {hourArr => setSelectHour(hourArr.map(d => calHourTime(d)))}\n                    playCB = {play}\n                />\n                {/* <FirstQ /> */}\n            </div>\n        </div>\n    )\n}\n\n\nfunction SplitTrack({ \n    GasData, selectDay, selectDayCB,\n    brushCB,\n    playCB,\n }) {\n    const [width, height] = [1000, 500]\n    const [top, right, bottom, left] = [20,100,20,20]\n    const realHeight = height - top - bottom\n    const realWidth = width - left - right\n\n    const topRef = useRef(null)\n    const bottomRef = useRef(null)\n    const brushRef = useRef(null)\n\n    const xScale = scaleTime()\n        .domain([new Date('2020-01-01 00:00:00'), new Date('2020-01-01 23:59:59')])\n        .range([0, realWidth])\n        \n    const topAxis = axisTop().scale(xScale)\n    const bottomAxis = axisBottom().scale(xScale)\n\n    useEffect(() => {\n        select(topRef.current).call(topAxis)\n        select(bottomRef.current).call(bottomAxis)\n        select(brushRef.current).call(\n            brushX()\n            .extent([[0,0], [realWidth, realHeight]])\n            .on('end', () => {\n                const { selection } = event\n                if (selection) {\n                    const timeArr = selection.map(d => xScale.invert(d)).map(d => moment(d).format('HH:mm:ss'))\n                    brushCB(timeArr)\n                    console.log(timeArr)\n                } else {\n                    brushCB(['00:00:00', '23:59:59'])\n                }\n            })\n        )\n    }, [])\n\n    const axisPosScale = scalePoint()\n        .domain(dayStr)\n        .range([realHeight / dayStr.length, realHeight])\n        .align(1)\n\n    const gpsArr = useMemo(() => {\n        // console.log(GasData)\n       const result = chain(GasData)\n        .cloneDeep()\n        .forEach(trackItem => {\n            const { data, stopArr } = trackItem\n            trackItem.day = chain(dayStr)\n                .reduce((obj, day) => {\n                    obj[day] = {\n                        track: data.filter(d => d.Timestamp.split(' ')[0] === day),\n                        stopDot: stopArr.filter(d => d.st.split(' ')[0] === day),\n                    }\n                    return obj\n                }, {})\n                .value()\n        })\n        .value()\n        // console.log(result[0].day['01/09/2014'])\n        return result\n    }, [GasData])\n\n    const gap = axisPosScale.step()\n\n    const xItem = useMemo(() => {\n        return scalePoint()\n            .domain(GasData.map(d => d.id))\n            .range([0, gap])\n            .align(0)\n    }, [GasData])\n\n    return (\n        <div className='explain'>\n            <div className='toolbox'>\n                <button onClick={() => {\n                    playCB()\n                    select('.scaleplate')\n                        .attr(\"x1\", 0)\n                        .attr(\"x2\", 0)\n                        .transition()\n                        .ease(easeLinear)\n                        .attr(\"x1\", realWidth)\n                        .attr(\"x2\", realWidth)\n                        .duration(10000)\n                    select('.scaleplate')\n                        .transition()\n                        .attr(\"x1\", 0)\n                        .attr(\"x2\", 0)\n                        .delay(10000)\n\n                }}>\n                    play\n                </button>\n                <input type='checkbox' id='checkall' onChange={e => {\n                    const val = e.target.checked\n                    if (val) {\n                        selectDayCB(dayStr)\n                    } else {\n                        selectDayCB([])\n                    }\n\n                }}/>\n                <label htmlFor=\"checkall\">全选</label>\n            </div>\n            <svg width={width} height={height} className='timeScale'>\n                <g className=\"bg\" transform={`translate(${left}, ${top})`}>\n                    {/* 坐标 */}\n                    <g ref={topRef} />\n                    <g ref={bottomRef} transform={`translate(0, ${realHeight})`}  />\n                    {/* time split */}\n                    <line className='scaleplate' x1={0} y1={0} x2={0} y2={realHeight} />\n                    {/* brush */}\n                    <g className=\"brush\" ref={brushRef} />\n                    {/* day */}\n                    {dayStr.map(d => {\n                        const className = selectDay.includes(d) ? '' : 'disabled'\n                        return (\n                            <g transform={`translate(${0}, ${axisPosScale(d)})`} className={`dayItem ${className}`} key={d}>\n                                <line  x1={0} y1={0} x2={realWidth} y2={0}/>\n                                <text onClick={() => {\n                                    const newDay = pushOrPop(selectDay, d)\n                                    selectDayCB(d)\n                                }} transform={`translate(${realWidth + 10}, ${-gap / 2})`}>{d}</text>\n                            </g>\n                        )\n                    })}\n                    {/* gps */}\n                    {\n                        gpsArr.map((carItem, index) => {\n                            const { day, id } = carItem\n                            return Object.entries(day)\n                                .map(dayitem => {\n                                    const [dayName, data] = dayitem\n                                    const { stopDot } = data\n                                    const pathFun = path()\n                                    \n                                    stopDot.forEach((d, i) => {\n                                        const x1 = xScale(new Date(`2020-01-01 ${d.st.split(' ')[1]}`))\n                                        const x2 = xScale(new Date(`2020-01-01 ${d.et.split(' ')[1]}`))\n                                        if (i === 0) pathFun.moveTo(x1, 0)\n                                        pathFun.lineTo(x1, 0)\n                                        pathFun.lineTo(x1, -10)\n                                        if (d.et.split(' ')[0] === dayName) {\n                                            pathFun.lineTo(x2, -10)\n                                            pathFun.lineTo(x2, -0)\n                                        }\n                                    })\n                                    console.log(xItem(id))\n                                    const y2 = gap / (gpsArr.length + 1) * (index + 1)\n                                    return (\n                                        <g transform={`translate(${0}, ${axisPosScale(dayName) - gap + y2})`} key={`${dayName}-${id}`}>\n                                                {\n                                                    stopDot.map(stopItem => {\n                                                        const location = findLocaiton([stopItem.long, stopItem.lat])\n                                                        const sx = xScale(new Date(`2020-01-01 ${stopItem.st.split(' ')[1]}`))\n                                                        let ex = xScale(new Date(`2020-01-01 ${stopItem.et.split(' ')[1]}`))\n                                                        if(ex < sx) ex = xScale(new Date(`2020-01-01 23:59:59`))\n                                                        \n                                                        const locationType = location ? storeMapType[location] : 'location'\n\n                                                        const rectAttr = {\n                                                            x1: 0,\n                                                            y1: 0,\n                                                            x2: ex-sx,\n                                                            y2: 0,\n                                                            // width: ex-sx,\n                                                            strokeWidth: 2,\n                                                            fill: calcualteTypeColor(locationType),\n                                                            stroke: calcualteTypeColor(locationType),\n                                                            className: 'stopItem',\n                                                            fillOpacity: .2,\n                                                            rx: 5,\n                                                            ry: 5,\n                                                        }\n                                                        const textAttr = {\n                                                            fontSize: 6,\n                                                            x: (ex-sx)/2,\n                                                            y: -6,\n                                                            textAnchor: 'middle',\n                                                            className: 'stopItemLabel'\n                                                        }\n                                                        return (\n                                                            <g transform={`translate(${sx}, ${0})`}  key={`${dayName}-${id}-${sx}`}>\n                                                                <text {...textAttr}>{location ? location.split(' ').map(d => d[0]).join('-') : ''}</text>\n                                                                <line {...rectAttr}>\n                                                                    <title>\n                                                                        {\n                                                                            `时间: ${stopItem.st.split(' ')[1]}--${stopItem.et.split(' ')[1]}\\n地点: ${location}\\n汽车: ${id}\\n消费: ...`\n                                                                        }\n                                                                    </title>\n                                                                </line>\n                                                            </g>\n                                                        )\n                                                    })\n                                                }\n                                        </g>\n                                    )\n                                })\n                        })\n                    }\n                </g>\n            </svg>\n        </div>\n    )\n}","import { HashRouter as Router, Link, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport ConsumerGraph from './components/consumerGraph';\nimport Cal from './dataCal';\nimport SecondQ from './secondQ';\n\nfunction Content({children}) {\n  return <div>\n    {children}\n  </div>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* <ConsusePage /> */}\n        <div className='nav'>\n            <Link to=\"/first\">first Q</Link>\n            <Link to=\"/map\">map</Link>\n            <Link to=\"/cal\">cal</Link>\n        </div>\n        <Content>\n          <Switch>\n            <Route path=\"/first\">\n              <ConsumerGraph />\n            </Route>\n            <Route path=\"/map\">\n              <SecondQ />\n            </Route>\n            <Route path=\"/cal\">\n              <Cal />\n            </Route>\n            <Redirect from='/' to='/first' />\n          </Switch>\n        </Content>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}